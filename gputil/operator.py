from abc import ABC, abstractmethod
from gputil.tree import *


# ==============================================================================================================
# SELECTION
# ==============================================================================================================


class Selection(ABC):
    @abstractmethod
    def select(self, population: List[PrimitiveTree]):
        pass


# ==============================================================================================================
# CROSSOVER
# ==============================================================================================================


class Crossover(ABC):
    @abstractmethod
    def cross(self, tree_1: PrimitiveTree, tree_2: PrimitiveTree):
        pass


# ==============================================================================================================
# MUTATION
# ==============================================================================================================


class Mutation(ABC):
    @abstractmethod
    def mute(self, tree: PrimitiveTree):
        pass


