,generation,parsable_tree,latex_tree,accuracy,interpretability,seed,pop_size,num_gen,num_offsprings,encoder_type,ground_truth_type,sampling,warm-up,data
0,0,"[+, u-, **3, /, **2, x_4, x_4, *, exp, sqrt, /, x_9, x_9, x_3]",(-((((x_4)**2/x_4))**3)+(exp(sqrt(abs((x_9/x_9))))*x_3)),5826.18701171875,-0.025491708889603615,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1,0,"[**2, /, +, **2, x_0, **2, x_9, **3, **3, +, x_8, x_9]",((((x_0)**2+(x_9)**2)/(((x_8+x_9))**3)**3))**2,6124.158203125,-0.026708286255598068,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
2,0,"[/, **2, **2, u-, x_9, cos, /, u-, x_2, **, x_6, x_9]",(((-(x_9))**2)**2/cos((-(x_2)/(x_6**x_9)))),6136.2568359375,-0.028045816347002983,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
3,0,"[+, u-, u-, cos, x_6, x_1]",(-(-(cos(x_6)))+x_1),4060.1044921875,-0.015355170704424381,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
4,0,[x_8],x_8,5173.40966796875,-0.020014625042676926,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
5,1,"[+, u-, **3, /, **2, x_4, x_4, *, exp, sqrt, /, x_9, x_9, x_3]",(-((((x_4)**2/x_4))**3)+(exp(sqrt(abs((x_9/x_9))))*x_3)),5826.18701171875,-0.025491708889603615,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
6,1,"[**2, /, +, **2, x_0, **2, x_9, **3, **3, +, x_8, x_9]",((((x_0)**2+(x_9)**2)/(((x_8+x_9))**3)**3))**2,6124.158203125,-0.026708286255598068,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
7,1,"[/, **2, **2, u-, x_9, cos, /, u-, x_2, **, x_6, x_9]",(((-(x_9))**2)**2/cos((-(x_2)/(x_6**x_9)))),6136.2568359375,-0.028045816347002983,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
8,1,"[+, u-, u-, **2, 0.82, x_1]",(-(-((0.82)**2))+x_1),4031.79248046875,-0.019226588308811188,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
9,1,"[+, u-, +, -, x_4, u-, x_7, x_2, *, sin, u-, /, x_8, x_9, **2, x_7]",(-(((x_4--(x_7))+x_2))+(sin(-((x_8/x_9)))*(x_7)**2)),4370.34912109375,-0.02273733541369438,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
10,2,"[+, u-, u-, **2, 0.82, x_1]",(-(-((0.82)**2))+x_1),4031.79248046875,-0.019226588308811188,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
11,2,"[+, u-, +, -, x_4, u-, x_7, x_2, *, sin, u-, /, x_8, x_9, **2, x_7]",(-(((x_4--(x_7))+x_2))+(sin(-((x_8/x_9)))*(x_7)**2)),4370.34912109375,-0.02273733541369438,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
12,2,"[+, u-, *, **3, x_3, **3, u-, x_7, x_1]",(-(((x_3)**3*(-(x_7))**3))+x_1),4031.790771484375,-0.012121770530939102,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
13,2,"[**2, u-, exp, u-, *, x_8, x_9]",(-(exp(-((x_8*x_9)))))**2,5804.97412109375,-0.02663993090391159,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
14,2,"[+, u-, **3, /, **2, x_4, x_4, *, exp, sqrt, /, x_9, x_9, u-, **3, x_4]",(-((((x_4)**2/x_4))**3)+(exp(sqrt(abs((x_9/x_9))))*-((x_4)**3))),6055.1064453125,-0.028610602021217346,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
15,2,"[**3, -, sqrt, **3, *, x_5, x_9, sin, *, **2, x_9, x_5]",((sqrt(abs(((x_5*x_9))**3))-sin(((x_9)**2*x_5))))**3,5706.69873046875,-0.024120815098285675,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
16,2,"[/, **2, **2, u-, x_9, **2, cos, /, u-, x_3, x_3]",(((-(x_9))**2)**2/(cos((-(x_3)/x_3)))**2),6123.3125,-0.03113989159464836,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
17,3,"[+, u-, u-, **2, 0.82, x_1]",(-(-((0.82)**2))+x_1),4031.79248046875,-0.019226588308811188,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
18,3,"[+, u-, +, -, x_4, u-, x_7, x_2, *, sin, u-, /, x_8, x_9, **2, x_7]",(-(((x_4--(x_7))+x_2))+(sin(-((x_8/x_9)))*(x_7)**2)),4370.34912109375,-0.02273733541369438,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
19,3,"[+, u-, *, **3, x_3, **3, u-, x_7, x_1]",(-(((x_3)**3*(-(x_7))**3))+x_1),4031.790771484375,-0.012121770530939102,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
20,3,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
21,3,"[/, **2, **2, u-, x_9, **2, cos, /, u-, x_4, **, x_8, x_5]",(((-(x_9))**2)**2/(cos((-(x_4)/(x_8**x_5))))**2),6122.97509765625,-0.035226382315158844,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
22,3,"[/, *, *, u-, x_1, **2, **2, x_9, **, x_9, exp, log, x_3, u-, *, **2, x_10, sqrt, *, x_9, x_4]",(((-(x_1)*((x_9)**2)**2)*(x_9**exp(log(abs(x_3)))))/-(((x_10)**2*sqrt(abs((x_9*x_4)))))),5281.75537109375,-0.03286077082157135,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
23,4,"[+, u-, u-, **2, 0.82, x_1]",(-(-((0.82)**2))+x_1),4031.79248046875,-0.019226588308811188,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
24,4,"[+, u-, +, -, x_4, u-, x_7, x_2, *, sin, u-, /, x_8, x_9, **2, x_7]",(-(((x_4--(x_7))+x_2))+(sin(-((x_8/x_9)))*(x_7)**2)),4370.34912109375,-0.02273733541369438,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
25,4,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
26,4,"[/, **2, **2, u-, x_9, **2, cos, /, u-, x_4, **, x_8, x_5]",(((-(x_9))**2)**2/(cos((-(x_4)/(x_8**x_5))))**2),6122.97509765625,-0.035226382315158844,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
27,4,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
28,4,"[/, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, u-, **3, exp, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)/-((exp(x_4))**3)),5279.82080078125,-0.03518046438694,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
29,4,"[+, x_1, cos, sqrt, **3, *, x_5, x_9]",(x_1+cos(sqrt(abs(((x_5*x_9))**3)))),4031.311767578125,-0.013924488797783852,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
30,5,"[+, u-, +, -, x_4, u-, x_7, x_2, *, sin, u-, /, x_8, x_9, **2, x_7]",(-(((x_4--(x_7))+x_2))+(sin(-((x_8/x_9)))*(x_7)**2)),4370.34912109375,-0.02273733541369438,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
31,5,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
32,5,"[/, **2, **2, u-, x_9, **2, cos, /, u-, x_4, **, x_8, x_5]",(((-(x_9))**2)**2/(cos((-(x_4)/(x_8**x_5))))**2),6122.97509765625,-0.035226382315158844,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
33,5,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
34,5,"[/, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, u-, **3, exp, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)/-((exp(x_4))**3)),5279.82080078125,-0.03518046438694,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
35,5,"[/, x_6, **2, u-, cos, **2, x_0]",(x_6/(-(cos((x_0)**2)))**2),4981.8955078125,-0.02417663484811783,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
36,5,"[+, u-, *, **3, x_4, **2, cos, x_7, x_1]",(-(((x_4)**3*(cos(x_7))**2))+x_1),4028.817626953125,-0.016686556860804558,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
37,5,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, 0.89, sqrt, x_10, exp, log, x_4, u-, **2, cos, -, x_5, x_3]",(((-(x_1)*((x_9)**2)**2)*(((0.89)**2/sqrt(abs(x_10)))**exp(log(abs(x_4)))))/-((cos((x_5-x_3)))**2)),5240.92919921875,-0.026017475873231888,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
38,5,[x_1],x_1,4031.79248046875,-0.02094537578523159,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
39,5,"[*, log, **, x_5, **2, **2, x_4, *, **2, x_9, sqrt, *, x_9, x_4]",(log(abs((x_5**((x_4)**2)**2)))*((x_9)**2*sqrt(abs((x_9*x_4))))),6136.669921875,-0.0368693582713604,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
40,5,"[+, u-, *, cos, sqrt, x_5, **3, u-, x_7, x_1]",(-((cos(sqrt(abs(x_5)))*(-(x_7))**3))+x_1),4019.7255859375,-0.012995203025639057,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
41,6,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
42,6,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
43,6,"[/, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, u-, **3, exp, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)/-((exp(x_4))**3)),5279.82080078125,-0.03518046438694,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
44,6,"[+, u-, *, **3, x_4, **2, cos, x_7, x_1]",(-(((x_4)**3*(cos(x_7))**2))+x_1),4028.817626953125,-0.016686556860804558,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
45,6,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, 0.89, sqrt, x_10, exp, log, x_4, u-, **2, cos, -, x_5, x_3]",(((-(x_1)*((x_9)**2)**2)*(((0.89)**2/sqrt(abs(x_10)))**exp(log(abs(x_4)))))/-((cos((x_5-x_3)))**2)),5240.92919921875,-0.026017475873231888,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
46,6,[x_1],x_1,4031.79248046875,-0.02094537578523159,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
47,6,"[+, u-, *, cos, sqrt, x_5, **3, u-, x_7, x_1]",(-((cos(sqrt(abs(x_5)))*(-(x_7))**3))+x_1),4019.7255859375,-0.012995203025639057,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
48,6,"[+, x_1, *, sin, u-, /, x_8, x_9, **2, x_7]",(x_1+(sin(-((x_8/x_9)))*(x_7)**2)),4073.150634765625,-0.02547144517302513,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
49,6,"[/, *, *, u-, x_1, **2, **2, x_9, **, x_9, **2, x_2, **2, u-, x_9]",(((-(x_1)*((x_9)**2)**2)*(x_9**(x_2)**2))/(-(x_9))**2),5281.75537109375,-0.03977394849061966,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
50,7,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
51,7,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
52,7,"[/, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, u-, **3, exp, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)/-((exp(x_4))**3)),5279.82080078125,-0.03518046438694,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
53,7,"[+, u-, *, **3, x_4, **2, cos, x_7, x_1]",(-(((x_4)**3*(cos(x_7))**2))+x_1),4028.817626953125,-0.016686556860804558,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
54,7,[x_1],x_1,4031.79248046875,-0.02094537578523159,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
55,7,"[+, x_1, *, sin, u-, /, x_8, x_9, **2, x_7]",(x_1+(sin(-((x_8/x_9)))*(x_7)**2)),4073.150634765625,-0.02547144517302513,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
56,7,"[/, *, *, u-, x_1, **2, **2, x_9, **, x_9, **2, x_2, **2, u-, x_9]",(((-(x_1)*((x_9)**2)**2)*(x_9**(x_2)**2))/(-(x_9))**2),5281.75537109375,-0.03977394849061966,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
57,7,"[+, u-, *, u-, x_1, **2, **2, x_9, x_1]",(-((-(x_1)*((x_9)**2)**2))+x_1),4417.8349609375,-0.027904879301786423,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
58,7,"[+, x_1, *, sin, +, x_6, x_3, **2, x_7]",(x_1+(sin((x_6+x_3))*(x_7)**2)),4018.96240234375,-0.01394313108175993,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
59,7,"[+, x_1, cos, **2, x_4]",(x_1+cos((x_4)**2)),4031.34375,-0.016867537051439285,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
60,7,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
61,7,"[+, u-, *, **3, x_4, **2, sin, x_8, x_1]",(-(((x_4)**3*(sin(x_8))**2))+x_1),4031.77294921875,-0.016927644610404968,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
62,8,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
63,8,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
64,8,"[/, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, u-, **3, exp, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)/-((exp(x_4))**3)),5279.82080078125,-0.03518046438694,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
65,8,"[/, *, *, u-, x_1, **2, **2, x_9, **, x_9, **2, x_2, **2, u-, x_9]",(((-(x_1)*((x_9)**2)**2)*(x_9**(x_2)**2))/(-(x_9))**2),5281.75537109375,-0.03977394849061966,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
66,8,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
67,8,"[+, u-, +, -, x_7, u-, x_7, x_2, *, sin, **2, **2, x_9, **2, x_7]",(-(((x_7--(x_7))+x_2))+(sin(((x_9)**2)**2)*(x_7)**2)),3875.458251953125,-0.028870554640889168,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
68,8,"[-, u-, *, **2, u-, x_1, sqrt, *, x_9, x_5, -, **2, x_3, u-, -, /, x_7, x_9, log, x_7]",(-(((-(x_1))**2*sqrt(abs((x_9*x_5)))))-((x_3)**2--(((x_7/x_9)-log(abs(x_7)))))),5056.8984375,-0.03272324427962303,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
69,9,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
70,9,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
71,9,"[/, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, u-, **3, exp, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)/-((exp(x_4))**3)),5279.82080078125,-0.03518046438694,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
72,9,"[/, *, *, u-, x_1, **2, **2, x_9, **, x_9, **2, x_2, **2, u-, x_9]",(((-(x_1)*((x_9)**2)**2)*(x_9**(x_2)**2))/(-(x_9))**2),5281.75537109375,-0.03977394849061966,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
73,9,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
74,9,"[+, u-, +, -, x_7, u-, x_7, x_2, *, sin, **2, **2, x_9, **2, x_7]",(-(((x_7--(x_7))+x_2))+(sin(((x_9)**2)**2)*(x_7)**2)),3875.458251953125,-0.028870554640889168,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
75,9,"[+, u-, *, u-, x_9, **2, **2, x_9, *, sin, **2, **2, x_9, **2, x_7]",(-((-(x_9)*((x_9)**2)**2))+(sin(((x_9)**2)**2)*(x_7)**2)),6123.44140625,-0.04696758836507797,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
76,9,"[+, u-, +, u-, exp, x_7, u-, x_8, x_1]",(-((-(exp(x_7))+-(x_8)))+x_1),3544.345703125,-0.013133890926837921,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
77,9,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_8, u-, **2, x_0]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_8)**2)**2))/-((x_0)**2)),5977.38037109375,-0.045265041291713715,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
78,9,"[/, *, *, u-, x_1, **2, **2, x_10, **, x_9, **2, x_2, **2, u-, x_9]",(((-(x_1)*((x_10)**2)**2)*(x_9**(x_2)**2))/(-(x_9))**2),4852.87646484375,-0.03372061252593994,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
79,10,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
80,10,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
81,10,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
82,10,"[+, u-, +, -, x_7, u-, x_7, x_2, *, sin, **2, **2, x_9, **2, x_7]",(-(((x_7--(x_7))+x_2))+(sin(((x_9)**2)**2)*(x_7)**2)),3875.458251953125,-0.028870554640889168,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
83,10,"[+, u-, *, u-, x_9, **2, **2, x_9, *, sin, **2, **2, x_9, **2, x_7]",(-((-(x_9)*((x_9)**2)**2))+(sin(((x_9)**2)**2)*(x_7)**2)),6123.44140625,-0.04696758836507797,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
84,10,"[+, u-, +, u-, exp, x_7, u-, x_8, x_1]",(-((-(exp(x_7))+-(x_8)))+x_1),3544.345703125,-0.013133890926837921,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
85,10,"[/, *, *, u-, x_1, **2, **2, x_10, **, x_9, **2, x_2, **2, u-, x_9]",(((-(x_1)*((x_10)**2)**2)*(x_9**(x_2)**2))/(-(x_9))**2),4852.87646484375,-0.03372061252593994,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
86,10,"[/, *, *, u-, x_4, **2, u-, x_5, **, /, **2, x_4, sqrt, x_4, exp, log, x_4, u-, *, u-, u-, x_0, **2, **2, x_9]",(((-(x_4)*(-(x_5))**2)*(((x_4)**2/sqrt(abs(x_4)))**exp(log(abs(x_4)))))/-((-(-(x_0))*((x_9)**2)**2))),6134.63818359375,-0.04716868698596954,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
87,10,"[-, u-, *, **2, **2, x_9, sqrt, *, x_9, x_5, -, **2, x_3, u-, -, /, x_7, x_9, log, x_7]",(-((((x_9)**2)**2*sqrt(abs((x_9*x_5)))))-((x_3)**2--(((x_7/x_9)-log(abs(x_7)))))),5056.8984375,-0.042246729135513306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
88,10,"[*, log, **, x_5, **2, **2, x_4, *, *, **2, x_9, x_9, /, x_9, -, **2, x_8, u-, x_4]",(log(abs((x_5**((x_4)**2)**2)))*(((x_9)**2*x_9)*(x_9/((x_8)**2--(x_4))))),5901.9560546875,-0.045645326375961304,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
89,11,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
90,11,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
91,11,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
92,11,"[+, u-, +, -, x_7, u-, x_7, x_2, *, sin, **2, **2, x_9, **2, x_7]",(-(((x_7--(x_7))+x_2))+(sin(((x_9)**2)**2)*(x_7)**2)),3875.458251953125,-0.028870554640889168,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
93,11,"[-, u-, *, **2, **2, x_9, sqrt, *, x_9, x_5, -, **2, x_3, u-, -, /, x_7, x_9, log, x_7]",(-((((x_9)**2)**2*sqrt(abs((x_9*x_5)))))-((x_3)**2--(((x_7/x_9)-log(abs(x_7)))))),5056.8984375,-0.042246729135513306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
94,11,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **, x_8, x_5, **2, **2, *, x_10, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_8**x_5)))-(((x_10*x_9))**2)**2)),6090.83642578125,-0.047636255621910095,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
95,11,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, -, /, **2, x_5, /, x_0, **2, x_4, **2, **2, x_4]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((x_5)**2/(x_0/(x_4)**2))-((x_4)**2)**2)),6137.7939453125,-0.04931969195604324,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
96,11,"[/, *, *, u-, x_1, **, x_5, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, u-, *, log, exp, x_5, sqrt, *, x_9, x_4]",(((-(x_1)*(x_5**(x_6/2.73)))*(x_9**-((x_9*x_9))))/-((log(abs(exp(x_5)))*sqrt(abs((x_9*x_4)))))),4835.95166015625,-0.03374189883470535,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
97,11,"[/, *, *, u-, x_7, **2, **2, x_9, **2, u-, x_9, u-, **3, **2, +, x_5, x_4]",(((-(x_7)*((x_9)**2)**2)*(-(x_9))**2)/-((((x_5+x_4))**2)**3)),5678.45751953125,-0.047145165503025055,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
98,11,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
99,12,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
100,12,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
101,12,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
102,12,"[+, u-, +, -, x_7, u-, x_7, x_2, *, sin, **2, **2, x_9, **2, x_7]",(-(((x_7--(x_7))+x_2))+(sin(((x_9)**2)**2)*(x_7)**2)),3875.458251953125,-0.028870554640889168,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
103,12,"[-, u-, *, **2, **2, x_9, sqrt, *, x_9, x_5, -, **2, x_3, u-, -, /, x_7, x_9, log, x_7]",(-((((x_9)**2)**2*sqrt(abs((x_9*x_5)))))-((x_3)**2--(((x_7/x_9)-log(abs(x_7)))))),5056.8984375,-0.042246729135513306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
104,12,"[/, *, *, u-, x_1, **, x_5, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, u-, *, log, exp, x_5, sqrt, *, x_9, x_4]",(((-(x_1)*(x_5**(x_6/2.73)))*(x_9**-((x_9*x_9))))/-((log(abs(exp(x_5)))*sqrt(abs((x_9*x_4)))))),4835.95166015625,-0.03374189883470535,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
105,12,"[/, *, *, u-, x_7, **2, **2, x_9, **2, u-, x_9, u-, **3, **2, +, x_5, x_4]",(((-(x_7)*((x_9)**2)**2)*(-(x_9))**2)/-((((x_5+x_4))**2)**3)),5678.45751953125,-0.047145165503025055,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
106,12,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
107,12,"[/, *, *, u-, *, x_5, x_9, **2, **2, x_9, **3, x_9, **2, u-, x_9]",(((-((x_5*x_9))*((x_9)**2)**2)*(x_9)**3)/(-(x_9))**2),5507.3203125,-0.046417802572250366,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
108,12,"[+, u-, *, x_9, **2, **2, x_4, x_1]",(-((x_9*((x_4)**2)**2))+x_1),4031.949462890625,-0.02994842268526554,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
109,12,"[*, **, *, u-, x_7, **2, **2, x_9, /, u-, x_0, -, **2, x_9, x_5, -, /, **2, x_5, /, x_0, **, x_8, x_4, **2, **2, *, x_6, x_9]",(((-(x_7)*((x_9)**2)**2)**(-(x_0)/((x_9)**2-x_5)))*(((x_5)**2/(x_0/(x_8**x_4)))-(((x_6*x_9))**2)**2)),6083.76904296875,-0.049973264336586,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
110,12,"[/, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, -, **2, x_3, u-, -, /, x_7, x_9, log, x_7]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)/((x_3)**2--(((x_7/x_9)-log(abs(x_7)))))),5248.45654296875,-0.04496597498655319,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
111,12,"[-, *, *, u-, x_4, **2, **2, x_9, **, /, **2, x_4, sqrt, x_4, exp, log, x_4, -, **2, *, x_9, x_4, x_1]",(((-(x_4)*((x_9)**2)**2)*(((x_4)**2/sqrt(abs(x_4)))**exp(log(abs(x_4)))))-(((x_9*x_4))**2-x_1)),4862.86962890625,-0.041949380189180374,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
112,13,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
113,13,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
114,13,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
115,13,"[+, u-, +, -, x_7, u-, x_7, x_2, *, sin, **2, **2, x_9, **2, x_7]",(-(((x_7--(x_7))+x_2))+(sin(((x_9)**2)**2)*(x_7)**2)),3875.458251953125,-0.028870554640889168,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
116,13,"[-, u-, *, **2, **2, x_9, sqrt, *, x_9, x_5, -, **2, x_3, u-, -, /, x_7, x_9, log, x_7]",(-((((x_9)**2)**2*sqrt(abs((x_9*x_5)))))-((x_3)**2--(((x_7/x_9)-log(abs(x_7)))))),5056.8984375,-0.042246729135513306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
117,13,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
118,13,"[+, u-, *, x_9, **2, **2, x_4, x_1]",(-((x_9*((x_4)**2)**2))+x_1),4031.949462890625,-0.02994842268526554,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
119,13,"[-, *, *, u-, x_4, **2, **2, x_9, **, /, **2, x_4, sqrt, x_4, exp, log, x_4, -, **2, *, x_9, x_4, x_1]",(((-(x_4)*((x_9)**2)**2)*(((x_4)**2/sqrt(abs(x_4)))**exp(log(abs(x_4)))))-(((x_9*x_4))**2-x_1)),4862.86962890625,-0.041949380189180374,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
120,13,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, -, /, **2, x_5, /, u-, x_1, **2, x_4, **2, **2, x_4]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((x_5)**2/(-(x_1)/(x_4)**2))-((x_4)**2)**2)),5988.14990234375,-0.05089712142944336,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
121,13,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, u-, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/(-(x_9))**2),4852.87646484375,-0.039562858641147614,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
122,13,"[/, *, *, u-, x_7, **2, **2, x_9, **2, +, log, -3.08, **2, -3.64, u-, **3, *, **2, x_9, *, x_10, x_9]",(((-(x_7)*((x_9)**2)**2)*((log(abs(-3.08))+(-3.64)**2))**2)/-((((x_9)**2*(x_10*x_9)))**3)),5094.921875,-0.04234933480620384,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
123,13,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, 3.57, **2, **2, **2, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(3.57)**2))-(((x_4)**2)**2)**2)),6110.2041015625,-0.05257873237133026,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
124,13,"[*, log, **, x_5, **2, **2, x_4, *, *, **2, x_9, x_9, *, u-, u-, x_7, **2, **2, x_9]",(log(abs((x_5**((x_4)**2)**2)))*(((x_9)**2*x_9)*(-(-(x_7))*((x_9)**2)**2))),5931.30419921875,-0.05089391767978668,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
125,13,"[+, u-, +, -, x_4, u-, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-(((x_4--(x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),4380.6318359375,-0.035822246223688126,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
126,13,"[+, u-, *, **3, *, x_9, x_4, **2, /, x_9, x_9, x_1]",(-((((x_9*x_4))**3*((x_9/x_9))**2))+x_1),4035.502197265625,-0.030279602855443954,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
127,13,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, exp, log, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**exp(log(abs(x_4)))))/((((x_4)**2*x_5))**2)**2),5242.82568359375,-0.04926205426454544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
128,14,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
129,14,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
130,14,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
131,14,"[+, u-, +, -, x_7, u-, x_7, x_2, *, sin, **2, **2, x_9, **2, x_7]",(-(((x_7--(x_7))+x_2))+(sin(((x_9)**2)**2)*(x_7)**2)),3875.458251953125,-0.028870554640889168,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
132,14,"[-, u-, *, **2, **2, x_9, sqrt, *, x_9, x_5, -, **2, x_3, u-, -, /, x_7, x_9, log, x_7]",(-((((x_9)**2)**2*sqrt(abs((x_9*x_5)))))-((x_3)**2--(((x_7/x_9)-log(abs(x_7)))))),5056.8984375,-0.042246729135513306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
133,14,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
134,14,"[+, u-, *, x_9, **2, **2, x_4, x_1]",(-((x_9*((x_4)**2)**2))+x_1),4031.949462890625,-0.02994842268526554,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
135,14,"[-, *, *, u-, x_4, **2, **2, x_9, **, /, **2, x_4, sqrt, x_4, exp, log, x_4, -, **2, *, x_9, x_4, x_1]",(((-(x_4)*((x_9)**2)**2)*(((x_4)**2/sqrt(abs(x_4)))**exp(log(abs(x_4)))))-(((x_9*x_4))**2-x_1)),4862.86962890625,-0.041949380189180374,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
136,14,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, -, /, **2, x_5, /, u-, x_1, **2, x_4, **2, **2, x_4]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((x_5)**2/(-(x_1)/(x_4)**2))-((x_4)**2)**2)),5988.14990234375,-0.05089712142944336,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
137,14,"[/, *, *, u-, x_7, **2, **2, x_9, **2, +, log, -3.08, **2, -3.64, u-, **3, *, **2, x_9, *, x_10, x_9]",(((-(x_7)*((x_9)**2)**2)*((log(abs(-3.08))+(-3.64)**2))**2)/-((((x_9)**2*(x_10*x_9)))**3)),5094.921875,-0.04234933480620384,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
138,14,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, 3.57, **2, **2, **2, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(3.57)**2))-(((x_4)**2)**2)**2)),6110.2041015625,-0.05257873237133026,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
139,14,"[*, log, **, x_5, **2, **2, x_4, *, *, **2, x_9, x_9, *, u-, u-, x_7, **2, **2, x_9]",(log(abs((x_5**((x_4)**2)**2)))*(((x_9)**2*x_9)*(-(-(x_7))*((x_9)**2)**2))),5931.30419921875,-0.05089391767978668,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
140,14,"[+, u-, +, -, x_4, u-, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-(((x_4--(x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),4380.6318359375,-0.035822246223688126,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
141,14,"[+, u-, *, **3, *, x_9, x_4, **2, /, x_9, x_9, x_1]",(-((((x_9*x_4))**3*((x_9/x_9))**2))+x_1),4035.502197265625,-0.030279602855443954,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
142,14,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, exp, log, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**exp(log(abs(x_4)))))/((((x_4)**2*x_5))**2)**2),5242.82568359375,-0.04926205426454544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
143,14,"[*, **, *, +, log, x_3, sin, x_6, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_5, -, /, **2, x_5, /, x_0, **, x_4, x_4, **2, **2, *, x_6, x_9]",((((log(abs(x_3))+sin(x_6))*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_5)))*(((x_5)**2/(x_0/(x_4**x_4)))-(((x_6*x_9))**2)**2)),6121.63671875,-0.05262688547372818,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
144,14,"[/, *, *, u-, x_1, **2, **2, x_9, *, u-, x_4, **2, **2, x_9, *, **, **2, log, x_4, *, **, x_9, x_8, u-, x_8, **, u-, *, x_6, x_5, **2, x_2]",(((-(x_1)*((x_9)**2)**2)*(-(x_4)*((x_9)**2)**2))/(((log(abs(x_4)))**2**((x_9**x_8)*-(x_8)))*(-((x_6*x_5))**(x_2)**2))),6040.701171875,-0.05180330574512482,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
145,14,"[/, *, *, u-, x_1, **, x_5, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, u-, *, u-, x_9, sqrt, *, x_9, x_4]",(((-(x_1)*(x_5**(x_6/2.73)))*(x_9**-((x_9*x_9))))/-((-(x_9)*sqrt(abs((x_9*x_4)))))),4835.951171875,-0.040627822279930115,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
146,14,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_8, u-, +, -, x_4, u-, x_7, x_9]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_8)**2)**2))/-(((x_4--(x_7))+x_9))),5291.60498046875,-0.04979317635297775,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
147,14,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_4)**2)**2)**2)),6135.041015625,-0.0580923929810524,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
148,14,"[+, u-, sqrt, **2, **, x_7, x_7, x_1]",(-(sqrt(abs(((x_7**x_7))**2)))+x_1),3500.317138671875,-0.020114608108997345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
149,15,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
150,15,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
151,15,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
152,15,"[+, u-, +, -, x_7, u-, x_7, x_2, *, sin, **2, **2, x_9, **2, x_7]",(-(((x_7--(x_7))+x_2))+(sin(((x_9)**2)**2)*(x_7)**2)),3875.458251953125,-0.028870554640889168,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
153,15,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
154,15,"[-, *, *, u-, x_4, **2, **2, x_9, **, /, **2, x_4, sqrt, x_4, exp, log, x_4, -, **2, *, x_9, x_4, x_1]",(((-(x_4)*((x_9)**2)**2)*(((x_4)**2/sqrt(abs(x_4)))**exp(log(abs(x_4)))))-(((x_9*x_4))**2-x_1)),4862.86962890625,-0.041949380189180374,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
155,15,"[+, u-, +, -, x_4, u-, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-(((x_4--(x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),4380.6318359375,-0.035822246223688126,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
156,15,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, exp, log, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**exp(log(abs(x_4)))))/((((x_4)**2*x_5))**2)**2),5242.82568359375,-0.04926205426454544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
157,15,"[/, *, *, u-, x_1, **, x_5, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, u-, *, u-, x_9, sqrt, *, x_9, x_4]",(((-(x_1)*(x_5**(x_6/2.73)))*(x_9**-((x_9*x_9))))/-((-(x_9)*sqrt(abs((x_9*x_4)))))),4835.951171875,-0.040627822279930115,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
158,15,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_8, u-, +, -, x_4, u-, x_7, x_9]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_8)**2)**2))/-(((x_4--(x_7))+x_9))),5291.60498046875,-0.04979317635297775,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
159,15,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_4]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_4)**2)**2)**2)),6135.041015625,-0.0580923929810524,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
160,15,"[+, u-, sqrt, **2, **, x_7, x_7, x_1]",(-(sqrt(abs(((x_7**x_7))**2)))+x_1),3500.317138671875,-0.020114608108997345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
161,15,"[/, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, u-, +, -, x_4, u-, x_7, x_2]",(((((x_9)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/-(((x_4--(x_7))+x_2))),6106.64697265625,-0.056658364832401276,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
162,15,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, /, +, *, log, x_4, u-, x_1, **2, x_4, **2, **2, x_9]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((log(abs(x_4))*-(x_1))+(x_4)**2)/((x_9)**2)**2)),4866.93994140625,-0.04844669997692108,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
163,15,"[+, x_1, *, /, /, x_9, sin, x_9, **, *, x_4, x_6, *, x_5, x_5, **2, **3, sqrt, x_4]",(x_1+(((x_9/sin(x_9))/((x_4*x_6)**(x_5*x_5)))*((sqrt(abs(x_4)))**3)**2)),4030.051025390625,-0.030431265011429787,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
164,15,"[/, *, *, u-, x_1, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))/((((x_4)**2*x_5))**2)**2),5384.65771484375,-0.0538027361035347,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
165,15,"[+, u-, *, x_9, **2, *, x_5, x_9, x_1]",(-((x_9*((x_5*x_9))**2))+x_1),4029.773681640625,-0.03029409423470497,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
166,15,"[*, **, *, +, log, x_3, sin, x_6, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_5, -, /, **2, **2, x_9, x_5, **2, **2, *, x_6, x_9]",((((log(abs(x_3))+sin(x_6))*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_5)))*((((x_9)**2)**2/x_5)-(((x_6*x_9))**2)**2)),6053.826171875,-0.05442093312740326,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
167,16,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
168,16,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
169,16,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
170,16,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
171,16,"[+, u-, +, -, x_4, u-, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-(((x_4--(x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),4380.6318359375,-0.035822246223688126,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
172,16,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, exp, log, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**exp(log(abs(x_4)))))/((((x_4)**2*x_5))**2)**2),5242.82568359375,-0.04926205426454544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
173,16,"[/, *, *, u-, x_1, **, x_5, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, u-, *, u-, x_9, sqrt, *, x_9, x_4]",(((-(x_1)*(x_5**(x_6/2.73)))*(x_9**-((x_9*x_9))))/-((-(x_9)*sqrt(abs((x_9*x_4)))))),4835.951171875,-0.040627822279930115,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
174,16,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_8, u-, +, -, x_4, u-, x_7, x_9]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_8)**2)**2))/-(((x_4--(x_7))+x_9))),5291.60498046875,-0.04979317635297775,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
175,16,"[+, u-, sqrt, **2, **, x_7, x_7, x_1]",(-(sqrt(abs(((x_7**x_7))**2)))+x_1),3500.317138671875,-0.020114608108997345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
176,16,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, /, +, *, log, x_4, u-, x_1, **2, x_4, **2, **2, x_9]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((log(abs(x_4))*-(x_1))+(x_4)**2)/((x_9)**2)**2)),4866.93994140625,-0.04844669997692108,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
177,16,"[/, *, *, u-, x_1, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))/((((x_4)**2*x_5))**2)**2),5384.65771484375,-0.0538027361035347,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
178,16,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),3670.913818359375,-0.03497298061847687,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
179,16,"[/, *, x_1, **, x_9, u-, *, x_9, x_9, u-, *, u-, x_9, sqrt, *, x_9, x_4]",((x_1*(x_9**-((x_9*x_9))))/-((-(x_9)*sqrt(abs((x_9*x_4)))))),4832.630859375,-0.039638567715883255,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
180,16,"[+, sqrt, cos, /, **2, x_3, sqrt, x_0, +, x_1, cos, -, x_7, cos, x_1]",(sqrt(abs(cos(((x_3)**2/sqrt(abs(x_0))))))+(x_1+cos((x_7-cos(x_1))))),3282.97314453125,0.0018674954771995544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
181,16,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, x_7, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp(x_7))+((x_9)**2*x_5))),6081.99560546875,-0.060144126415252686,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
182,16,"[*, *, *, u-, log, x_5, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_9, x_5, **2, **2, *, x_10, x_9]",(((-(log(abs(x_5)))*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_9/x_5))-(((x_10*x_9))**2)**2)),6053.4052734375,-0.056873634457588196,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
183,16,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, u-, **2, *, x_5, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/(-(((x_5*x_9))**2))**2),4852.87646484375,-0.046223707497119904,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
184,17,"[+, x_1, cos, -, x_7, cos, x_4]",(x_1+cos((x_7-cos(x_4)))),3320.328857421875,-0.009403793141245842,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
185,17,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
186,17,"[+, x_1, cos, -, x_7, cos, sqrt, x_5]",(x_1+cos((x_7-cos(sqrt(abs(x_5)))))),3403.522216796875,-0.009642497636377811,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
187,17,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
188,17,"[+, u-, +, -, x_4, u-, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-(((x_4--(x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),4380.6318359375,-0.035822246223688126,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
189,17,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, exp, log, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**exp(log(abs(x_4)))))/((((x_4)**2*x_5))**2)**2),5242.82568359375,-0.04926205426454544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
190,17,"[+, u-, sqrt, **2, **, x_7, x_7, x_1]",(-(sqrt(abs(((x_7**x_7))**2)))+x_1),3500.317138671875,-0.020114608108997345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
191,17,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, /, +, *, log, x_4, u-, x_1, **2, x_4, **2, **2, x_9]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((log(abs(x_4))*-(x_1))+(x_4)**2)/((x_9)**2)**2)),4866.93994140625,-0.04844669997692108,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
192,17,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),3670.913818359375,-0.03497298061847687,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
193,17,"[+, sqrt, cos, /, **2, x_3, sqrt, x_0, +, x_1, cos, -, x_7, cos, x_1]",(sqrt(abs(cos(((x_3)**2/sqrt(abs(x_0))))))+(x_1+cos((x_7-cos(x_1))))),3282.97314453125,0.0018674954771995544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
194,17,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, x_7, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp(x_7))+((x_9)**2*x_5))),6081.99560546875,-0.060144126415252686,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
195,17,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, u-, **2, *, x_5, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/(-(((x_5*x_9))**2))**2),4852.87646484375,-0.046223707497119904,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
196,17,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, u-, +, -, x_4, u-, x_7, x_9]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/-(((x_4--(x_7))+x_9))),5289.18115234375,-0.05381157249212265,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
197,17,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_9)**2)**2)**2)),5612.52978515625,-0.05834544450044632,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
198,17,"[/, *, *, u-, x_1, **, **2, x_9, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, u-, **2, cos, *, x_9, x_9]",(((-(x_1)*((x_9)**2**(x_6/2.73)))*(x_9**-((x_9*x_9))))/-((cos((x_9*x_9)))**2)),4777.98828125,-0.04101194441318512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
199,18,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
200,18,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
201,18,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, exp, log, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**exp(log(abs(x_4)))))/((((x_4)**2*x_5))**2)**2),5242.82568359375,-0.04926205426454544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
202,18,"[+, u-, sqrt, **2, **, x_7, x_7, x_1]",(-(sqrt(abs(((x_7**x_7))**2)))+x_1),3500.317138671875,-0.020114608108997345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
203,18,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, /, +, *, log, x_4, u-, x_1, **2, x_4, **2, **2, x_9]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((log(abs(x_4))*-(x_1))+(x_4)**2)/((x_9)**2)**2)),4866.93994140625,-0.04844669997692108,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
204,18,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),3670.913818359375,-0.03497298061847687,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
205,18,"[+, sqrt, cos, /, **2, x_3, sqrt, x_0, +, x_1, cos, -, x_7, cos, x_1]",(sqrt(abs(cos(((x_3)**2/sqrt(abs(x_0))))))+(x_1+cos((x_7-cos(x_1))))),3282.97314453125,0.0018674954771995544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
206,18,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, x_7, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp(x_7))+((x_9)**2*x_5))),6081.99560546875,-0.060144126415252686,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
207,18,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, u-, **2, *, x_5, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/(-(((x_5*x_9))**2))**2),4852.87646484375,-0.046223707497119904,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
208,18,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, u-, +, -, x_4, u-, x_7, x_9]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/-(((x_4--(x_7))+x_9))),5289.18115234375,-0.05381157249212265,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
209,18,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_9)**2)**2)**2)),5612.52978515625,-0.05834544450044632,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
210,18,"[+, sqrt, cos, **3, x_6, +, x_1, cos, -, x_7, cos, x_8]",(sqrt(abs(cos((x_6)**3)))+(x_1+cos((x_7-cos(x_8))))),3294.602783203125,0.000260193832218647,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
211,18,"[*, **, *, **2, cos, x_4, **2, **2, x_9, /, u-, *, x_9, x_9, **2, u-, x_9, -, /, **2, x_5, /, x_0, **, x_4, x_4, **2, **2, *, x_6, x_9]",((((cos(x_4))**2*((x_9)**2)**2)**(-((x_9*x_9))/(-(x_9))**2))*(((x_5)**2/(x_0/(x_4**x_4)))-(((x_6*x_9))**2)**2)),6135.01513671875,-0.06135635823011398,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
212,18,"[*, *, *, u-, log, x_5, **2, **2, x_9, **2, u-, x_4, -, /, **2, u-, x_9, /, x_9, x_5, **2, **2, *, x_10, x_9]",(((-(log(abs(x_5)))*((x_9)**2)**2)*(-(x_4))**2)*(((-(x_9))**2/(x_9/x_5))-(((x_10*x_9))**2)**2)),5808.9560546875,-0.05974479764699936,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
213,18,"[/, *, *, u-, x_1, **2, **2, x_10, **, -, **2, x_9, x_5, **2, x_2, **2, u-, **2, *, x_5, x_9]",(((-(x_1)*((x_10)**2)**2)*(((x_9)**2-x_5)**(x_2)**2))/(-(((x_5*x_9))**2))**2),4835.234375,-0.044472575187683105,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
214,18,"[+, x_1, -, x_7, **2, *, exp, x_4, x_3]",(x_1+(x_7-((exp(x_4)*x_3))**2)),3302.957763671875,-0.013006248511373997,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
215,18,"[/, *, *, u-, x_1, **, **2, x_9, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2**(x_6/2.73)))*(x_9**-((x_9*x_9))))/((((x_4)**2*x_5))**2)**2),4143.88720703125,-0.044224776327610016,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
216,19,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
217,19,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
218,19,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, exp, log, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**exp(log(abs(x_4)))))/((((x_4)**2*x_5))**2)**2),5242.82568359375,-0.04926205426454544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
219,19,"[+, u-, sqrt, **2, **, x_7, x_7, x_1]",(-(sqrt(abs(((x_7**x_7))**2)))+x_1),3500.317138671875,-0.020114608108997345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
220,19,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, /, +, *, log, x_4, u-, x_1, **2, x_4, **2, **2, x_9]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((log(abs(x_4))*-(x_1))+(x_4)**2)/((x_9)**2)**2)),4866.93994140625,-0.04844669997692108,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
221,19,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),3670.913818359375,-0.03497298061847687,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
222,19,"[+, sqrt, cos, /, **2, x_3, sqrt, x_0, +, x_1, cos, -, x_7, cos, x_1]",(sqrt(abs(cos(((x_3)**2/sqrt(abs(x_0))))))+(x_1+cos((x_7-cos(x_1))))),3282.97314453125,0.0018674954771995544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
223,19,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, x_7, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp(x_7))+((x_9)**2*x_5))),6081.99560546875,-0.060144126415252686,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
224,19,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, u-, **2, *, x_5, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/(-(((x_5*x_9))**2))**2),4852.87646484375,-0.046223707497119904,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
225,19,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, u-, +, -, x_4, u-, x_7, x_9]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/-(((x_4--(x_7))+x_9))),5289.18115234375,-0.05381157249212265,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
226,19,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_9)**2)**2)**2)),5612.52978515625,-0.05834544450044632,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
227,19,"[+, sqrt, cos, **3, x_6, +, x_1, cos, -, x_7, cos, x_8]",(sqrt(abs(cos((x_6)**3)))+(x_1+cos((x_7-cos(x_8))))),3294.602783203125,0.000260193832218647,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
228,19,"[*, *, *, u-, log, x_5, **2, **2, x_9, **2, u-, x_4, -, /, **2, u-, x_9, /, x_9, x_5, **2, **2, *, x_10, x_9]",(((-(log(abs(x_5)))*((x_9)**2)**2)*(-(x_4))**2)*(((-(x_9))**2/(x_9/x_5))-(((x_10*x_9))**2)**2)),5808.9560546875,-0.05974479764699936,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
229,19,"[+, x_1, -, x_7, **2, *, exp, x_4, x_3]",(x_1+(x_7-((exp(x_4)*x_3))**2)),3302.957763671875,-0.013006248511373997,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
230,19,"[/, *, *, u-, x_1, **, **2, x_9, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2**(x_6/2.73)))*(x_9**-((x_9*x_9))))/((((x_4)**2*x_5))**2)**2),4143.88720703125,-0.044224776327610016,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
231,19,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, u-, +, -, x_4, u-, x_7, u-, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/-(((x_4--(x_7))+-(x_9)))),6130.888671875,-0.06260810792446136,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
232,19,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_7))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),4003.543701171875,-0.0372052937746048,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
233,19,"[/, *, *, *, x_1, u-, x_9, **2, **2, x_9, **2, u-, x_9, -, **2, **3, *, x_9, x_9, u-, -, /, x_8, x_9, log, x_7]",((((x_1*-(x_9))*((x_9)**2)**2)*(-(x_9))**2)/((((x_9*x_9))**3)**2--(((x_8/x_9)-log(abs(x_7)))))),5243.03564453125,-0.05118405073881149,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
234,19,"[+, u-, +, **2, x_4, x_7, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_9, **, *, x_4, x_6, *, x_5, x_5]",(-(((x_4)**2+x_7))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_9))/((x_4*x_6)**(x_5*x_5))))),4253.74267578125,-0.04528691619634628,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
235,20,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
236,20,"[+, u-, +, u-, exp, x_7, *, **2, x_9, x_5, x_1]",(-((-(exp(x_7))+((x_9)**2*x_5)))+x_1),3427.3056640625,-0.019793644547462463,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
237,20,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, /, +, *, log, x_4, u-, x_1, **2, x_4, **2, **2, x_9]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((log(abs(x_4))*-(x_1))+(x_4)**2)/((x_9)**2)**2)),4866.93994140625,-0.04844669997692108,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
238,20,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),3670.913818359375,-0.03497298061847687,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
239,20,"[+, sqrt, cos, /, **2, x_3, sqrt, x_0, +, x_1, cos, -, x_7, cos, x_1]",(sqrt(abs(cos(((x_3)**2/sqrt(abs(x_0))))))+(x_1+cos((x_7-cos(x_1))))),3282.97314453125,0.0018674954771995544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
240,20,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, x_7, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp(x_7))+((x_9)**2*x_5))),6081.99560546875,-0.060144126415252686,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
241,20,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, u-, **2, *, x_5, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/(-(((x_5*x_9))**2))**2),4852.87646484375,-0.046223707497119904,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
242,20,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_9)**2)**2)**2)),5612.52978515625,-0.05834544450044632,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
243,20,"[*, *, *, u-, log, x_5, **2, **2, x_9, **2, u-, x_4, -, /, **2, u-, x_9, /, x_9, x_5, **2, **2, *, x_10, x_9]",(((-(log(abs(x_5)))*((x_9)**2)**2)*(-(x_4))**2)*(((-(x_9))**2/(x_9/x_5))-(((x_10*x_9))**2)**2)),5808.9560546875,-0.05974479764699936,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
244,20,"[+, x_1, -, x_7, **2, *, exp, x_4, x_3]",(x_1+(x_7-((exp(x_4)*x_3))**2)),3302.957763671875,-0.013006248511373997,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
245,20,"[/, *, *, u-, x_1, **, **2, x_9, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2**(x_6/2.73)))*(x_9**-((x_9*x_9))))/((((x_4)**2*x_5))**2)**2),4143.88720703125,-0.044224776327610016,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
246,20,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_7))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),4003.543701171875,-0.0372052937746048,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
247,20,"[+, u-, +, **2, x_4, x_7, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_9, **, *, x_4, x_6, *, x_5, x_5]",(-(((x_4)**2+x_7))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_9))/((x_4*x_6)**(x_5*x_5))))),4253.74267578125,-0.04528691619634628,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
248,20,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, *, log, **3, x_8, sqrt, log, 2.68]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(log(abs((x_8)**3))*sqrt(abs(log(abs(2.68))))))),3668.802978515625,-0.02082047611474991,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
249,20,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, **2, x_4, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp((x_4)**2))+((x_9)**2*x_5))),6107.1875,-0.06449858844280243,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
250,20,"[/, +, cos, sin, **, x_2, x_7, x_1, **2, **2, *, **2, x_4, x_5]",((cos(sin((x_2**x_7)))+x_1)/((((x_4)**2*x_5))**2)**2),3468.3544921875,-0.020498154684901237,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
251,20,"[/, *, *, u-, x_1, **2, **2, x_2, **, /, **2, x_4, **2, x_9, **2, u-, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_2)**2)**2)*(((x_4)**2/(x_9)**2)**(-(x_4))**2))/((((x_4)**2*x_5))**2)**2),5379.65234375,-0.058126501739025116,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
252,20,"[+, +, x_1, *, **2, x_9, sqrt, log, x_9, *, *, u-, x_9, **2, **2, x_9, **2, x_7]",((x_1+((x_9)**2*sqrt(abs(log(abs(x_9))))))+((-(x_9)*((x_9)**2)**2)*(x_7)**2)),4043.41650390625,-0.04386558383703232,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
253,20,"[*, **, *, **2, cos, x_4, **2, **2, x_9, /, u-, *, x_9, x_9, **2, u-, x_9, -, cos, exp, x_8, **2, **2, *, x_6, x_9]",((((cos(x_4))**2*((x_9)**2)**2)**(-((x_9*x_9))/(-(x_9))**2))*(cos(exp(x_8))-(((x_6*x_9))**2)**2)),5151.5546875,-0.05212153494358063,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
254,20,"[+, sqrt, cos, **2, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",(sqrt(abs(cos((-(x_4))**2)))+(x_1+cos((x_7-cos(x_8))))),3294.3837890625,-0.007283231243491173,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
255,20,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, *, x_6, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_6*x_4))**2))/((((x_4)**2*x_5))**2)**2),5281.68798828125,-0.056756891310214996,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
256,21,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
257,21,"[*, **, /, cos, log, x_5, u-, *, x_1, x_4, /, x_9, -, **2, x_9, x_5, /, +, *, log, x_4, u-, x_1, **2, x_4, **2, **2, x_9]",(((cos(log(abs(x_5)))/-((x_1*x_4)))**(x_9/((x_9)**2-x_5)))*(((log(abs(x_4))*-(x_1))+(x_4)**2)/((x_9)**2)**2)),4866.93994140625,-0.04844669997692108,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
258,21,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),3670.913818359375,-0.03497298061847687,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
259,21,"[+, sqrt, cos, /, **2, x_3, sqrt, x_0, +, x_1, cos, -, x_7, cos, x_1]",(sqrt(abs(cos(((x_3)**2/sqrt(abs(x_0))))))+(x_1+cos((x_7-cos(x_1))))),3282.97314453125,0.0018674954771995544,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
260,21,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, x_7, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp(x_7))+((x_9)**2*x_5))),6081.99560546875,-0.060144126415252686,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
261,21,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, u-, **2, *, x_5, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/(-(((x_5*x_9))**2))**2),4852.87646484375,-0.046223707497119904,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
262,21,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_9)**2)**2)**2)),5612.52978515625,-0.05834544450044632,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
263,21,"[*, *, *, u-, log, x_5, **2, **2, x_9, **2, u-, x_4, -, /, **2, u-, x_9, /, x_9, x_5, **2, **2, *, x_10, x_9]",(((-(log(abs(x_5)))*((x_9)**2)**2)*(-(x_4))**2)*(((-(x_9))**2/(x_9/x_5))-(((x_10*x_9))**2)**2)),5808.9560546875,-0.05974479764699936,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
264,21,"[+, x_1, -, x_7, **2, *, exp, x_4, x_3]",(x_1+(x_7-((exp(x_4)*x_3))**2)),3302.957763671875,-0.013006248511373997,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
265,21,"[/, *, *, u-, x_1, **, **2, x_9, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2**(x_6/2.73)))*(x_9**-((x_9*x_9))))/((((x_4)**2*x_5))**2)**2),4143.88720703125,-0.044224776327610016,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
266,21,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_7))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),4003.543701171875,-0.0372052937746048,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
267,21,"[+, u-, +, **2, x_4, x_7, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_9, **, *, x_4, x_6, *, x_5, x_5]",(-(((x_4)**2+x_7))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_9))/((x_4*x_6)**(x_5*x_5))))),4253.74267578125,-0.04528691619634628,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
268,21,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, **2, x_4, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp((x_4)**2))+((x_9)**2*x_5))),6107.1875,-0.06449858844280243,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
269,21,"[/, *, *, u-, x_1, **2, **2, x_2, **, /, **2, x_4, **2, x_9, **2, u-, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_2)**2)**2)*(((x_4)**2/(x_9)**2)**(-(x_4))**2))/((((x_4)**2*x_5))**2)**2),5379.65234375,-0.058126501739025116,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
270,21,"[+, +, x_1, *, **2, x_9, sqrt, log, x_9, *, *, u-, x_9, **2, **2, x_9, **2, x_7]",((x_1+((x_9)**2*sqrt(abs(log(abs(x_9))))))+((-(x_9)*((x_9)**2)**2)*(x_7)**2)),4043.41650390625,-0.04386558383703232,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
271,21,"[*, **, *, **2, cos, x_4, **2, **2, x_9, /, u-, *, x_9, x_9, **2, u-, x_9, -, cos, exp, x_8, **2, **2, *, x_6, x_9]",((((cos(x_4))**2*((x_9)**2)**2)**(-((x_9*x_9))/(-(x_9))**2))*(cos(exp(x_8))-(((x_6*x_9))**2)**2)),5151.5546875,-0.05212153494358063,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
272,21,"[+, sqrt, cos, **2, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",(sqrt(abs(cos((-(x_4))**2)))+(x_1+cos((x_7-cos(x_8))))),3294.3837890625,-0.007283231243491173,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
273,21,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, *, x_6, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_6*x_4))**2))/((((x_4)**2*x_5))**2)**2),5281.68798828125,-0.056756891310214996,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
274,21,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5616.92333984375,-0.05900420993566513,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
275,21,"[+, +, x_1, *, **2, x_9, sqrt, log, x_9, *, **2, **, u-, x_9, **2, x_9, **2, x_7]",((x_1+((x_9)**2*sqrt(abs(log(abs(x_9))))))+(((-(x_9)**(x_9)**2))**2*(x_7)**2)),4008.671142578125,-0.041184984147548676,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
276,21,"[+, *, *, **2, x_9, **2, cos, x_7, *, **3, *, x_9, x_4, **2, /, x_9, x_9, +, x_1, cos, -, x_7, cos, x_3]",((((x_9)**2*(cos(x_7))**2)*(((x_9*x_4))**3*((x_9/x_9))**2))+(x_1+cos((x_7-cos(x_3))))),3314.158935546875,-0.03145641088485718,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
277,21,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6137.9365234375,-0.07454849779605865,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
278,22,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
279,22,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),3670.913818359375,-0.03497298061847687,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
280,22,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, x_7, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp(x_7))+((x_9)**2*x_5))),6081.99560546875,-0.060144126415252686,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
281,22,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_9)**2)**2)**2)),5612.52978515625,-0.05834544450044632,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
282,22,"[*, *, *, u-, log, x_5, **2, **2, x_9, **2, u-, x_4, -, /, **2, u-, x_9, /, x_9, x_5, **2, **2, *, x_10, x_9]",(((-(log(abs(x_5)))*((x_9)**2)**2)*(-(x_4))**2)*(((-(x_9))**2/(x_9/x_5))-(((x_10*x_9))**2)**2)),5808.9560546875,-0.05974479764699936,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
283,22,"[+, x_1, -, x_7, **2, *, exp, x_4, x_3]",(x_1+(x_7-((exp(x_4)*x_3))**2)),3302.957763671875,-0.013006248511373997,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
284,22,"[/, *, *, u-, x_1, **, **2, x_9, /, x_6, 2.73, **, x_9, u-, *, x_9, x_9, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2**(x_6/2.73)))*(x_9**-((x_9*x_9))))/((((x_4)**2*x_5))**2)**2),4143.88720703125,-0.044224776327610016,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
285,22,"[+, u-, +, **2, x_4, x_7, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_9, **, *, x_4, x_6, *, x_5, x_5]",(-(((x_4)**2+x_7))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_9))/((x_4*x_6)**(x_5*x_5))))),4253.74267578125,-0.04528691619634628,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
286,22,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, +, u-, exp, **2, x_4, *, **2, x_9, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(-(exp((x_4)**2))+((x_9)**2*x_5))),6107.1875,-0.06449858844280243,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
287,22,"[/, *, *, u-, x_1, **2, **2, x_2, **, /, **2, x_4, **2, x_9, **2, u-, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_2)**2)**2)*(((x_4)**2/(x_9)**2)**(-(x_4))**2))/((((x_4)**2*x_5))**2)**2),5379.65234375,-0.058126501739025116,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
288,22,"[+, +, x_1, *, **2, x_9, sqrt, log, x_9, *, *, u-, x_9, **2, **2, x_9, **2, x_7]",((x_1+((x_9)**2*sqrt(abs(log(abs(x_9))))))+((-(x_9)*((x_9)**2)**2)*(x_7)**2)),4043.41650390625,-0.04386558383703232,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
289,22,"[+, sqrt, cos, **2, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",(sqrt(abs(cos((-(x_4))**2)))+(x_1+cos((x_7-cos(x_8))))),3294.3837890625,-0.007283231243491173,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
290,22,"[/, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, *, x_6, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_6*x_4))**2))/((((x_4)**2*x_5))**2)**2),5281.68798828125,-0.056756891310214996,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
291,22,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5616.92333984375,-0.05900420993566513,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
292,22,"[+, +, x_1, *, **2, x_9, sqrt, log, x_9, *, **2, **, u-, x_9, **2, x_9, **2, x_7]",((x_1+((x_9)**2*sqrt(abs(log(abs(x_9))))))+(((-(x_9)**(x_9)**2))**2*(x_7)**2)),4008.671142578125,-0.041184984147548676,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
293,22,"[+, *, *, **2, x_9, **2, cos, x_7, *, **3, *, x_9, x_4, **2, /, x_9, x_9, +, x_1, cos, -, x_7, cos, x_3]",((((x_9)**2*(cos(x_7))**2)*(((x_9*x_4))**3*((x_9/x_9))**2))+(x_1+cos((x_7-cos(x_3))))),3314.158935546875,-0.03145641088485718,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
294,22,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6137.9365234375,-0.07454849779605865,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
295,22,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/((((x_4)**2)**2*((x_9)**2)**2))**2),4852.87646484375,-0.055989526212215424,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
296,22,"[+, sqrt, *, u-, *, x_8, x_9, u-, *, x_1, x_4, +, x_1, cos, -, x_7, cos, x_4]",(sqrt(abs((-((x_8*x_9))*-((x_1*x_4)))))+(x_1+cos((x_7-cos(x_4))))),3301.21142578125,-0.01005491428077221,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
297,22,"[+, x_1, cos, -, x_7, cos, sqrt, x_0]",(x_1+cos((x_7-cos(sqrt(abs(x_0)))))),3273.767822265625,-0.0059543801471591,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
298,22,"[*, **, *, +, log, x_3, sin, x_6, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_5, x_1]",((((log(abs(x_3))+sin(x_6))*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_5))))*x_1)),4832.630859375,-0.04539203643798828,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
299,22,"[/, *, *, u-, x_1, **2, u-, x_4, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, **2, x_4]",(((-(x_1)*(-(x_4))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-((x_4)**2))**2)),6134.7802734375,-0.07112390547990799,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
300,22,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, x_9, sqrt, log, x_9, *, u-, *, x_8, x_9, **2, **2, x_1]",(-((-((x_5-x_7))+x_7))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-((x_8*x_9))*((x_1)**2)**2))),4003.543701171875,-0.0407012477517128,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
301,23,"[+, x_1, cos, -, x_7, cos, x_8]",(x_1+cos((x_7-cos(x_8)))),3294.60546875,-0.008639641106128693,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
302,23,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_9)**2)**2)**2)),5612.52978515625,-0.05834544450044632,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
303,23,"[/, *, *, u-, x_1, **2, **2, x_2, **, /, **2, x_4, **2, x_9, **2, u-, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_2)**2)**2)*(((x_4)**2/(x_9)**2)**(-(x_4))**2))/((((x_4)**2*x_5))**2)**2),5379.65234375,-0.058126501739025116,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
304,23,"[+, sqrt, cos, **2, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",(sqrt(abs(cos((-(x_4))**2)))+(x_1+cos((x_7-cos(x_8))))),3294.3837890625,-0.007283231243491173,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
305,23,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5616.92333984375,-0.05900420993566513,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
306,23,"[+, +, x_1, *, **2, x_9, sqrt, log, x_9, *, **2, **, u-, x_9, **2, x_9, **2, x_7]",((x_1+((x_9)**2*sqrt(abs(log(abs(x_9))))))+(((-(x_9)**(x_9)**2))**2*(x_7)**2)),4008.671142578125,-0.041184984147548676,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
307,23,"[+, *, *, **2, x_9, **2, cos, x_7, *, **3, *, x_9, x_4, **2, /, x_9, x_9, +, x_1, cos, -, x_7, cos, x_3]",((((x_9)**2*(cos(x_7))**2)*(((x_9*x_4))**3*((x_9/x_9))**2))+(x_1+cos((x_7-cos(x_3))))),3314.158935546875,-0.03145641088485718,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
308,23,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/((((x_4)**2)**2*((x_9)**2)**2))**2),4852.87646484375,-0.055989526212215424,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
309,23,"[+, x_1, cos, -, x_7, cos, sqrt, x_0]",(x_1+cos((x_7-cos(sqrt(abs(x_0)))))),3273.767822265625,-0.0059543801471591,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
310,23,"[/, *, *, u-, x_1, **2, u-, x_4, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, **2, x_4]",(((-(x_1)*(-(x_4))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-((x_4)**2))**2)),6134.7802734375,-0.07112390547990799,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
311,23,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, x_9, sqrt, log, x_9, *, u-, *, x_8, x_9, **2, **2, x_1]",(-((-((x_5-x_7))+x_7))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-((x_8*x_9))*((x_1)**2)**2))),4003.543701171875,-0.0407012477517128,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
312,23,"[/, *, *, **2, **2, x_4, **2, u-, x_1, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, u-, x_4, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*(-(x_1))**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/((-(x_4)*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6130.4658203125,-0.06979486346244812,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
313,23,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, *, x_5, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**(x_5*x_5))))+(x_1+cos((x_7-cos(x_8))))),3300.225830078125,-0.026079542934894562,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
314,23,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, **2, sin, x_9, u-, /, *, x_5, x_3, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*(sin(x_9))**2)*-(((x_5*x_3)/sin(x_9))))),3669.629150390625,-0.03530158847570419,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
315,23,"[/, *, *, u-, x_1, **2, u-, x_4, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((-(x_1)*(-(x_4))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5972.314453125,-0.06634097546339035,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
316,23,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, **, x_7, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*(x_7**x_4))))/((((x_4)**2*x_5))**2)**2),4031.996337890625,-0.045383185148239136,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
317,23,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_5, x_1]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_5))))*x_1)),4473.7353515625,-0.055392466485500336,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
318,23,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, log, x_9, **2, *, **2, x_4, x_5]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(((x_4)**2*x_5))**2)),3670.913818359375,-0.03926942124962807,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
319,23,"[/, *, *, u-, x_1, **2, **2, x_7, **, /, **2, x_7, **2, x_4, **2, u-, x_4, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(((-(x_1)*((x_7)**2)**2)*(((x_7)**2/(x_4)**2)**(-(x_4))**2))/(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),5774.84375,-0.06089607626199722,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
320,23,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6137.9365234375,-0.0746447816491127,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
321,23,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, exp, x_9, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(exp(x_9)))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5271.37939453125,-0.056918300688266754,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
322,24,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, /, **2, x_5, /, x_0, **2, x_5, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(((x_5)**2/(x_0/(x_5)**2))-(((x_9)**2)**2)**2)),5612.52978515625,-0.05834544450044632,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
323,24,"[/, *, *, u-, x_1, **2, **2, x_2, **, /, **2, x_4, **2, x_9, **2, u-, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_2)**2)**2)*(((x_4)**2/(x_9)**2)**(-(x_4))**2))/((((x_4)**2*x_5))**2)**2),5379.65234375,-0.058126501739025116,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
324,24,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_4, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_4))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5616.92333984375,-0.05900420993566513,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
325,24,"[+, *, *, **2, x_9, **2, cos, x_7, *, **3, *, x_9, x_4, **2, /, x_9, x_9, +, x_1, cos, -, x_7, cos, x_3]",((((x_9)**2*(cos(x_7))**2)*(((x_9*x_4))**3*((x_9/x_9))**2))+(x_1+cos((x_7-cos(x_3))))),3314.158935546875,-0.03145641088485718,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
326,24,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/((((x_4)**2)**2*((x_9)**2)**2))**2),4852.87646484375,-0.055989526212215424,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
327,24,"[+, x_1, cos, -, x_7, cos, sqrt, x_0]",(x_1+cos((x_7-cos(sqrt(abs(x_0)))))),3273.767822265625,-0.0059543801471591,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
328,24,"[/, *, *, u-, x_1, **2, u-, x_4, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, **2, x_4]",(((-(x_1)*(-(x_4))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-((x_4)**2))**2)),6134.7802734375,-0.07112390547990799,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
329,24,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, *, x_5, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**(x_5*x_5))))+(x_1+cos((x_7-cos(x_8))))),3300.225830078125,-0.026079542934894562,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
330,24,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, **2, sin, x_9, u-, /, *, x_5, x_3, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*(sin(x_9))**2)*-(((x_5*x_3)/sin(x_9))))),3669.629150390625,-0.03530158847570419,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
331,24,"[/, *, *, u-, x_1, **2, u-, x_4, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((-(x_1)*(-(x_4))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5972.314453125,-0.06634097546339035,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
332,24,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, **, x_7, x_4, **2, **2, *, **2, x_4, x_5]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*(x_7**x_4))))/((((x_4)**2*x_5))**2)**2),4031.996337890625,-0.045383185148239136,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
333,24,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_5, x_1]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_5))))*x_1)),4473.7353515625,-0.055392466485500336,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
334,24,"[/, *, *, u-, x_1, **2, **2, x_7, **, /, **2, x_7, **2, x_4, **2, u-, x_4, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(((-(x_1)*((x_7)**2)**2)*(((x_7)**2/(x_4)**2)**(-(x_4))**2))/(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),5774.84375,-0.06089607626199722,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
335,24,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6137.9365234375,-0.0746447816491127,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
336,24,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, exp, x_9, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(exp(x_9)))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5271.37939453125,-0.056918300688266754,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
337,24,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, **2, x_9, **2, *, **2, x_4, x_5]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs((x_9)**2)))*(((x_4)**2*x_5))**2)),3670.9140625,-0.04411900043487549,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
338,24,"[+, *, *, **2, x_9, **2, cos, x_7, *, **3, *, x_9, x_4, **2, /, x_4, x_9, u-, sqrt, **2, **, x_7, x_7]",((((x_9)**2*(cos(x_7))**2)*(((x_9*x_4))**3*((x_4/x_9))**2))+-(sqrt(abs(((x_7**x_7))**2)))),4068.594970703125,-0.04655054956674576,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
339,24,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, *, *, **2, x_9, sqrt, log, x_6, **3, **3, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(((x_9)**2*sqrt(abs(log(abs(x_6)))))*((x_5)**3)**3)),5667.3359375,-0.05986586958169937,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
340,24,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),3670.91357421875,-0.0428052693605423,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
341,24,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, -, x_6, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**(x_6-x_5))))+(x_1+cos((x_7-cos(x_8))))),3289.861572265625,-0.024768926203250885,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
342,24,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, -2.43]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(-2.43))**2))),6104.1689453125,-0.0702679231762886,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
343,24,"[/, *, *, u-, x_1, **2, cos, x_2, **, **2, u-, x_9, **2, x_2, **2, *, **2, **2, x_1, **2, **2, x_9]",(((-(x_1)*(cos(x_2))**2)*((-(x_9))**2**(x_2)**2))/((((x_1)**2)**2*((x_9)**2)**2))**2),4322.591796875,-0.047155678272247314,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
344,24,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, *, x_8, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**(x_8*x_5))))+(x_1+cos((x_7-cos(x_8))))),3300.00439453125,-0.026072999462485313,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
345,24,"[/, *, *, u-, x_1, **2, u-, x_6, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((-(x_1)*(-(x_6))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5825.58203125,-0.06330833584070206,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
346,25,"[+, *, *, **2, x_9, **2, cos, x_7, *, **3, *, x_9, x_4, **2, /, x_9, x_9, +, x_1, cos, -, x_7, cos, x_3]",((((x_9)**2*(cos(x_7))**2)*(((x_9*x_4))**3*((x_9/x_9))**2))+(x_1+cos((x_7-cos(x_3))))),3314.158935546875,-0.03145641088485718,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
347,25,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/((((x_4)**2)**2*((x_9)**2)**2))**2),4852.87646484375,-0.055989526212215424,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
348,25,"[+, x_1, cos, -, x_7, cos, sqrt, x_0]",(x_1+cos((x_7-cos(sqrt(abs(x_0)))))),3273.767822265625,-0.0059543801471591,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
349,25,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, *, x_5, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**(x_5*x_5))))+(x_1+cos((x_7-cos(x_8))))),3300.225830078125,-0.026079542934894562,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
350,25,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, **2, sin, x_9, u-, /, *, x_5, x_3, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*(sin(x_9))**2)*-(((x_5*x_3)/sin(x_9))))),3669.629150390625,-0.03530158847570419,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
351,25,"[/, *, *, u-, x_1, **2, u-, x_4, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((-(x_1)*(-(x_4))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5972.314453125,-0.06634097546339035,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
352,25,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_5, x_1]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_5))))*x_1)),4473.7353515625,-0.055392466485500336,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
353,25,"[/, *, *, u-, x_1, **2, **2, x_7, **, /, **2, x_7, **2, x_4, **2, u-, x_4, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(((-(x_1)*((x_7)**2)**2)*(((x_7)**2/(x_4)**2)**(-(x_4))**2))/(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),5774.84375,-0.06089607626199722,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
354,25,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, exp, x_9, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(exp(x_9)))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5271.37939453125,-0.056918300688266754,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
355,25,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, sqrt, **2, x_9, **2, *, **2, x_4, x_5]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*sqrt(abs((x_9)**2)))*(((x_4)**2*x_5))**2)),3670.9140625,-0.04411900043487549,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
356,25,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, *, *, **2, x_9, sqrt, log, x_6, **3, **3, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(((x_9)**2*sqrt(abs(log(abs(x_6)))))*((x_5)**3)**3)),5667.3359375,-0.05986586958169937,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
357,25,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),3670.91357421875,-0.0428052693605423,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
358,25,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, -, x_6, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**(x_6-x_5))))+(x_1+cos((x_7-cos(x_8))))),3289.861572265625,-0.024768926203250885,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
359,25,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, -2.43]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(-2.43))**2))),6104.1689453125,-0.0702679231762886,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
360,25,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, *, x_8, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**(x_8*x_5))))+(x_1+cos((x_7-cos(x_8))))),3300.00439453125,-0.026072999462485313,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
361,25,"[/, *, *, u-, x_1, **2, u-, x_6, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((-(x_1)*(-(x_6))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5825.58203125,-0.06330833584070206,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
362,25,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_9, x_6, -, x_6, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_9*x_6)**(x_6-x_5))))+(x_1+cos((x_7-cos(x_8))))),3294.799560546875,-0.0257478728890419,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
363,25,"[/, *, *, u-, x_1, **2, **2, x_9, **, **2, u-, x_9, **2, *, x_4, x_4, **2, *, **2, x_9, **2, sin, x_9]",(((-(x_1)*((x_9)**2)**2)*((-(x_9))**2**((x_4*x_4))**2))/(((x_9)**2*(sin(x_9))**2))**2),5281.75537109375,-0.05957457423210144,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
364,25,"[+, x_1, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8]",(x_1+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))),4031.63671875,-0.048960328102111816,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
365,25,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_7, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_7)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6132.197265625,-0.07466886937618256,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
366,25,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, **2, u-, x_9, **2, x_2, **2, *, **2, **2, x_1, **2, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*((-(x_9))**2**(x_2)**2))/((((x_1)**2)**2*((x_9)**2)**2))**2),4847.5556640625,-0.05564292520284653,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
367,26,"[+, *, *, **2, x_9, **2, cos, x_7, *, **3, *, x_9, x_4, **2, /, x_9, x_9, +, x_1, cos, -, x_7, cos, x_3]",((((x_9)**2*(cos(x_7))**2)*(((x_9*x_4))**3*((x_9/x_9))**2))+(x_1+cos((x_7-cos(x_3))))),3314.158935546875,-0.03145641088485718,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
368,26,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, **2, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/((((x_4)**2)**2*((x_9)**2)**2))**2),4852.87646484375,-0.055989526212215424,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
369,26,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, **2, sin, x_9, u-, /, *, x_5, x_3, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*(sin(x_9))**2)*-(((x_5*x_3)/sin(x_9))))),3669.629150390625,-0.03530158847570419,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
370,26,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_5, x_1]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_5))))*x_1)),4473.7353515625,-0.055392466485500336,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
371,26,"[/, *, *, u-, x_1, **2, **2, x_7, **, /, **2, x_7, **2, x_4, **2, u-, x_4, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(((-(x_1)*((x_7)**2)**2)*(((x_7)**2/(x_4)**2)**(-(x_4))**2))/(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),5774.84375,-0.06089607626199722,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
372,26,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, *, *, **2, x_9, sqrt, log, x_6, **3, **3, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(((x_9)**2*sqrt(abs(log(abs(x_6)))))*((x_5)**3)**3)),5667.3359375,-0.05986586958169937,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
373,26,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, -, x_6, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**(x_6-x_5))))+(x_1+cos((x_7-cos(x_8))))),3289.861572265625,-0.024768926203250885,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
374,26,"[/, *, *, u-, x_1, **2, u-, x_6, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((-(x_1)*(-(x_6))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5825.58203125,-0.06330833584070206,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
375,26,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_9, x_6, -, x_6, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_9*x_6)**(x_6-x_5))))+(x_1+cos((x_7-cos(x_8))))),3294.799560546875,-0.0257478728890419,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
376,26,"[/, *, *, u-, x_1, **2, **2, x_9, **, **2, u-, x_9, **2, *, x_4, x_4, **2, *, **2, x_9, **2, sin, x_9]",(((-(x_1)*((x_9)**2)**2)*((-(x_9))**2**((x_4*x_4))**2))/(((x_9)**2*(sin(x_9))**2))**2),5281.75537109375,-0.05957457423210144,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
377,26,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_7, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_7)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6132.197265625,-0.07466886937618256,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
378,26,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, **2, u-, x_9, **2, x_2, **2, *, **2, **2, x_1, **2, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*((-(x_9))**2**(x_2)**2))/((((x_1)**2)**2*((x_9)**2)**2))**2),4847.5556640625,-0.05564292520284653,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
379,26,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5271.37939453125,-0.05789364129304886,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
380,26,"[+, x_1, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8]",(x_1+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))),4031.63671875,-0.05119509994983673,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
381,26,"[+, x_1, cos, -, x_7, cos, sqrt, x_2]",(x_1+cos((x_7-cos(sqrt(abs(x_2)))))),3228.878173828125,-0.007207193877547979,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
382,26,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**-(x_4))))+(x_1+cos((x_7-cos(x_8))))),3298.412109375,-0.027264267206192017,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
383,26,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, /, **2, x_5, /, /, x_7, x_9, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_5)**2/((x_7/x_9)/(x_4)**2))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6135.89501953125,-0.0760921984910965,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
384,26,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),5896.31982421875,-0.0745791494846344,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
385,26,"[*, *, *, u-, log, x_5, **2, **2, x_9, **2, u-, x_4, -, /, **2, u-, x_9, /, x_9, x_5, *, u-, x_4, **2, **2, x_10]",(((-(log(abs(x_5)))*((x_9)**2)**2)*(-(x_4))**2)*(((-(x_9))**2/(x_9/x_5))-(-(x_4)*((x_10)**2)**2))),5808.9560546875,-0.06131532043218613,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
386,26,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3670.912841796875,-0.046503596007823944,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
387,27,"[+, *, *, **2, x_9, **2, cos, x_7, *, **3, *, x_9, x_4, **2, /, x_9, x_9, +, x_1, cos, -, x_7, cos, x_3]",((((x_9)**2*(cos(x_7))**2)*(((x_9*x_4))**3*((x_9/x_9))**2))+(x_1+cos((x_7-cos(x_3))))),3314.158935546875,-0.03145641088485718,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
388,27,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, x_9, **2, sin, x_9, u-, /, *, x_5, x_3, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((x_9)**2*(sin(x_9))**2)*-(((x_5*x_3)/sin(x_9))))),3669.629150390625,-0.03530158847570419,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
389,27,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_5, x_1]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_5))))*x_1)),4473.7353515625,-0.055392466485500336,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
390,27,"[/, *, *, u-, x_1, **2, **2, x_7, **, /, **2, x_7, **2, x_4, **2, u-, x_4, *, *, **2, x_9, sqrt, log, x_9, **2, u-, log, x_9]",(((-(x_1)*((x_7)**2)**2)*(((x_7)**2/(x_4)**2)**(-(x_4))**2))/(((x_9)**2*sqrt(abs(log(abs(x_9)))))*(-(log(abs(x_9))))**2)),5774.84375,-0.06089607626199722,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
391,27,"[/, *, *, u-, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8, *, *, **2, x_9, sqrt, log, x_6, **3, **3, x_5]",(((-((x_9)**2)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))/(((x_9)**2*sqrt(abs(log(abs(x_6)))))*((x_5)**3)**3)),5667.3359375,-0.05986586958169937,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
392,27,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, -, x_6, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**(x_6-x_5))))+(x_1+cos((x_7-cos(x_8))))),3289.861572265625,-0.024768926203250885,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
393,27,"[/, *, *, u-, x_1, **2, u-, x_6, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((-(x_1)*(-(x_6))**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5825.58203125,-0.06330833584070206,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
394,27,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_9, x_6, -, x_6, x_5, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_9*x_6)**(x_6-x_5))))+(x_1+cos((x_7-cos(x_8))))),3294.799560546875,-0.0257478728890419,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
395,27,"[/, *, *, u-, x_1, **2, **2, x_9, **, **2, u-, x_9, **2, *, x_4, x_4, **2, *, **2, x_9, **2, sin, x_9]",(((-(x_1)*((x_9)**2)**2)*((-(x_9))**2**((x_4*x_4))**2))/(((x_9)**2*(sin(x_9))**2))**2),5281.75537109375,-0.05957457423210144,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
396,27,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_7, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_7)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6132.197265625,-0.07466886937618256,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
397,27,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5271.37939453125,-0.05789364129304886,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
398,27,"[+, x_1, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8]",(x_1+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))),4031.63671875,-0.05119509994983673,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
399,27,"[+, x_1, cos, -, x_7, cos, sqrt, x_2]",(x_1+cos((x_7-cos(sqrt(abs(x_2)))))),3228.878173828125,-0.007207193877547979,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
400,27,"[+, *, *, **2, x_9, sqrt, log, x_9, /, /, x_9, sin, x_1, **, *, x_4, x_6, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_9)))))*((x_9/sin(x_1))/((x_4*x_6)**-(x_4))))+(x_1+cos((x_7-cos(x_8))))),3298.412109375,-0.027264267206192017,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
401,27,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, /, **2, x_5, /, /, x_7, x_9, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_5)**2/((x_7/x_9)/(x_4)**2))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6135.89501953125,-0.0760921984910965,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
402,27,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),5896.31982421875,-0.0745791494846344,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
403,27,"[*, *, *, u-, log, x_5, **2, **2, x_9, **2, u-, x_4, -, /, **2, u-, x_9, /, x_9, x_5, *, u-, x_4, **2, **2, x_10]",(((-(log(abs(x_5)))*((x_9)**2)**2)*(-(x_4))**2)*(((-(x_9))**2/(x_9/x_5))-(-(x_4)*((x_10)**2)**2))),5808.9560546875,-0.06131532043218613,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
404,27,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3670.912841796875,-0.046503596007823944,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
405,27,"[+, +, x_1, cos, -, x_7, cos, x_0, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",((x_1+cos((x_7-cos(x_0))))+(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),3299.363525390625,-0.030549772083759308,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
406,27,"[*, **, *, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, **2, x_4, *, log, u-, **2, x_9, x_1]",(((-(x_9)*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-(x_4)**2)))*(log(abs(-((x_9)**2)))*x_1)),4832.630859375,-0.05653587728738785,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
407,27,"[+, *, *, **2, **2, x_4, **2, u-, x_1, **, /, **2, x_4, **2, x_5, **2, **2, x_8, +, x_1, cos, -, x_7, cos, x_3]",(((((x_4)**2)**2*(-(x_1))**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))+(x_1+cos((x_7-cos(x_3))))),3315.590087890625,-0.034904614090919495,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
408,28,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_5, x_1]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_5))))*x_1)),4473.7353515625,-0.055392466485500336,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
409,28,"[/, *, *, u-, x_1, **2, **2, x_9, **, **2, u-, x_9, **2, *, x_4, x_4, **2, *, **2, x_9, **2, sin, x_9]",(((-(x_1)*((x_9)**2)**2)*((-(x_9))**2**((x_4*x_4))**2))/(((x_9)**2*(sin(x_9))**2))**2),5281.75537109375,-0.05957457423210144,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
410,28,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_7, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_7)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6132.197265625,-0.07466886937618256,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
411,28,"[*, *, *, u-, x_1, **2, **2, x_9, **2, u-, x_9, -, u-, -, /, x_7, x_9, **2, x_7, **2, **2, **2, x_9]",(((-(x_1)*((x_9)**2)**2)*(-(x_9))**2)*(-(((x_7/x_9)-(x_7)**2))-(((x_9)**2)**2)**2)),5271.37939453125,-0.05789364129304886,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
412,28,"[+, x_1, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8]",(x_1+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))),4031.63671875,-0.05119509994983673,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
413,28,"[+, x_1, cos, -, x_7, cos, sqrt, x_2]",(x_1+cos((x_7-cos(sqrt(abs(x_2)))))),3228.878173828125,-0.007207193877547979,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
414,28,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, /, **2, x_5, /, /, x_7, x_9, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_5)**2/((x_7/x_9)/(x_4)**2))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6135.89501953125,-0.0760921984910965,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
415,28,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),5896.31982421875,-0.0745791494846344,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
416,28,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3670.912841796875,-0.046503596007823944,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
417,28,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5848.1884765625,-0.07246586680412292,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
418,28,"[/, *, *, sin, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, *, x_9, x_9, **, /, **2, x_7, **2, x_10, **2, u-, x_4]",(((sin(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_9*x_9))**2)*(((x_7)**2/(x_10)**2)**(-(x_4))**2))),5287.01953125,-0.06826592236757278,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
419,28,"[*, **, *, u-, x_4, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, **2, x_4, *, log, u-, **2, x_9, x_1]",(((-(x_4)*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-(x_4)**2)))*(log(abs(-((x_9)**2)))*x_1)),4832.630859375,-0.05762194097042084,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
420,28,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_10, x_1]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_10))))*x_1)),4031.79248046875,-0.05371394008398056,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
421,28,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3289.290283203125,-0.04631961137056351,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
422,29,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_5, x_1]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_5))))*x_1)),4473.7353515625,-0.055392466485500336,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
423,29,"[/, *, *, u-, x_1, **2, **2, x_9, **, **2, u-, x_9, **2, *, x_4, x_4, **2, *, **2, x_9, **2, sin, x_9]",(((-(x_1)*((x_9)**2)**2)*((-(x_9))**2**((x_4*x_4))**2))/(((x_9)**2*(sin(x_9))**2))**2),5281.75537109375,-0.05957457423210144,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
424,29,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_7, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_7)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6132.197265625,-0.07466886937618256,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
425,29,"[+, x_1, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, **2, x_8]",(x_1+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**((x_8)**2)**2))),4031.63671875,-0.05119509994983673,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
426,29,"[+, x_1, cos, -, x_7, cos, sqrt, x_2]",(x_1+cos((x_7-cos(sqrt(abs(x_2)))))),3228.878173828125,-0.007207193877547979,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
427,29,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, /, **2, x_5, /, /, x_7, x_9, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_5)**2/((x_7/x_9)/(x_4)**2))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6135.89501953125,-0.0760921984910965,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
428,29,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),5896.31982421875,-0.0745791494846344,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
429,29,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3670.912841796875,-0.046503596007823944,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
430,29,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5848.1884765625,-0.07246586680412292,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
431,29,"[*, **, *, u-, x_4, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, **2, x_4, *, log, u-, **2, x_9, x_1]",(((-(x_4)*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-(x_4)**2)))*(log(abs(-((x_9)**2)))*x_1)),4832.630859375,-0.05762194097042084,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
432,29,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, log, u-, *, x_9, x_10, x_1]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(log(abs(-((x_9*x_10))))*x_1)),4031.79248046875,-0.05371394008398056,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
433,29,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3289.290283203125,-0.04631961137056351,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
434,29,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_9)**2*((x_4)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6137.5625,-0.07649978250265121,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
435,29,"[/, *, *, sin, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, *, x_9, x_9, **, /, **2, x_7, **2, x_10, **2, *, x_5, x_9]",(((sin(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_9*x_9))**2)*(((x_7)**2/(x_10)**2)**((x_5*x_9))**2))),5285.36181640625,-0.06838902831077576,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
436,29,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4031.99609375,-0.05395215004682541,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
437,29,"[-, *, *, u-, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, *, x_6, x_4, -, **2, **2, **2, x_8, u-, -, /, x_7, x_9, **2, x_7]",(((-(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_6*x_4))**2))-((((x_8)**2)**2)**2--(((x_7/x_9)-(x_7)**2)))),5056.8984375,-0.05920088291168213,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
438,29,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, **2, x_9, **2, /, x_4, x_9, **, /, **2, x_7, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/((((x_9)**2)**2*((x_4/x_9))**2)*(((x_7)**2/(x_10)**2)**(-(x_4))**2))),6135.8486328125,-0.07547596096992493,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
439,30,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_7, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_7)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6132.197265625,-0.07466886937618256,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
440,30,"[+, x_1, cos, -, x_7, cos, sqrt, x_2]",(x_1+cos((x_7-cos(sqrt(abs(x_2)))))),3228.878173828125,-0.007207193877547979,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
441,30,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, /, **2, x_5, /, /, x_7, x_9, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_5)**2/((x_7/x_9)/(x_4)**2))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6135.89501953125,-0.0760921984910965,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
442,30,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),5896.31982421875,-0.0745791494846344,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
443,30,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3670.912841796875,-0.046503596007823944,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
444,30,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5848.1884765625,-0.07246586680412292,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
445,30,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3289.290283203125,-0.04631961137056351,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
446,30,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_9)**2*((x_4)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6137.5625,-0.07649978250265121,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
447,30,"[/, *, *, sin, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, *, x_9, x_9, **, /, **2, x_7, **2, x_10, **2, *, x_5, x_9]",(((sin(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_9*x_9))**2)*(((x_7)**2/(x_10)**2)**((x_5*x_9))**2))),5285.36181640625,-0.06838902831077576,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
448,30,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, **2, x_9, **2, /, x_4, x_9, **, /, **2, x_7, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/((((x_9)**2)**2*((x_4/x_9))**2)*(((x_7)**2/(x_10)**2)**(-(x_4))**2))),6135.8486328125,-0.07547596096992493,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
449,30,"[*, **, *, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, sin, x_8, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_9)*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-sin(x_8))))*-((-((x_5-x_7))+x_2))),3670.913818359375,-0.04658854007720947,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
450,30,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_4)**2*((x_9)**2)**2))),3670.91455078125,-0.053333885967731476,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
451,30,"[+, *, *, **2, x_9, sqrt, log, x_6, **2, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_6)))))*(-(x_4))**2)+(x_1+cos((x_7-cos(x_8))))),3287.4375,-0.017153369262814522,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
452,30,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, u-, x_9, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*-(x_9))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4031.759521484375,-0.05799957364797592,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
453,30,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, *, *, **2, **2, x_4, **2, **2, x_8, **, /, **2, x_4, **2, x_8, **2, **2, x_8]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/((((x_4)**2)**2*((x_8)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))),4898.04638671875,-0.06418807804584503,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
454,31,"[+, x_1, cos, -, x_7, cos, sqrt, x_2]",(x_1+cos((x_7-cos(sqrt(abs(x_2)))))),3228.878173828125,-0.007207193877547979,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
455,31,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, /, **2, x_5, /, /, x_7, x_9, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_5)**2/((x_7/x_9)/(x_4)**2))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6135.89501953125,-0.0760921984910965,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
456,31,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),5896.31982421875,-0.0745791494846344,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
457,31,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3670.912841796875,-0.046503596007823944,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
458,31,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5848.1884765625,-0.07246586680412292,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
459,31,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3289.290283203125,-0.04631961137056351,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
460,31,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/(((x_9)**2*((x_4)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6137.5625,-0.07649978250265121,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
461,31,"[/, *, *, sin, x_1, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, *, x_9, x_9, **, /, **2, x_7, **2, x_10, **2, *, x_5, x_9]",(((sin(x_1)*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_9*x_9))**2)*(((x_7)**2/(x_10)**2)**((x_5*x_9))**2))),5285.36181640625,-0.06838902831077576,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
462,31,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, **2, x_9, **2, /, x_4, x_9, **, /, **2, x_7, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/((((x_9)**2)**2*((x_4/x_9))**2)*(((x_7)**2/(x_10)**2)**(-(x_4))**2))),6135.8486328125,-0.07547596096992493,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
463,31,"[*, **, *, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, sin, x_8, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_9)*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-sin(x_8))))*-((-((x_5-x_7))+x_2))),3670.913818359375,-0.04658854007720947,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
464,31,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_4)**2*((x_9)**2)**2))),3670.91455078125,-0.053333885967731476,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
465,31,"[+, *, *, **2, x_9, sqrt, log, x_6, **2, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_6)))))*(-(x_4))**2)+(x_1+cos((x_7-cos(x_8))))),3287.4375,-0.017153369262814522,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
466,31,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, u-, x_9, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*-(x_9))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4031.759521484375,-0.05799957364797592,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
467,31,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, *, *, **2, **2, x_4, **2, **2, x_8, **, /, **2, x_4, **2, x_8, **2, **2, x_8]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/((((x_4)**2)**2*((x_8)**2)**2)*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))),4898.04638671875,-0.06418807804584503,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
468,31,"[/, *, *, u-, x_1, **, **2, x_4, **2, x_9, **, **2, u-, x_9, **2, *, x_5, x_4, **2, *, **2, **2, x_1, **2, x_9]",(((-(x_1)*((x_4)**2**(x_9)**2))*((-(x_9))**2**((x_5*x_4))**2))/((((x_1)**2)**2*(x_9)**2))**2),4827.68408203125,-0.059027835726737976,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
469,31,"[/, *, *, u-, x_1, **2, **2, x_10, **, **2, u-, x_9, **2, x_2, *, *, **2, **2, x_4, **2, **2, x_8, **, /, **2, x_4, x_4, **2, **2, x_8]",(((-(x_1)*((x_10)**2)**2)*((-(x_9))**2**(x_2)**2))/((((x_4)**2)**2*((x_8)**2)**2)*(((x_4)**2/x_4)**((x_8)**2)**2))),4898.03515625,-0.06351366639137268,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
470,31,"[/, *, *, u-, x_1, **2, **2, x_7, **, /, **2, x_7, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_3, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((-(x_1)*((x_7)**2)**2)*(((x_7)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_3)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5827.8291015625,-0.06840135902166367,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
471,31,"[/, *, x_1, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",((x_1*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),4783.3486328125,-0.05889464169740677,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
472,31,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **2, *, x_9, x_4, *, *, **2, x_9, /, **2, x_4, u-, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*((x_9*x_4))**2)/(((x_9)**2*((x_4)**2/-(x_4)))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),5939.9423828125,-0.07485521584749222,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
473,32,"[+, x_1, cos, -, x_7, cos, sqrt, x_2]",(x_1+cos((x_7-cos(sqrt(abs(x_2)))))),3228.878173828125,-0.007207193877547979,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
474,32,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),5896.31982421875,-0.0745791494846344,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
475,32,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5848.1884765625,-0.07246586680412292,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
476,32,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3289.290283203125,-0.04631961137056351,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
477,32,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_4)**2*((x_9)**2)**2))),3670.91455078125,-0.053333885967731476,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
478,32,"[+, *, *, **2, x_9, sqrt, log, x_6, **2, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_6)))))*(-(x_4))**2)+(x_1+cos((x_7-cos(x_8))))),3287.4375,-0.017153369262814522,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
479,32,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, u-, x_9, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*-(x_9))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4031.759521484375,-0.05799957364797592,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
480,32,"[/, *, *, u-, x_1, **, **2, x_4, **2, x_9, **, **2, u-, x_9, **2, *, x_5, x_4, **2, *, **2, **2, x_1, **2, x_9]",(((-(x_1)*((x_4)**2**(x_9)**2))*((-(x_9))**2**((x_5*x_4))**2))/((((x_1)**2)**2*(x_9)**2))**2),4827.68408203125,-0.059027835726737976,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
481,32,"[/, *, x_1, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",((x_1*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),4783.3486328125,-0.05889464169740677,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
482,32,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **2, *, x_9, x_4, *, *, **2, x_9, /, **2, x_4, u-, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*((x_9*x_4))**2)/(((x_9)**2*((x_4)**2/-(x_4)))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),5939.9423828125,-0.07485521584749222,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
483,32,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),6137.533203125,-0.07973955571651459,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
484,32,"[/, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_9)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),6014.92626953125,-0.07579464465379715,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
485,32,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4081.1298828125,-0.05887077748775482,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
486,32,"[*, **, *, /, **2, x_5, u-, x_4, **2, **2, x_9, /, u-, *, x_9, x_9, -, **2, x_9, x_9, *, *, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_5)**2/-(x_4))*((x_9)**2)**2)**(-((x_9*x_9))/((x_9)**2-x_9)))*(((x_4)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),6135.802734375,-0.07842252403497696,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
487,32,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_9, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3643.2470703125,-0.04692024737596512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
488,32,"[/, *, *, u-, x_1, **2, **2, x_10, **, /, **2, x_4, **2, x_10, **2, *, x_4, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7]",(((-(x_1)*((x_10)**2)**2)*(((x_4)**2/(x_10)**2)**((x_4*x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))),4832.45849609375,-0.07212542742490768,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
489,33,"[+, x_1, cos, -, x_7, cos, sqrt, x_2]",(x_1+cos((x_7-cos(sqrt(abs(x_2)))))),3228.878173828125,-0.007207193877547979,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
490,33,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),5896.31982421875,-0.0745791494846344,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
491,33,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5848.1884765625,-0.07246586680412292,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
492,33,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3289.290283203125,-0.04631961137056351,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
493,33,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_4)**2*((x_9)**2)**2))),3670.91455078125,-0.053333885967731476,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
494,33,"[+, *, *, **2, x_9, sqrt, log, x_6, **2, u-, x_4, +, x_1, cos, -, x_7, cos, x_8]",((((x_9)**2*sqrt(abs(log(abs(x_6)))))*(-(x_4))**2)+(x_1+cos((x_7-cos(x_8))))),3287.4375,-0.017153369262814522,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
495,33,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, u-, x_9, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*-(x_9))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4031.759521484375,-0.05799957364797592,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
496,33,"[/, *, *, u-, x_1, **, **2, x_4, **2, x_9, **, **2, u-, x_9, **2, *, x_5, x_4, **2, *, **2, **2, x_1, **2, x_9]",(((-(x_1)*((x_4)**2**(x_9)**2))*((-(x_9))**2**((x_5*x_4))**2))/((((x_1)**2)**2*(x_9)**2))**2),4827.68408203125,-0.059027835726737976,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
497,33,"[/, *, x_1, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",((x_1*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),4783.3486328125,-0.05889464169740677,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
498,33,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **2, *, x_9, x_4, *, *, **2, x_9, /, **2, x_4, u-, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*((x_9*x_4))**2)/(((x_9)**2*((x_4)**2/-(x_4)))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),5939.9423828125,-0.07485521584749222,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
499,33,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),6137.533203125,-0.07973955571651459,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
500,33,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4081.1298828125,-0.05887077748775482,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
501,33,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_9, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3643.2470703125,-0.04692024737596512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
502,33,"[/, *, *, u-, x_1, **2, **2, x_10, **, /, **2, x_4, **2, x_10, **2, *, x_4, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7]",(((-(x_1)*((x_10)**2)**2)*(((x_4)**2/(x_10)**2)**((x_4*x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))),4832.45849609375,-0.07212542742490768,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
503,33,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, log, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_0, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-(log(abs(x_5)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_0)**2)**((x_8)**2)**2))),6135.10693359375,-0.07871872931718826,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
504,33,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_8, *, *, u-, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))/((-(x_9)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),5998.326171875,-0.07651586830615997,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
505,33,"[+, *, *, u-, x_1, -, u-, x_1, *, x_9, x_4, cos, *, x_5, u-, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((-(x_1)*(-(x_1)-(x_9*x_4)))*cos((x_5*-(x_9))))+(x_1+cos((x_7-cos(x_8))))),3270.44677734375,-0.01163115818053484,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
506,34,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, *, **3, *, x_9, x_4, **2, /, x_4, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/-(x_4))**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_9*x_4))**3*((x_4/x_9))**2))),5896.31982421875,-0.0745791494846344,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
507,34,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7, *, *, *, x_9, x_4, **2, **2, x_9, **2, u-, exp, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))/(((x_9*x_4)*((x_9)**2)**2)*(-(exp(x_9)))**2)),5848.1884765625,-0.07246586680412292,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
508,34,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_4)**2*((x_9)**2)**2))),3670.91455078125,-0.053333885967731476,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
509,34,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, u-, x_9, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*-(x_9))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4031.759521484375,-0.05799957364797592,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
510,34,"[/, *, *, u-, x_1, **, **2, x_4, **2, x_9, **, **2, u-, x_9, **2, *, x_5, x_4, **2, *, **2, **2, x_1, **2, x_9]",(((-(x_1)*((x_4)**2**(x_9)**2))*((-(x_9))**2**((x_5*x_4))**2))/((((x_1)**2)**2*(x_9)**2))**2),4827.68408203125,-0.059027835726737976,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
511,34,"[/, *, x_1, **, /, **2, x_4, **2, x_8, **2, **2, x_8, *, *, **2, x_9, **2, **2, x_2, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",((x_1*(((x_4)**2/(x_8)**2)**((x_8)**2)**2))/(((x_9)**2*((x_2)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),4783.3486328125,-0.05889464169740677,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
512,34,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **2, *, x_9, x_4, *, *, **2, x_9, /, **2, x_4, u-, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*((x_9*x_4))**2)/(((x_9)**2*((x_4)**2/-(x_4)))*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),5939.9423828125,-0.07485521584749222,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
513,34,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),6137.533203125,-0.07973955571651459,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
514,34,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4081.1298828125,-0.05887077748775482,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
515,34,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_9, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3643.2470703125,-0.04692024737596512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
516,34,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, log, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_0, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-(log(abs(x_5)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_0)**2)**((x_8)**2)**2))),6135.10693359375,-0.07871872931718826,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
517,34,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_8, *, *, u-, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))/((-(x_9)*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),5998.326171875,-0.07651586830615997,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
518,34,"[/, *, *, u-, x_1, **2, **2, x_10, **, /, **2, x_5, **2, x_10, **2, *, x_4, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7]",(((-(x_1)*((x_10)**2)**2)*(((x_5)**2/(x_10)**2)**((x_4*x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))),4832.31005859375,-0.07222946733236313,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
519,34,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
520,34,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.04691513627767563,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
521,34,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
522,34,"[/, *, *, u-, x_1, **2, **2, x_7, **, /, **2, x_7, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((-(x_1)*((x_7)**2)**2)*(((x_7)**2/(x_4)**2)**(-(x_4))**2))/((((x_9)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5865.62109375,-0.07348532229661942,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
523,34,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_4, **2, **2, x_9, u-, /, **2, x_9, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2/sin(x_9))))),3654.853759765625,-0.04940573871135712,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
524,35,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_4)**2*((x_9)**2)**2))),3670.91455078125,-0.053333885967731476,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
525,35,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, u-, x_9, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*-(x_9))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4031.759521484375,-0.05799957364797592,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
526,35,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),6137.533203125,-0.07973955571651459,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
527,35,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4081.1298828125,-0.05887077748775482,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
528,35,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_9, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3643.2470703125,-0.04692024737596512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
529,35,"[/, *, *, u-, x_1, **2, **2, x_10, **, /, **2, x_5, **2, x_10, **2, *, x_4, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7]",(((-(x_1)*((x_10)**2)**2)*(((x_5)**2/(x_10)**2)**((x_4*x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))),4832.31005859375,-0.07222946733236313,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
530,35,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
531,35,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.04691513627767563,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
532,35,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
533,35,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_4, **2, **2, x_9, u-, /, **2, x_9, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2/sin(x_9))))),3654.853759765625,-0.04940573871135712,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
534,35,"[*, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_10, **2, **2, x_9, *, *, *, x_9, **2, x_9, **2, **2, x_9, **2, **2, **2, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_10)**2)**2*((x_9)**2)**2))*(((x_9*(x_9)**2)*((x_9)**2)**2)*(((x_4)**2)**2)**2)),6137.94873046875,-0.07991132885217667,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
535,35,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, **2, *, **2, **2, x_1, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/((((x_1)**2)**2*(x_9)**2))**2),4716.81103515625,-0.061045221984386444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
536,35,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_9, **2, x_6, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_9)**2/(x_6)**2)**(-(x_4))**2))),4003.724853515625,-0.05415430665016174,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
537,35,"[/, *, *, u-, x_1, **2, **2, x_10, **, /, **2, x_4, **2, x_10, **2, *, x_4, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7]",(((-(x_1)*((x_10)**2)**2)*(((x_4)**2/(x_10)**2)**((x_4*x_9))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))),4832.630859375,-0.07296878099441528,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
538,35,"[/, *, *, u-, x_1, **2, **2, x_7, **, /, **2, x_7, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_7)**2)**2)*(((x_7)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),5808.88525390625,-0.0752943828701973,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
539,35,"[*, **, *, **2, u-, x_1, **2, **2, x_9, /, u-, **2, x_4, -, **2, x_9, x_9, *, **, /, **2, x_4, **2, x_0, **2, u-, x_4, x_1]",((((-(x_1))**2*((x_9)**2)**2)**(-((x_4)**2)/((x_9)**2-x_9)))*((((x_4)**2/(x_0)**2)**(-(x_4))**2)*x_1)),4671.2353515625,-0.059844665229320526,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
540,35,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_8, *, *, u-, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))/((-(x_9)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**(-(x_4))**2))),5998.2470703125,-0.07921527326107025,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
541,36,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_4)**2*((x_9)**2)**2))),3670.91455078125,-0.053333885967731476,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
542,36,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, u-, x_9, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*-(x_9))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4031.759521484375,-0.05799957364797592,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
543,36,"[/, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**((x_8)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),6137.533203125,-0.07973955571651459,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
544,36,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_9, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3643.2470703125,-0.04692024737596512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
545,36,"[/, *, *, u-, x_1, **2, **2, x_10, **, /, **2, x_5, **2, x_10, **2, *, x_4, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7]",(((-(x_1)*((x_10)**2)**2)*(((x_5)**2/(x_10)**2)**((x_4*x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))),4832.31005859375,-0.07222946733236313,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
546,36,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
547,36,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.04691513627767563,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
548,36,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
549,36,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_4, **2, **2, x_9, u-, /, **2, x_9, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2/sin(x_9))))),3654.853759765625,-0.04940573871135712,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
550,36,"[*, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_10, **2, **2, x_9, *, *, *, x_9, **2, x_9, **2, **2, x_9, **2, **2, **2, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_10)**2)**2*((x_9)**2)**2))*(((x_9*(x_9)**2)*((x_9)**2)**2)*(((x_4)**2)**2)**2)),6137.94873046875,-0.07991132885217667,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
551,36,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, **2, *, **2, **2, x_1, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/((((x_1)**2)**2*(x_9)**2))**2),4716.81103515625,-0.061045221984386444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
552,36,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_9, **2, x_6, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_9)**2/(x_6)**2)**(-(x_4))**2))),4003.724853515625,-0.05415430665016174,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
553,36,"[/, *, *, u-, x_1, **2, **2, x_10, **, /, **2, x_4, **2, x_10, **2, *, x_4, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7]",(((-(x_1)*((x_10)**2)**2)*(((x_4)**2/(x_10)**2)**((x_4*x_9))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))),4832.630859375,-0.07296878099441528,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
554,36,"[*, **, *, **2, u-, x_1, **2, **2, x_9, /, u-, **2, x_4, -, **2, x_9, x_9, *, **, /, **2, x_4, **2, x_0, **2, u-, x_4, x_1]",((((-(x_1))**2*((x_9)**2)**2)**(-((x_4)**2)/((x_9)**2-x_9)))*((((x_4)**2/(x_0)**2)**(-(x_4))**2)*x_1)),4671.2353515625,-0.059844665229320526,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
555,36,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_8, *, *, u-, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_9, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))/((-(x_9)*((x_9)**2)**2)*(((x_4)**2/(x_9)**2)**(-(x_4))**2))),5998.2470703125,-0.07921527326107025,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
556,36,"[/, *, x_1, **, /, **2, x_4, **2, x_4, **2, **2, x_8, *, *, **2, x_9, sqrt, **2, x_9, **2, *, **2, x_4, x_5]",((x_1*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))/(((x_9)**2*sqrt(abs((x_9)**2)))*(((x_4)**2*x_5))**2)),4410.6259765625,-0.05910804122686386,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
557,36,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_4, cos, *, x_5, **, x_7, x_4, *, *, **2, x_9, **2, **2, x_4, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((-(x_1)*((x_9)**2**(x_4)**2))*cos((x_5*(x_7**x_4))))+(((x_9)**2*((x_4)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),4033.8251953125,-0.058973200619220734,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
558,36,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_9, **2, x_6, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_9)**2/(x_6)**2)**(-(x_4))**2))),6066.248046875,-0.07936441153287888,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
559,36,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_8, **2, **2, x_0, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_8)))**2*((x_0)**2)**2)*-(((x_9)**2)**2))),4011.53076171875,-0.05719945579767227,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
560,36,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_9, log, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_9)**2/log(abs(x_9)))**(-(x_4))**2))),4003.725341796875,-0.054473310708999634,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
561,36,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_0, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_0)**2)**((x_8)**2)**2))),5371.02734375,-0.0789308026432991,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
562,36,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_9, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_9)**2*((x_9)**2)**2))),3671.001220703125,-0.05404915660619736,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
563,36,"[+, +, x_1, cos, -, x_7, cos, x_8, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_0, **2, **2, x_8]",((x_1+cos((x_7-cos(x_8))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_0)**2)**((x_8)**2)**2))),3294.519287109375,-0.04669686406850815,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
564,37,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_4)**2*((x_9)**2)**2))),3670.91455078125,-0.053333885967731476,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
565,37,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, u-, x_9, *, *, **2, **2, x_4, **2, **2, x_9, u-, /, *, x_5, x_3, sin, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*-(x_9))))+((((x_4)**2)**2*((x_9)**2)**2)*-(((x_5*x_3)/sin(x_9))))),4031.759521484375,-0.05799957364797592,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
566,37,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_9, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3643.2470703125,-0.04692024737596512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
567,37,"[/, *, *, u-, x_1, **2, **2, x_10, **, /, **2, x_5, **2, x_10, **2, *, x_4, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7]",(((-(x_1)*((x_10)**2)**2)*(((x_5)**2/(x_10)**2)**((x_4*x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))),4832.31005859375,-0.07222946733236313,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
568,37,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
569,37,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.04691513627767563,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
570,37,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
571,37,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_4, **2, **2, x_9, u-, /, **2, x_9, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2/sin(x_9))))),3654.853759765625,-0.04940573871135712,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
572,37,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, **2, *, **2, **2, x_1, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/((((x_1)**2)**2*(x_9)**2))**2),4716.81103515625,-0.061045221984386444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
573,37,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_9, **2, x_6, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_9)**2/(x_6)**2)**(-(x_4))**2))),4003.724853515625,-0.05415430665016174,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
574,37,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_8, **2, **2, x_0, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_8)))**2*((x_0)**2)**2)*-(((x_9)**2)**2))),4011.53076171875,-0.05719945579767227,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
575,37,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_9, log, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_9)**2/log(abs(x_9)))**(-(x_4))**2))),4003.725341796875,-0.054473310708999634,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
576,37,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_0, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_0)**2)**((x_8)**2)**2))),5371.02734375,-0.0789308026432991,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
577,37,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, x_9, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_9)**2*((x_9)**2)**2))),3671.001220703125,-0.05404915660619736,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
578,37,"[+, +, x_1, cos, -, x_7, cos, x_8, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_0, **2, **2, x_8]",((x_1+cos((x_7-cos(x_8))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_0)**2)**((x_8)**2)**2))),3294.519287109375,-0.04669686406850815,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
579,37,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_4, cos, *, x_5, **, x_7, x_4, *, *, **2, **2, x_7, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, u-, x_4]",(((-(x_1)*((x_9)**2**(x_4)**2))*cos((x_5*(x_7**x_4))))+((((x_7)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**(-(x_4))**2))),4033.76025390625,-0.060939639806747437,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
580,37,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((-(x_9)*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**(-(x_4))**2))),5998.2353515625,-0.08057749271392822,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
581,37,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, **, x_2, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*(x_2**x_4))))+-((-((x_5-x_7))+x_2))),3216.67138671875,-0.02586798369884491,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
582,37,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, **2, x_4, **2, **2, x_9, *, *, x_8, sin, x_4, **2, **2, x_9]",(-((-((x_5-x_7))+x_2))+((((x_4)**2)**2*((x_9)**2)**2)*((x_8*sin(x_4))*((x_9)**2)**2))),3670.914306640625,-0.049414850771427155,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
583,37,"[/, *, *, u-, x_1, **2, **2, x_10, **, /, **2, x_9, **2, x_10, **2, *, x_4, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_5, **2, u-, x_7]",(((-(x_1)*((x_10)**2)**2)*(((x_9)**2/(x_10)**2)**((x_4*x_9))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_5)**2)**(-(x_7))**2))),4832.630859375,-0.07347145676612854,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
584,38,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_9, **2, **2, x_9, u-, /, **2, x_6, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)*-(((x_6)**2/sin(x_9))))),3643.2470703125,-0.04692024737596512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
585,38,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
586,38,"[*, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.04691513627767563,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
587,38,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
588,38,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_4, **2, **2, x_9, u-, /, **2, x_9, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2/sin(x_9))))),3654.853759765625,-0.04940573871135712,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
589,38,"[+, +, x_1, cos, -, x_7, cos, x_8, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_0, **2, **2, x_8]",((x_1+cos((x_7-cos(x_8))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_0)**2)**((x_8)**2)**2))),3294.519287109375,-0.04669686406850815,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
590,38,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, x_5, **, x_2, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((x_5*(x_2**x_4))))+-((-((x_5-x_7))+x_2))),3216.67138671875,-0.02586798369884491,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
591,38,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, **, /, **2, x_4, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+(((x_4)**2/(x_4)**2)**((x_8)**2)**2))),4022.231689453125,-0.06289074569940567,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
592,38,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4202.5615234375,-0.07580786943435669,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
593,38,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_9, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_9)))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4018.794677734375,-0.0619368851184845,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
594,38,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),5371.02734375,-0.08155081421136856,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
595,38,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_2, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_2)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.450927734375,-0.04173031449317932,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
596,38,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9]",(-((-((x_5-x_7))+x_7))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))),4007.694091796875,-0.057326287031173706,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
597,38,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, /, **2, x_9, x_4, **2, **2, x_1, **, /, **2, x_9, **2, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2/x_4)*((x_1)**2)**2)*(((x_9)**2/(x_9)**2)**(-(x_4))**2))),3997.0537109375,-0.056299954652786255,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
598,38,"[+, u-, +, u-, -, x_5, x_7, x_2, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))),3670.91357421875,-0.05531071871519089,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
599,39,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
600,39,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
601,39,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_4, **2, **2, x_9, u-, /, **2, x_9, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2/sin(x_9))))),3654.853759765625,-0.04940573871135712,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
602,39,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, **, /, **2, x_4, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+(((x_4)**2/(x_4)**2)**((x_8)**2)**2))),4022.231689453125,-0.06289074569940567,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
603,39,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4202.5615234375,-0.07580786943435669,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
604,39,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_9, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_9)))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4018.794677734375,-0.0619368851184845,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
605,39,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),5371.02734375,-0.08155081421136856,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
606,39,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_2, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_2)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.450927734375,-0.04173031449317932,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
607,39,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9]",(-((-((x_5-x_7))+x_7))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))),4007.694091796875,-0.057326287031173706,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
608,39,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, /, **2, x_9, x_4, **2, **2, x_1, **, /, **2, x_9, **2, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2/x_4)*((x_1)**2)**2)*(((x_9)**2/(x_9)**2)**(-(x_4))**2))),3997.0537109375,-0.056299954652786255,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
609,39,"[+, u-, +, u-, -, x_5, x_7, x_2, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))),3670.91357421875,-0.05531071871519089,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
610,39,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5371.01416015625,-0.08017750084400177,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
611,39,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_4, **, **2, u-, x_9, **2, **2, x_7]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_4)))*((-(x_9))**2**((x_7)**2)**2))),3215.986083984375,-0.030035139992833138,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
612,39,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),4081.114013671875,-0.06794237345457077,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
613,39,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),4817.59423828125,-0.07591129839420319,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
614,39,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_6, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_6)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.047216638922691345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
615,39,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, x_1, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-(x_1)*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),5280.32568359375,-0.07963313907384872,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
616,40,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
617,40,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
618,40,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, **2, u-, x_4, **2, **2, x_9, u-, /, **2, x_9, sin, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2/sin(x_9))))),3654.853759765625,-0.04940573871135712,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
619,40,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, **, /, **2, x_4, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+(((x_4)**2/(x_4)**2)**((x_8)**2)**2))),4022.231689453125,-0.06289074569940567,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
620,40,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4202.5615234375,-0.07580786943435669,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
621,40,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_9, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_9)))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4018.794677734375,-0.0619368851184845,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
622,40,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),5371.02734375,-0.08155081421136856,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
623,40,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_2, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_2)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.450927734375,-0.04173031449317932,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
624,40,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, /, **2, x_9, x_4, **2, **2, x_1, **, /, **2, x_9, **2, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2/x_4)*((x_1)**2)**2)*(((x_9)**2/(x_9)**2)**(-(x_4))**2))),3997.0537109375,-0.056299954652786255,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
625,40,"[+, u-, +, u-, -, x_5, x_7, x_2, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))),3670.91357421875,-0.05531071871519089,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
626,40,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_4, **, **2, u-, x_9, **2, **2, x_7]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_4)))*((-(x_9))**2**((x_7)**2)**2))),3215.986083984375,-0.030035139992833138,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
627,40,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),4081.114013671875,-0.06794237345457077,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
628,40,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),4817.59423828125,-0.07591129839420319,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
629,40,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_6, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_6)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.047216638922691345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
630,40,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, x_1, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-(x_1)*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),5280.32568359375,-0.07963313907384872,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
631,40,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))),5370.890625,-0.08061593025922775,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
632,40,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, u-, *, u-, x_1, **, **2, x_5, **2, x_6]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+-((-(x_1)*((x_5)**2**(x_6)**2)))),4001.1865234375,-0.06040866672992706,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
633,40,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3296.017822265625,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
634,41,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
635,41,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
636,41,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4202.5615234375,-0.07580786943435669,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
637,41,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_9, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_9)))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4018.794677734375,-0.0619368851184845,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
638,41,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_2, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_2)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.450927734375,-0.04173031449317932,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
639,41,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, /, **2, x_9, x_4, **2, **2, x_1, **, /, **2, x_9, **2, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2/x_4)*((x_1)**2)**2)*(((x_9)**2/(x_9)**2)**(-(x_4))**2))),3997.0537109375,-0.056299954652786255,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
640,41,"[+, u-, +, u-, -, x_5, x_7, x_2, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))),3670.91357421875,-0.05531071871519089,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
641,41,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_4, **, **2, u-, x_9, **2, **2, x_7]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_4)))*((-(x_9))**2**((x_7)**2)**2))),3215.986083984375,-0.030035139992833138,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
642,41,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),4817.59423828125,-0.07591129839420319,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
643,41,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_6, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_6)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.047216638922691345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
644,41,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, u-, *, u-, x_1, **, **2, x_5, **2, x_6]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+-((-(x_1)*((x_5)**2**(x_6)**2)))),4001.1865234375,-0.06040866672992706,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
645,41,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3296.017822265625,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
646,41,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_9)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**(-(x_4))**2))),5998.2353515625,-0.08271434903144836,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
647,41,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5245.4267578125,-0.08205252885818481,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
648,41,"[+, *, *, **2, **2, x_7, **2, **2, x_9, **, /, **2, x_8, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_7)**2)**2*((x_9)**2)**2)*(((x_8)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3293.917724609375,-0.046870894730091095,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
649,41,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_9, *, *, **2, u-, x_4, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_9))))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4020.969970703125,-0.06292613595724106,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
650,41,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_1, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_1)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4042.583984375,-0.07315283268690109,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
651,41,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_9, **2, x_10, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_9)**2/(x_10)**2)**(-(x_4))**2))),3443.074951171875,-0.05040420591831207,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
652,42,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
653,42,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
654,42,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4202.5615234375,-0.07580786943435669,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
655,42,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_9, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_9)))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4018.794677734375,-0.0619368851184845,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
656,42,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_2, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_2)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.450927734375,-0.04173031449317932,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
657,42,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, /, **2, x_9, x_4, **2, **2, x_1, **, /, **2, x_9, **2, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2/x_4)*((x_1)**2)**2)*(((x_9)**2/(x_9)**2)**(-(x_4))**2))),3997.0537109375,-0.056299954652786255,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
658,42,"[+, u-, +, u-, -, x_5, x_7, x_2, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))),3670.91357421875,-0.05531071871519089,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
659,42,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_4, **, **2, u-, x_9, **2, **2, x_7]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_4)))*((-(x_9))**2**((x_7)**2)**2))),3215.986083984375,-0.030035139992833138,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
660,42,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),4817.59423828125,-0.07591129839420319,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
661,42,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_6, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_6)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.047216638922691345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
662,42,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, u-, *, u-, x_1, **, **2, x_5, **2, x_6]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+-((-(x_1)*((x_5)**2**(x_6)**2)))),4001.1865234375,-0.06040866672992706,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
663,42,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3296.017822265625,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
664,42,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_9)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**(-(x_4))**2))),5998.2353515625,-0.08271434903144836,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
665,42,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5245.4267578125,-0.08205252885818481,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
666,42,"[+, *, *, **2, **2, x_7, **2, **2, x_9, **, /, **2, x_8, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_7)**2)**2*((x_9)**2)**2)*(((x_8)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3293.917724609375,-0.046870894730091095,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
667,42,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_9, *, *, **2, u-, x_4, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_9))))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4020.969970703125,-0.06292613595724106,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
668,42,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_1, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_1)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4042.583984375,-0.07315283268690109,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
669,42,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_8, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_8)**2*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),4031.968505859375,-0.06640826165676117,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
670,42,"[/, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_7]",((((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_7)**2)**2))),6137.81640625,-0.08300667256116867,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
671,42,"[+, u-, *, u-, x_1, **, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9]",(-((-(x_1)*((x_9)**2**(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))),4022.231689453125,-0.06523749977350235,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
672,42,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),6137.89404296875,-0.08333009481430054,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
673,42,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_4, u-, x_4, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_4)**2/-(x_4))**(-(x_4))**2))),3443.066162109375,-0.05100904405117035,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
674,43,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
675,43,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
676,43,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_9, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_9)))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4018.794677734375,-0.0619368851184845,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
677,43,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_2, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_2)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.450927734375,-0.04173031449317932,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
678,43,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, /, **2, x_9, x_4, **2, **2, x_1, **, /, **2, x_9, **2, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2/x_4)*((x_1)**2)**2)*(((x_9)**2/(x_9)**2)**(-(x_4))**2))),3997.0537109375,-0.056299954652786255,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
679,43,"[+, u-, +, u-, -, x_5, x_7, x_2, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))),3670.91357421875,-0.05531071871519089,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
680,43,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_4, **, **2, u-, x_9, **2, **2, x_7]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_4)))*((-(x_9))**2**((x_7)**2)**2))),3215.986083984375,-0.030035139992833138,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
681,43,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_6, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_6)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.047216638922691345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
682,43,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, u-, *, u-, x_1, **, **2, x_5, **2, x_6]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+-((-(x_1)*((x_5)**2**(x_6)**2)))),4001.1865234375,-0.06040866672992706,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
683,43,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3296.017822265625,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
684,43,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_9)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**(-(x_4))**2))),5998.2353515625,-0.08271434903144836,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
685,43,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5245.4267578125,-0.08205252885818481,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
686,43,"[+, *, *, **2, **2, x_7, **2, **2, x_9, **, /, **2, x_8, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_7)**2)**2*((x_9)**2)**2)*(((x_8)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3293.917724609375,-0.046870894730091095,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
687,43,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_9, *, *, **2, u-, x_4, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_9))))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4020.969970703125,-0.06292613595724106,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
688,43,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_1, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_1)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4042.583984375,-0.07315283268690109,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
689,43,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_8, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_8)**2*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),4031.968505859375,-0.06640826165676117,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
690,43,"[+, u-, *, u-, x_1, **, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9]",(-((-(x_1)*((x_9)**2**(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))),4022.231689453125,-0.06523749977350235,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
691,43,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_4, u-, x_4, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_4)**2/-(x_4))**(-(x_4))**2))),3443.066162109375,-0.05100904405117035,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
692,43,"[/, *, *, **2, **2, x_5, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((((x_5)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6100.2177734375,-0.08394259959459305,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
693,43,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4189.6064453125,-0.07939130067825317,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
694,44,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*((-(x_9))**2**((x_4*x_4))**2))),3215.64892578125,-0.02488519810140133,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
695,44,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
696,44,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_9, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_9)))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4018.794677734375,-0.0619368851184845,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
697,44,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, /, **2, x_9, x_4, **2, **2, x_1, **, /, **2, x_9, **2, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2/x_4)*((x_1)**2)**2)*(((x_9)**2/(x_9)**2)**(-(x_4))**2))),3997.0537109375,-0.056299954652786255,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
698,44,"[+, u-, +, u-, -, x_5, x_7, x_2, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))),3670.91357421875,-0.05531071871519089,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
699,44,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_4, **, **2, u-, x_9, **2, **2, x_7]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_4)))*((-(x_9))**2**((x_7)**2)**2))),3215.986083984375,-0.030035139992833138,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
700,44,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_6, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_6)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.047216638922691345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
701,44,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, u-, *, u-, x_1, **, **2, x_5, **2, x_6]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+-((-(x_1)*((x_5)**2**(x_6)**2)))),4001.1865234375,-0.06040866672992706,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
702,44,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3296.017822265625,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
703,44,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5245.4267578125,-0.08205252885818481,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
704,44,"[+, *, *, **2, **2, x_7, **2, **2, x_9, **, /, **2, x_8, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_7)**2)**2*((x_9)**2)**2)*(((x_8)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3293.917724609375,-0.046870894730091095,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
705,44,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_9, *, *, **2, u-, x_4, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_9))))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4020.969970703125,-0.06292613595724106,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
706,44,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_1, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_1)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4042.583984375,-0.07315283268690109,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
707,44,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_8, **, x_7, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_8)**2*(x_7**x_4))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),4031.968505859375,-0.06640826165676117,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
708,44,"[+, u-, *, u-, x_1, **, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9]",(-((-(x_1)*((x_9)**2**(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))),4022.231689453125,-0.06523749977350235,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
709,44,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_4, u-, x_4, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_4)**2/-(x_4))**(-(x_4))**2))),3443.066162109375,-0.05100904405117035,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
710,44,"[/, *, *, **2, **2, x_5, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((((x_5)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6100.2177734375,-0.08394259959459305,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
711,44,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4189.6064453125,-0.07939130067825317,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
712,44,"[+, *, *, u-, x_1, **, **2, x_9, u-, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**-(x_9)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))+-((-((x_5-x_7))+x_2))),3216.955810546875,-0.04637754708528519,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
713,44,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_9)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))),5998.23193359375,-0.0837278962135315,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
714,45,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
715,45,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_9, x_4, *, *, **2, log, x_9, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9**x_4))))+(((log(abs(x_9)))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4018.794677734375,-0.0619368851184845,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
716,45,"[+, u-, +, u-, -, x_5, x_7, x_7, *, *, /, **2, x_9, x_4, **2, **2, x_1, **, /, **2, x_9, **2, x_9, **2, u-, x_4]",(-((-((x_5-x_7))+x_7))+((((x_9)**2/x_4)*((x_1)**2)**2)*(((x_9)**2/(x_9)**2)**(-(x_4))**2))),3997.0537109375,-0.056299954652786255,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
717,45,"[+, u-, +, u-, -, x_5, x_7, x_2, **, *, **2, u-, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9]",(-((-((x_5-x_7))+x_2))+(((-(x_9))**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))),3670.91357421875,-0.05531071871519089,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
718,45,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_6, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_6)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.047216638922691345,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
719,45,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, u-, *, u-, x_1, **, **2, x_5, **2, x_6]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+-((-(x_1)*((x_5)**2**(x_6)**2)))),4001.1865234375,-0.06040866672992706,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
720,45,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_8, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_8)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3296.017822265625,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
721,45,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5245.4267578125,-0.08205252885818481,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
722,45,"[+, *, *, **2, **2, x_7, **2, **2, x_9, **, /, **2, x_8, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_7)**2)**2*((x_9)**2)**2)*(((x_8)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3293.917724609375,-0.046870894730091095,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
723,45,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **, x_7, x_9, *, *, **2, u-, x_4, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_7**x_9))))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4020.969970703125,-0.06292613595724106,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
724,45,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_1, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_1)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4042.583984375,-0.07315283268690109,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
725,45,"[+, u-, *, u-, x_1, **, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9]",(-((-(x_1)*((x_9)**2**(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))),4022.231689453125,-0.06523749977350235,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
726,45,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_4, u-, x_4, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_4)**2/-(x_4))**(-(x_4))**2))),3443.066162109375,-0.05100904405117035,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
727,45,"[/, *, *, **2, **2, x_5, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((((x_5)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6100.2177734375,-0.08394259959459305,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
728,45,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4189.6064453125,-0.07939130067825317,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
729,45,"[+, *, *, u-, x_1, **, **2, x_9, u-, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**-(x_9)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))+-((-((x_5-x_7))+x_2))),3216.955810546875,-0.04637754708528519,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
730,45,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_9)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))),5998.23193359375,-0.0837278962135315,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
731,45,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_1, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_1)**2)**2*((x_9)**2)**2))),4104.3642578125,-0.07441740483045578,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
732,45,"[+, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_1, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_1)**2/(x_4)**2)**(-(x_4))**2))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))),4035.899658203125,-0.07044760137796402,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
733,45,"[+, *, *, **2, **2, x_4, **2, **2, x_6, **, /, **2, x_9, **2, x_4, **2, **2, x_8, u-, +, u-, -, x_5, x_7, x_2]",(((((x_4)**2)**2*((x_6)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))+-((-((x_5-x_7))+x_2))),3670.9130859375,-0.052140094339847565,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
734,45,"[/, *, *, u-, x_1, u-, exp, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, u-, x_5, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*-(exp(x_4)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*(-(x_5))**2)*(((x_4)**2)**2*((x_9)**2)**2))),4045.41552734375,-0.07372721284627914,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
735,45,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),5907.10107421875,-0.0828573927283287,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
736,45,"[*, **, *, **2, **2, x_9, **2, **2, x_9, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_9)**2)**2*((x_9)**2)**2)**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.04837565869092941,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
737,45,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_6, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_6)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**(-(x_4))**2))),5997.240234375,-0.0829860046505928,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
738,45,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, u-, x_7, sqrt, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((-(x_7)*sqrt(abs(x_9)))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),4031.772216796875,-0.06692378222942352,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
739,45,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
740,46,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
741,46,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5245.4267578125,-0.08205252885818481,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
742,46,"[+, *, *, **2, **2, x_7, **2, **2, x_9, **, /, **2, x_8, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_7)**2)**2*((x_9)**2)**2)*(((x_8)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3293.917724609375,-0.046870894730091095,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
743,46,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_4, u-, x_4, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_4)**2/-(x_4))**(-(x_4))**2))),3443.066162109375,-0.05100904405117035,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
744,46,"[/, *, *, **2, **2, x_5, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((((x_5)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6100.2177734375,-0.08394259959459305,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
745,46,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4189.6064453125,-0.07939130067825317,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
746,46,"[+, *, *, u-, x_1, **, **2, x_9, u-, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**-(x_9)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))+-((-((x_5-x_7))+x_2))),3216.955810546875,-0.04637754708528519,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
747,46,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_9)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))),5998.23193359375,-0.0837278962135315,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
748,46,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),5907.10107421875,-0.0828573927283287,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
749,46,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_6, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_6)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**(-(x_4))**2))),5997.240234375,-0.0829860046505928,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
750,46,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, u-, x_7, sqrt, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((-(x_7)*sqrt(abs(x_9)))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_8)**2)**2))),4031.772216796875,-0.06692378222942352,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
751,46,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
752,46,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
753,46,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
754,46,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
755,47,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_10, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_10)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3269.47021484375,-0.046399012207984924,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
756,47,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_8, **2, **2, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_8)**2)**((x_8)**2)**2))),5245.4267578125,-0.08205252885818481,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
757,47,"[+, *, *, **2, **2, x_7, **2, **2, x_9, **, /, **2, x_8, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_7)**2)**2*((x_9)**2)**2)*(((x_8)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3293.917724609375,-0.046870894730091095,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
758,47,"[/, *, *, **2, **2, x_5, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((((x_5)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6100.2177734375,-0.08394259959459305,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
759,47,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4189.6064453125,-0.07939130067825317,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
760,47,"[+, *, *, u-, x_1, **, **2, x_9, u-, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**-(x_9)))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))+-((-((x_5-x_7))+x_2))),3216.955810546875,-0.04637754708528519,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
761,47,"[/, *, *, **2, **2, x_6, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_9, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, u-, x_4]",(((((x_6)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_9)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))),5998.23193359375,-0.0837278962135315,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
762,47,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),5907.10107421875,-0.0828573927283287,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
763,47,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_6, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_6)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**(-(x_4))**2))),5997.240234375,-0.0829860046505928,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
764,47,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
765,47,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
766,47,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
767,47,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
768,47,"[/, *, *, **2, **2, x_5, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_7, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((((x_5)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))/((-((x_9*x_9))/((x_4)**2/(x_7)**2))*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6137.01708984375,-0.08492719382047653,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
769,47,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, -, x_6, x_5, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, **2, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_6-x_5))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4)**2)**2))),5370.9287109375,-0.08274093270301819,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
770,47,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, u-, x_7, sqrt, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((-(x_7)*sqrt(abs(x_9)))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))),4031.772216796875,-0.06799586862325668,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
771,47,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
772,47,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_6, **, /, **2, x_4, u-, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_6)**2)**2)*(((x_4)**2/-(x_4))**((x_9)**2)**2))),3442.861572265625,-0.053876303136348724,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
773,48,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
774,48,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
775,48,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
776,48,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
777,48,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, u-, x_7, sqrt, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((-(x_7)*sqrt(abs(x_9)))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))),4031.772216796875,-0.06799586862325668,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
778,48,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
779,48,"[/, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3442.845947265625,-0.058783404529094696,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
780,48,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))+-((-((x_5-x_7))+x_2))),3216.955810546875,-0.04803337901830673,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
781,48,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
782,48,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
783,49,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
784,49,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
785,49,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
786,49,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
787,49,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, u-, x_7, sqrt, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_8]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos((-(x_7)*sqrt(abs(x_9)))))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))),4031.772216796875,-0.06799586862325668,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
788,49,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
789,49,"[/, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3442.845947265625,-0.058783404529094696,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
790,49,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))+-((-((x_5-x_7))+x_2))),3216.955810546875,-0.04803337901830673,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
791,49,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
792,49,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
793,49,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, **2, sqrt, x_2, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*((x_9)**2**(x_9)**2))*((sqrt(abs(x_2)))**2**((x_4*x_4))**2))),3216.863525390625,-0.03690186142921448,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
794,49,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_3, **2, **2, x_4, **, /, **2, x_4, u-, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))+((((x_3)**2)**2*((x_4)**2)**2)*(((x_4)**2/-(x_4))**((x_9)**2)**2))),3442.845703125,-0.05038346350193024,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
795,50,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
796,50,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
797,50,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
798,50,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
799,50,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
800,50,"[/, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3442.845947265625,-0.058783404529094696,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
801,50,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, **2, x_4, **2, u-, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))+-((-((x_5-x_7))+x_2))),3216.955810546875,-0.04803337901830673,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
802,50,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
803,50,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
804,50,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_3, **2, **2, x_4, **, /, **2, x_4, u-, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))+((((x_3)**2)**2*((x_4)**2)**2)*(((x_4)**2/-(x_4))**((x_9)**2)**2))),3442.845703125,-0.05038346350193024,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
805,50,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_4, *, x_0, x_9, exp, cos, -, x_0, x_9]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_4**(x_0*x_9)))*exp(cos((x_0-x_9))))),3169.577392578125,-0.011702775955200195,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
806,50,"[/, *, *, u-, x_1, sqrt, exp, 3.81, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_8]",(((-(x_1)*sqrt(abs(exp(3.81))))*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_8)**2)**2))),4030.990234375,-0.06866540759801865,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
807,50,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, **2, sqrt, x_2, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*((x_9)**2**(x_4)**2))*((sqrt(abs(x_2)))**2**((x_4*x_4))**2))),3215.198974609375,-0.03579356148838997,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
808,50,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6096.1484375,-0.08614353835582733,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
809,50,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_7, u-, x_7, **2, **2, x_8, *, *, **2, u-, x_4, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_7)**2/-(x_7))**((x_8)**2)**2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4021.283447265625,-0.06865788251161575,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
810,50,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_3, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_3)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4032.6318359375,-0.07654628902673721,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
811,50,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, **2, **2, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*((x_9)**2**(x_9)**2))*(((x_9)**2)**2**((x_4*x_4))**2))),3216.688720703125,-0.04593941569328308,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
812,51,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
813,51,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
814,51,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
815,51,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
816,51,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
817,51,"[/, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3442.845947265625,-0.058783404529094696,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
818,51,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
819,51,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
820,51,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_3, **2, **2, x_4, **, /, **2, x_4, u-, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))+((((x_3)**2)**2*((x_4)**2)**2)*(((x_4)**2/-(x_4))**((x_9)**2)**2))),3442.845703125,-0.05038346350193024,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
821,51,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_4, *, x_0, x_9, exp, cos, -, x_0, x_9]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_4**(x_0*x_9)))*exp(cos((x_0-x_9))))),3169.577392578125,-0.011702775955200195,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
822,51,"[/, *, *, u-, x_1, sqrt, exp, 3.81, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_8]",(((-(x_1)*sqrt(abs(exp(3.81))))*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_8)**2)**2))),4030.990234375,-0.06866540759801865,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
823,51,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, **2, sqrt, x_2, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*((x_9)**2**(x_4)**2))*((sqrt(abs(x_2)))**2**((x_4*x_4))**2))),3215.198974609375,-0.03579356148838997,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
824,51,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6096.1484375,-0.08614353835582733,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
825,51,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_7, u-, x_7, **2, **2, x_8, *, *, **2, u-, x_4, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_7)**2/-(x_7))**((x_8)**2)**2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4021.283447265625,-0.06865788251161575,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
826,51,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_3, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_3)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4032.6318359375,-0.07654628902673721,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
827,51,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3670.913818359375,-0.06858312338590622,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
828,51,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, **2, x_8]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**((x_8)**2)**2))),3215.382080078125,-0.04892022907733917,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
829,51,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_7, -, -3.05, x_1, **2, **2, x_8, *, *, **2, u-, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_7)**2/(-3.05-x_1))**((x_8)**2)**2))+(((-(x_4))**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4032.042724609375,-0.06987734138965607,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
830,51,"[*, **, *, **2, u-, x_9, /, **2, x_4, **2, x_4, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_4)**2/(x_4)**2))**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.05014250427484512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
831,52,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
832,52,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
833,52,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
834,52,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
835,52,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
836,52,"[/, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3442.845947265625,-0.058783404529094696,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
837,52,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
838,52,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
839,52,"[/, *, *, u-, x_1, sqrt, exp, 3.81, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_8]",(((-(x_1)*sqrt(abs(exp(3.81))))*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_8)**2)**2))),4030.990234375,-0.06866540759801865,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
840,52,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6096.1484375,-0.08614353835582733,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
841,52,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_7, u-, x_7, **2, **2, x_8, *, *, **2, u-, x_4, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_7)**2/-(x_7))**((x_8)**2)**2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4021.283447265625,-0.06865788251161575,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
842,52,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3670.913818359375,-0.06858312338590622,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
843,52,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, **2, x_8]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**((x_8)**2)**2))),3215.382080078125,-0.04892022907733917,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
844,52,"[*, **, *, **2, u-, x_9, /, **2, x_4, **2, x_4, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_4)**2/(x_4)**2))**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.05014250427484512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
845,52,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_4))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.923828125,-0.07775233685970306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
846,52,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**(sin(x_6))**2))),3212.596923828125,-0.04485241323709488,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
847,52,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4827.91552734375,-0.08039391040802002,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
848,52,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_7, **, /, **2, x_9, **2, x_10, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_7)**2)**2)*(((x_9)**2/(x_10)**2)**(-(x_4))**2))),3442.74072265625,-0.05133679509162903,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
849,52,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3161.8369140625,-0.013529130257666111,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
850,53,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
851,53,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
852,53,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
853,53,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
854,53,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
855,53,"[/, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3442.845947265625,-0.058783404529094696,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
856,53,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
857,53,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
858,53,"[/, *, *, u-, x_1, sqrt, exp, 3.81, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_8]",(((-(x_1)*sqrt(abs(exp(3.81))))*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_8)**2)**2))),4030.990234375,-0.06866540759801865,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
859,53,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6096.1484375,-0.08614353835582733,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
860,53,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_7, u-, x_7, **2, **2, x_8, *, *, **2, u-, x_4, **2, **2, x_9, u-, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_7)**2/-(x_7))**((x_8)**2)**2))+(((-(x_4))**2*((x_9)**2)**2)*-(((x_9)**2)**2))),4021.283447265625,-0.06865788251161575,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
861,53,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3670.913818359375,-0.06858312338590622,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
862,53,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, **2, x_8]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**((x_8)**2)**2))),3215.382080078125,-0.04892022907733917,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
863,53,"[*, **, *, **2, u-, x_9, /, **2, x_4, **2, x_4, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_4)**2/(x_4)**2))**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.05014250427484512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
864,53,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_4))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.923828125,-0.07775233685970306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
865,53,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**(sin(x_6))**2))),3212.596923828125,-0.04485241323709488,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
866,53,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4827.91552734375,-0.08039391040802002,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
867,53,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_7, **, /, **2, x_9, **2, x_10, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_7)**2)**2)*(((x_9)**2/(x_10)**2)**(-(x_4))**2))),3442.74072265625,-0.05133679509162903,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
868,53,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3161.8369140625,-0.013529130257666111,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
869,53,"[/, *, /, u-, *, x_9, x_9, /, u-, x_9, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((-((x_9*x_9))/(-(x_9)/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6120.08154296875,-0.08673688769340515,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
870,53,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_4, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_4**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3162.0517578125,-0.01594284549355507,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
871,54,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
872,54,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
873,54,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
874,54,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
875,54,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
876,54,"[/, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3442.845947265625,-0.058783404529094696,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
877,54,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
878,54,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
879,54,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3670.913818359375,-0.06858312338590622,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
880,54,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, **2, x_8]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**((x_8)**2)**2))),3215.382080078125,-0.04892022907733917,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
881,54,"[*, **, *, **2, u-, x_9, /, **2, x_4, **2, x_4, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_4)**2/(x_4)**2))**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.05014250427484512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
882,54,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_4))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.923828125,-0.07775233685970306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
883,54,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**(sin(x_6))**2))),3212.596923828125,-0.04485241323709488,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
884,54,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4827.91552734375,-0.08039391040802002,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
885,54,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_7, **, /, **2, x_9, **2, x_10, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_7)**2)**2)*(((x_9)**2/(x_10)**2)**(-(x_4))**2))),3442.74072265625,-0.05133679509162903,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
886,54,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3161.8369140625,-0.013529130257666111,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
887,54,"[/, *, /, u-, *, x_9, x_9, /, u-, x_9, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((-((x_9*x_9))/(-(x_9)/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6120.08154296875,-0.08673688769340515,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
888,54,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_4, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_4**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3162.0517578125,-0.01594284549355507,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
889,54,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4018.794677734375,-0.073296919465065,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
890,54,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_3, **2, **2, x_4, **, /, **2, x_4, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))+((((x_3)**2)**2*((x_4)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))),3442.845703125,-0.05200864374637604,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
891,54,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_5, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_5)**2)**(sin(x_6))**2))),3214.129638671875,-0.047577813267707825,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
892,54,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_5, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_5))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.92724609375,-0.07828706502914429,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
893,54,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_9, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_9)**2)**2*(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))),5932.0361328125,-0.08644440025091171,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
894,55,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, exp, +, x_7, x_7, **, **2, u-, x_9, **2, *, x_4, x_4]",(-((-((x_5-x_7))+x_2))+((-(x_1)*exp((x_7+x_7)))*((-(x_9))**2**((x_4*x_4))**2))),3199.28076171875,-0.030754802748560905,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
895,55,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
896,55,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
897,55,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
898,55,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
899,55,"[/, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3442.845947265625,-0.058783404529094696,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
900,55,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
901,55,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
902,55,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, **2, x_8]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**((x_8)**2)**2))),3215.382080078125,-0.04892022907733917,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
903,55,"[*, **, *, **2, u-, x_9, /, **2, x_4, **2, x_4, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_4)**2/(x_4)**2))**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.05014250427484512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
904,55,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_4))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.923828125,-0.07775233685970306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
905,55,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**(sin(x_6))**2))),3212.596923828125,-0.04485241323709488,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
906,55,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4827.91552734375,-0.08039391040802002,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
907,55,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_7, **, /, **2, x_9, **2, x_10, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_7)**2)**2)*(((x_9)**2/(x_10)**2)**(-(x_4))**2))),3442.74072265625,-0.05133679509162903,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
908,55,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3161.8369140625,-0.013529130257666111,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
909,55,"[/, *, /, u-, *, x_9, x_9, /, u-, x_9, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((-((x_9*x_9))/(-(x_9)/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6120.08154296875,-0.08673688769340515,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
910,55,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_4, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_4**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3162.0517578125,-0.01594284549355507,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
911,55,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, cos, *, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*cos(((x_9)**2*(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4018.794677734375,-0.073296919465065,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
912,55,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_3, **2, **2, x_4, **, /, **2, x_4, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))+((((x_3)**2)**2*((x_4)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))),3442.845703125,-0.05200864374637604,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
913,55,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_5, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_5)**2)**(sin(x_6))**2))),3214.129638671875,-0.047577813267707825,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
914,55,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_5, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_5))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.92724609375,-0.07828706502914429,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
915,55,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_9, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_9)**2)**2*(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))),5932.0361328125,-0.08644440025091171,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
916,55,"[/, *, *, u-, x_1, **, -, x_6, x_4, **2, x_4, **, /, **2, x_4, **2, x_4, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_6-x_4)**(x_4)**2))*(((x_4)**2/(x_4)**2)**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.335693359375,-0.07495670020580292,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
917,55,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_9, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_4)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),3670.913818359375,-0.06987569481134415,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
918,55,"[/, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3793.33154296875,-0.07236108928918839,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
919,55,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4188.80908203125,-0.08038618415594101,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
920,56,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
921,56,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
922,56,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
923,56,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
924,56,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
925,56,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
926,56,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, **2, x_8]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**((x_8)**2)**2))),3215.382080078125,-0.04892022907733917,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
927,56,"[*, **, *, **2, u-, x_9, /, **2, x_4, **2, x_4, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_4)**2/(x_4)**2))**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.05014250427484512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
928,56,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_4))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.923828125,-0.07775233685970306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
929,56,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**(sin(x_6))**2))),3212.596923828125,-0.04485241323709488,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
930,56,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4827.91552734375,-0.08039391040802002,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
931,56,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_7, **, /, **2, x_9, **2, x_10, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_7)**2)**2)*(((x_9)**2/(x_10)**2)**(-(x_4))**2))),3442.74072265625,-0.05133679509162903,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
932,56,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3161.8369140625,-0.013529130257666111,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
933,56,"[/, *, /, u-, *, x_9, x_9, /, u-, x_9, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, **, /, **2, x_9, **2, x_4, **2, *, x_4, x_4]",(((-((x_9*x_9))/(-(x_9)/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_9)**2/(x_4)**2)**((x_4*x_4))**2))),6120.08154296875,-0.08673688769340515,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
934,56,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_4, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_4**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3162.0517578125,-0.01594284549355507,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
935,56,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_3, **2, **2, x_4, **, /, **2, x_4, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))+((((x_3)**2)**2*((x_4)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))),3442.845703125,-0.05200864374637604,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
936,56,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_5, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_5)**2)**(sin(x_6))**2))),3214.129638671875,-0.047577813267707825,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
937,56,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_5, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_5))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.92724609375,-0.07828706502914429,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
938,56,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_9, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_9)**2)**2*(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))),5932.0361328125,-0.08644440025091171,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
939,56,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_9, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_4)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),3670.913818359375,-0.06987569481134415,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
940,56,"[/, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3793.33154296875,-0.07236108928918839,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
941,56,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4188.80908203125,-0.08038618415594101,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
942,56,"[+, u-, +, u-, -, x_5, x_1, x_7, *, **, /, **2, x_4, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))+((((x_4)**2/(x_4)**2)**((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))),3442.845947265625,-0.05898301303386688,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
943,56,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_5]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_9)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_5)**2)**2))),6123.3125,-0.08735629916191101,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
944,56,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_4, cos, *, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*cos(((x_9)**2*(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3987.766357421875,-0.07363364845514297,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
945,56,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_7, u-, x_7, **2, **2, x_8, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_7)**2/-(x_7))**((x_8)**2)**2))+((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))),4021.283447265625,-0.07576810568571091,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
946,56,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, sin, /, 1.83, x_0, u-, x_1]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*(sin((1.83/x_0))**-(x_1)))),3190.23828125,-0.03375289589166641,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
947,57,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
948,57,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3664.08740234375,-0.06622032821178436,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
949,57,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
950,57,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
951,57,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
952,57,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
953,57,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, **2, x_8]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**((x_8)**2)**2))),3215.382080078125,-0.04892022907733917,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
954,57,"[*, **, *, **2, u-, x_9, /, **2, x_4, **2, x_4, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_4)**2/(x_4)**2))**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.05014250427484512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
955,57,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_4, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_4))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.923828125,-0.07775233685970306,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
956,57,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**(sin(x_6))**2))),3212.596923828125,-0.04485241323709488,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
957,57,"[/, *, *, u-, x_1, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4827.91552734375,-0.08039391040802002,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
958,57,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_7, **, /, **2, x_9, **2, x_10, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_7)**2)**2)*(((x_9)**2/(x_10)**2)**(-(x_4))**2))),3442.74072265625,-0.05133679509162903,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
959,57,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3161.8369140625,-0.013529130257666111,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
960,57,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_4, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_4**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3162.0517578125,-0.01594284549355507,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
961,57,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_5, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_5)**2)**(sin(x_6))**2))),3214.129638671875,-0.047577813267707825,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
962,57,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, u-, x_5, **2, **2, x_8, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/-(x_5))**((x_8)**2)**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.92724609375,-0.07828706502914429,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
963,57,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_9, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_9)**2)**2*(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))),5932.0361328125,-0.08644440025091171,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
964,57,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_9, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_4)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),3670.913818359375,-0.06987569481134415,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
965,57,"[/, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3793.33154296875,-0.07236108928918839,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
966,57,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4188.80908203125,-0.08038618415594101,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
967,57,"[+, u-, +, u-, -, x_5, x_1, x_7, *, **, /, **2, x_4, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9]",(-((-((x_5-x_1))+x_7))+((((x_4)**2/(x_4)**2)**((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))),3442.845947265625,-0.05898301303386688,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
968,57,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_4, cos, *, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*cos(((x_9)**2*(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3987.766357421875,-0.07363364845514297,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
969,57,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_7, u-, x_7, **2, **2, x_8, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_7)**2/-(x_7))**((x_8)**2)**2))+((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))),4021.283447265625,-0.07576810568571091,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
970,57,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, sin, /, 1.83, x_0, u-, x_1]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*(sin((1.83/x_0))**-(x_1)))),3190.23828125,-0.03375289589166641,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
971,57,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_9, **2, **2, x_9, *, *, **2, **2, x_4, /, **2, x_4, *, x_9, x_4, *, **2, **2, x_4, **2, /, x_6, x_5]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_9)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2/(x_9*x_4)))*(((x_4)**2)**2*((x_6/x_5))**2))),6032.3515625,-0.0877806544303894,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
972,57,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, **2, x_4, **2, **2, x_9, *, *, /, **2, x_4, u-, x_9, **2, **2, x_9, *, **2, u-, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_4)**2)*((x_9)**2)**2))/((((x_4)**2/-(x_9))*((x_9)**2)**2)*((-(x_9))**2*((x_9)**2)**2))),6137.89404296875,-0.08908265829086304,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
973,57,"[/, *, *, u-, x_7, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_7)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),5051.755859375,-0.08066581189632416,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
974,57,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, u-, x_7, **2, **2, x_4, *, **2, **2, x_9, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(((-(x_7))**2*((x_4)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),3670.91357421875,-0.06779234111309052,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
975,57,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),6125.48291015625,-0.08831238746643066,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
976,57,"[+, u-, +, u-, -, x_5, x_1, x_7, *, *, **2, **2, x_9, **2, **2, x_7, **, **2, **2, x_9, **2, u-, x_4]",(-((-((x_5-x_1))+x_7))+((((x_9)**2)**2*((x_7)**2)**2)*(((x_9)**2)**2**(-(x_4))**2))),3442.740966796875,-0.05278673768043518,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
977,57,"[/, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_5]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_5)**2)**2))),3683.73876953125,-0.07151569426059723,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
978,58,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
979,58,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
980,58,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
981,58,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
982,58,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
983,58,"[*, **, *, **2, u-, x_9, /, **2, x_4, **2, x_4, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_4)**2/(x_4)**2))**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.05014250427484512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
984,58,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**(sin(x_6))**2))),3212.596923828125,-0.04485241323709488,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
985,58,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3161.8369140625,-0.013529130257666111,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
986,58,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_4, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_4**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3162.0517578125,-0.01594284549355507,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
987,58,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_5, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_5)**2)**(sin(x_6))**2))),3214.129638671875,-0.047577813267707825,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
988,58,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_9, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_9)**2)**2*(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))),5932.0361328125,-0.08644440025091171,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
989,58,"[/, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3793.33154296875,-0.07236108928918839,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
990,58,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4188.80908203125,-0.08038618415594101,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
991,58,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_4, cos, *, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*cos(((x_9)**2*(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3987.766357421875,-0.07363364845514297,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
992,58,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_7, u-, x_7, **2, **2, x_8, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_7)**2/-(x_7))**((x_8)**2)**2))+((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))),4021.283447265625,-0.07576810568571091,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
993,58,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, sin, /, 1.83, x_0, u-, x_1]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*(sin((1.83/x_0))**-(x_1)))),3190.23828125,-0.03375289589166641,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
994,58,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_9, **2, **2, x_9, *, *, **2, **2, x_4, /, **2, x_4, *, x_9, x_4, *, **2, **2, x_4, **2, /, x_6, x_5]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_9)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_4)**2/(x_9*x_4)))*(((x_4)**2)**2*((x_6/x_5))**2))),6032.3515625,-0.0877806544303894,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
995,58,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, **2, x_4, **2, **2, x_9, *, *, /, **2, x_4, u-, x_9, **2, **2, x_9, *, **2, u-, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_4)**2)*((x_9)**2)**2))/((((x_4)**2/-(x_9))*((x_9)**2)**2)*((-(x_9))**2*((x_9)**2)**2))),6137.89404296875,-0.08908265829086304,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
996,58,"[/, *, *, u-, x_7, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_7)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),5051.755859375,-0.08066581189632416,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
997,58,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),6125.48291015625,-0.08831238746643066,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
998,58,"[/, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_5]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_5)**2)**2))),3683.73876953125,-0.07151569426059723,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
999,58,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_9, **2, x_4, **2, u-, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_9)**2/(x_4)**2)**(-(x_4))**2))+-((-((x_5-x_7))+x_2))),3215.277587890625,-0.048923127353191376,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1000,58,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, /, **2, x_4, **2, x_4, *, **2, **2, x_8, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2/(x_4)**2))*(((x_8)**2)**2*((x_9)**2)**2))),4083.81005859375,-0.07919497042894363,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1001,58,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, u-, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/(((-(x_4))**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4390.826171875,-0.08056087791919708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1002,58,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.79248046875,-0.07889033108949661,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1003,58,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, u-, **2, x_4, **2, **2, x_9, *, *, /, **2, x_4, u-, x_9, **2, **2, x_9, *, **2, u-, x_9, **2, **2, x_4]",(((((x_4)**2)**2*((x_9)**2)**2)*(-((x_4)**2)*((x_9)**2)**2))/((((x_4)**2/-(x_9))*((x_9)**2)**2)*((-(x_9))**2*((x_4)**2)**2))),6135.4443359375,-0.08849626034498215,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1004,58,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_5, *, x_0, x_9, exp, cos, **2, x_9]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_5**(x_0*x_9)))*exp(cos((x_9)**2)))),3183.373291015625,-0.019250452518463135,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1005,58,"[+, *, +, u-, -, x_5, x_1, x_7, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_1))+x_7)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3435.423095703125,-0.06717231124639511,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1006,58,"[/, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3659.042724609375,-0.0713111013174057,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1007,59,"[+, *, *, **2, **2, x_8, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_8)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.23388671875,-0.04922562837600708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1008,59,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4033.4013671875,-0.07896056026220322,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1009,59,"[+, *, *, **2, **2, x_4, **2, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",(((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+(x_1+cos((x_7-cos(x_8))))),3294.519287109375,-0.04930587112903595,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1010,59,"[/, *, *, **2, **2, x_4, **2, **2, x_9, *, *, u-, x_7, sqrt, x_9, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_9]",(((((x_4)**2)**2*((x_9)**2)**2)*((-(x_7)*sqrt(abs(x_9)))*((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_9)**2)**2))),5245.3271484375,-0.08521293848752975,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1011,59,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4186.59521484375,-0.07998026907444,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1012,59,"[*, **, *, **2, u-, x_9, /, **2, x_4, **2, x_4, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, +, x_1, cos, -, x_7, cos, x_8]",((((-(x_9))**2*((x_4)**2/(x_4)**2))**(-((x_9*x_9))/((x_4)**2/(x_9)**2)))*(x_1+cos((x_7-cos(x_8))))),3294.60546875,-0.05014250427484512,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1013,59,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_10, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_10)**2)**(sin(x_6))**2))),3212.596923828125,-0.04485241323709488,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1014,59,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_6, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_6**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3161.8369140625,-0.013529130257666111,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1015,59,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_4, *, x_6, x_2, **, sin, sin, x_5, u-, -, x_6, x_5]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_4**(x_6*x_2)))*(sin(sin(x_5))**-((x_6-x_5))))),3162.0517578125,-0.01594284549355507,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1016,59,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, /, u-, x_1, **2, x_5, **2, sin, x_6]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*((-(x_1)/(x_5)**2)**(sin(x_6))**2))),3214.129638671875,-0.047577813267707825,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1017,59,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4188.80908203125,-0.08038618415594101,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1018,59,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_4, cos, *, **2, x_9, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*cos(((x_9)**2*(x_9)**2)))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3987.766357421875,-0.07363364845514297,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1019,59,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_7, u-, x_7, **2, **2, x_8, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_7)**2/-(x_7))**((x_8)**2)**2))+((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))),4021.283447265625,-0.07576810568571091,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1020,59,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, u-, x_1, u-, exp, x_4, **, sin, /, 1.83, x_0, u-, x_1]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-(x_1)*-(exp(x_4)))*(sin((1.83/x_0))**-(x_1)))),3190.23828125,-0.03375289589166641,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1021,59,"[/, *, *, u-, x_7, **, **2, x_5, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_7)*((x_5)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),5051.755859375,-0.08066581189632416,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1022,59,"[/, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_9, **2, **2, x_5]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))/((((x_4)**2)**2*((x_9)**2)**2)*(((x_9)**2)**2*((x_5)**2)**2))),3683.73876953125,-0.07151569426059723,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1023,59,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_9, **2, x_4, **2, u-, x_4, u-, +, u-, -, x_5, x_7, x_2]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_9)**2/(x_4)**2)**(-(x_4))**2))+-((-((x_5-x_7))+x_2))),3215.277587890625,-0.048923127353191376,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1024,59,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, /, **2, x_4, **2, x_4, *, **2, **2, x_8, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2/(x_4)**2))*(((x_8)**2)**2*((x_9)**2)**2))),4083.81005859375,-0.07919497042894363,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1025,59,"[/, *, *, u-, x_1, **, **2, x_9, **2, x_4, **, /, **2, x_4, *, x_9, x_4, **2, u-, x_4, *, *, **2, u-, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_4)**2))*(((x_4)**2/(x_9*x_4))**(-(x_4))**2))/(((-(x_4))**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4390.826171875,-0.08056087791919708,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1026,59,"[+, *, *, u-, x_1, **, **2, x_9, **2, x_9, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-(x_1)*((x_9)**2**(x_9)**2))*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),4031.79248046875,-0.07889033108949661,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1027,59,"[+, u-, +, u-, -, x_5, x_7, x_2, *, *, u-, x_1, **, x_5, *, x_0, x_9, exp, cos, **2, x_9]",(-((-((x_5-x_7))+x_2))+((-(x_1)*(x_5**(x_0*x_9)))*exp(cos((x_9)**2)))),3183.373291015625,-0.019250452518463135,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1028,59,"[+, *, +, u-, -, x_5, x_1, x_7, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, *, **2, **2, x_4, **2, **2, x_9, **, /, u-, x_1, **2, x_10, **2, **2, x_9]",(((-((x_5-x_1))+x_7)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((((x_4)**2)**2*((x_9)**2)**2)*((-(x_1)/(x_10)**2)**((x_9)**2)**2))),3435.423095703125,-0.06717231124639511,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1029,59,"[/, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_9, **2, x_4, **2, u-, x_4, *, *, **2, **2, x_4, **2, **2, x_4, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_9)**2/(x_4)**2)**(-(x_4))**2))/((((x_4)**2)**2*((x_4)**2)**2)*(((x_4)**2)**2*((x_9)**2)**2))),3659.042724609375,-0.0713111013174057,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1030,59,"[+, *, +, u-, -, x_5, x_7, x_2, **, /, **2, x_4, **2, x_4, **2, **2, x_9, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9]",(((-((x_5-x_7))+x_2)*(((x_4)**2/(x_4)**2)**((x_9)**2)**2))+((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))),3686.611083984375,-0.07291297614574432,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1031,59,"[/, *, /, u-, *, x_9, x_9, /, **2, x_4, **2, x_9, *, **2, **2, x_4, **2, **2, x_9, *, *, /, **2, x_4, u-, x_4, **2, **2, x_9, *, **2, u-, x_9, **2, **2, x_9]",(((-((x_9*x_9))/((x_4)**2/(x_9)**2))*(((x_4)**2)**2*((x_9)**2)**2))/((((x_4)**2/-(x_4))*((x_9)**2)**2)*((-(x_9))**2*((x_9)**2)**2))),5861.6005859375,-0.08997458219528198,201,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
