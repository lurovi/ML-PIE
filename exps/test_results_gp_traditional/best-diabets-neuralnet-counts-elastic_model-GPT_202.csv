,generation,parsable_tree,latex_tree,accuracy,interpretability,seed,pop_size,num_gen,num_offsprings,encoder_type,ground_truth_type,sampling,warm-up,data
0,0,"[cos, cos, **, **, x_3, x_7, cos, x_2]",cos(cos(((x_3**x_7)**cos(x_2)))),4126.07958984375,-0.1313142627477646,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1,0,"[/, *, cos, x_5, -, **2, x_3, sin, sin, 0.2, sin, sin, exp, u-, x_7]",((cos(x_5)*((x_3)**2-sin(sin(0.2))))/sin(sin(exp(-(x_7))))),4782.95947265625,-0.1368626356124878,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
2,0,"[**, **2, +, cos, x_5, sin, x_10, sqrt, /, **2, x_5, **, -2.39, sqrt, x_10]",(((cos(x_5)+sin(x_10)))**2**sqrt(abs(((x_5)**2/(-2.39**sqrt(abs(x_10))))))),6069.732421875,-0.1412312239408493,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
3,0,"[sin, cos, log, +, *, x_3, x_9, x_3]",sin(cos(log(abs(((x_3*x_9)+x_3))))),6103.09326171875,-0.1413404643535614,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
4,0,"[sin, *, **, log, sin, x_2, x_9, x_5]",sin(((log(abs(sin(x_2)))**x_9)*x_5)),5324.73291015625,-0.1403118520975113,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
5,0,"[exp, exp, sin, x_1]",exp(exp(sin(x_1))),4025.788330078125,-0.12683577835559845,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
6,0,"[**, x_10, /, sqrt, -, x_6, x_0, **, x_5, *, x_9, sqrt, x_8]",(x_10**(sqrt(abs((x_6-x_0)))/(x_5**(x_9*sqrt(abs(x_8)))))),6123.34130859375,-0.14187374711036682,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
7,0,"[+, log, sin, x_3, +, *, x_0, /, **, x_8, x_6, -, x_9, x_2, 3.56]",(log(abs(sin(x_3)))+((x_0*((x_8**x_6)/(x_9-x_2)))+3.56)),6103.83251953125,-0.1418064385652542,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
8,0,"[-, *, -, *, x_3, *, x_9, -0.13, x_3, sin, **2, x_2, u-, *, u-, sin, x_8, +, **2, x_2, exp, x_0]",((((x_3*(x_9*-0.13))-x_3)*sin((x_2)**2))--((-(sin(x_8))*((x_2)**2+exp(x_0))))),5160.1591796875,-0.13830628991127014,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
9,1,"[cos, cos, **, **, x_3, x_7, cos, x_2]",cos(cos(((x_3**x_7)**cos(x_2)))),4126.07958984375,-0.1313142627477646,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
10,1,"[**, **2, +, cos, x_5, sin, x_10, sqrt, /, **2, x_5, **, -2.39, sqrt, x_10]",(((cos(x_5)+sin(x_10)))**2**sqrt(abs(((x_5)**2/(-2.39**sqrt(abs(x_10))))))),6069.732421875,-0.1412312239408493,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
11,1,"[sin, cos, log, +, *, x_3, x_9, x_3]",sin(cos(log(abs(((x_3*x_9)+x_3))))),6103.09326171875,-0.1413404643535614,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
12,1,"[sin, *, **, log, sin, x_2, x_9, x_5]",sin(((log(abs(sin(x_2)))**x_9)*x_5)),5324.73291015625,-0.1403118520975113,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
13,1,"[exp, exp, sin, x_1]",exp(exp(sin(x_1))),4025.788330078125,-0.12683577835559845,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
14,1,"[+, log, sin, x_3, +, *, x_0, /, **, x_8, x_6, -, x_9, x_2, 3.56]",(log(abs(sin(x_3)))+((x_0*((x_8**x_6)/(x_9-x_2)))+3.56)),6103.83251953125,-0.1418064385652542,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
15,1,"[sin, +, sin, **, -, x_3, x_4, x_7, *, -, **2, x_1, u-, 1.04, **, log, x_4, x_4]",sin((sin(((x_3-x_4)**x_7))+(((x_1)**2--(1.04))*(log(abs(x_4))**x_4)))),4487.88525390625,-0.13577622175216675,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
16,1,"[+, sin, /, **, x_9, x_6, -, log, x_8, x_7, **2, exp, **, x_3, x_7]",(sin(((x_9**x_6)/(log(abs(x_8))-x_7)))+(exp((x_3**x_7)))**2),4527.9814453125,-0.13896238803863525,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
17,1,"[+, log, sin, x_3, +, *, u-, -, x_4, x_9, /, **, x_8, x_6, x_9, 3.56]",(log(abs(sin(x_3)))+((-((x_4-x_9))*((x_8**x_6)/x_9))+3.56)),6122.88916015625,-0.1432678997516632,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
18,1,"[sin, x_5]",sin(x_5),5160.12744140625,-0.13982842862606049,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
19,1,"[log, log, -, **3, x_7, +, 3.92, **, x_0, x_1]",log(abs(log(abs(((x_7)**3-(3.92+(x_0**x_1))))))),4043.510986328125,-0.12921063601970673,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
20,1,[-1.65],-1.65,6137.94873046875,-0.14892610907554626,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
21,2,"[cos, cos, **, **, x_3, x_7, cos, x_2]",cos(cos(((x_3**x_7)**cos(x_2)))),4126.07958984375,-0.1313142627477646,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
22,2,"[sin, *, **, log, sin, x_2, x_9, x_5]",sin(((log(abs(sin(x_2)))**x_9)*x_5)),5324.73291015625,-0.1403118520975113,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
23,2,"[log, log, -, **3, x_7, +, 3.92, **, x_0, x_1]",log(abs(log(abs(((x_7)**3-(3.92+(x_0**x_1))))))),4043.510986328125,-0.12921063601970673,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
24,2,[-1.65],-1.65,6137.94873046875,-0.14892610907554626,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
25,2,"[sin, *, **, log, x_9, x_9, x_5]",sin(((log(abs(x_9))**x_9)*x_5)),5703.84765625,-0.14384806156158447,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
26,2,"[+, sin, /, **, +, x_8, x_10, x_6, -, log, x_8, x_7, **2, exp, **, x_3, x_7]",(sin((((x_8+x_10)**x_6)/(log(abs(x_8))-x_7)))+(exp((x_3**x_7)))**2),4498.4326171875,-0.13990485668182373,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
27,2,"[sin, +, sin, **, -, x_3, x_4, x_7, exp, sin, *, x_3, x_10]",sin((sin(((x_3-x_4)**x_7))+exp(sin((x_3*x_10))))),4145.6640625,-0.13768824934959412,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
28,2,"[*, *, -, *, x_6, log, x_0, **2, x_2, *, x_9, /, log, x_9, x_5, *, **, log, sin, x_2, x_9, x_5]",((((x_6*log(abs(x_0)))-(x_2)**2)*(x_9*(log(abs(x_9))/x_5)))*((log(abs(sin(x_2)))**x_9)*x_5)),6137.9482421875,-0.14585009217262268,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
29,2,"[**3, exp, *, exp, x_5, -, sin, x_0, **, x_5, x_1]",(exp((exp(x_5)*(sin(x_0)-(x_5**x_1)))))**3,3920.04541015625,-0.12831416726112366,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
30,2,"[u-, +, **, +, +, x_3, x_9, x_3, +, u-, x_1, **, x_10, x_5, *, **, +, x_9, x_5, log, x_8, exp, x_8]",-(((((x_3+x_9)+x_3)**(-(x_1)+(x_10**x_5)))+(((x_9+x_5)**log(abs(x_8)))*exp(x_8)))),6125.21435546875,-0.1455741822719574,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
31,3,"[cos, cos, **, **, x_3, x_7, cos, x_2]",cos(cos(((x_3**x_7)**cos(x_2)))),4126.07958984375,-0.1313142627477646,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
32,3,"[sin, *, **, log, sin, x_2, x_9, x_5]",sin(((log(abs(sin(x_2)))**x_9)*x_5)),5324.73291015625,-0.1403118520975113,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
33,3,"[log, log, -, **3, x_7, +, 3.92, **, x_0, x_1]",log(abs(log(abs(((x_7)**3-(3.92+(x_0**x_1))))))),4043.510986328125,-0.12921063601970673,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
34,3,"[sin, *, **, log, x_9, x_9, x_5]",sin(((log(abs(x_9))**x_9)*x_5)),5703.84765625,-0.14384806156158447,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
35,3,"[+, sin, /, **, +, x_8, x_10, x_6, -, log, x_8, x_7, **2, exp, **, x_3, x_7]",(sin((((x_8+x_10)**x_6)/(log(abs(x_8))-x_7)))+(exp((x_3**x_7)))**2),4498.4326171875,-0.13990485668182373,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
36,3,"[**3, exp, *, exp, x_5, -, sin, x_0, **, x_5, x_1]",(exp((exp(x_5)*(sin(x_0)-(x_5**x_1)))))**3,3920.04541015625,-0.12831416726112366,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
37,3,"[+, **, **, x_10, x_0, -, x_2, **, x_9, +, x_8, 2.39, *, *, -4.8, x_0, /, sqrt, x_9, /, -, x_4, x_9, **2, x_0]",(((x_10**x_0)**(x_2-(x_9**(x_8+2.39))))+((-4.8*x_0)*(sqrt(abs(x_9))/((x_4-x_9)/(x_0)**2)))),6088.32470703125,-0.15060469508171082,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
38,3,"[**, exp, x_1, *, exp, **3, x_3, log, +, x_8, sqrt, 1.45]",(exp(x_1)**(exp((x_3)**3)*log(abs((x_8+sqrt(abs(1.45))))))),3973.416259765625,-0.12862497568130493,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
39,3,"[+, sin, /, **, x_9, x_6, **, **, x_3, x_9, cos, x_2, **2, exp, **, x_3, x_7]",(sin(((x_9**x_6)/((x_3**x_9)**cos(x_2))))+(exp((x_3**x_7)))**2),4461.6904296875,-0.1377532184123993,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
40,3,"[sin, *, **, log, sin, -1.53, x_9, x_5]",sin(((log(abs(sin(-1.53)))**x_9)*x_5)),5702.8125,-0.14328578114509583,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
41,3,"[*, sin, *, +, x_9, **2, -1.11, x_2, /, -, log, u-, x_8, /, /, x_6, x_9, x_8, /, -, /, x_5, x_8, u-, x_6, **, x_6, -, x_9, x_4]",(sin(((x_9+(-1.11)**2)*x_2))*((log(abs(-(x_8)))-((x_6/x_9)/x_8))/(((x_5/x_8)--(x_6))/(x_6**(x_9-x_4))))),6046.06689453125,-0.14490708708763123,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
42,3,"[sin, +, sin, **, -, x_3, x_4, x_7, exp, sin, *, x_3, x_5]",sin((sin(((x_3-x_4)**x_7))+exp(sin((x_3*x_5))))),4128.2548828125,-0.13773012161254883,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
43,3,"[+, log, sin, x_3, +, *, u-, /, x_0, x_9, /, **, x_8, x_6, x_9, sin, x_9]",(log(abs(sin(x_3)))+((-((x_0/x_9))*((x_8**x_6)/x_9))+sin(x_9))),5995.95947265625,-0.14416798949241638,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
44,3,"[+, sin, /, **, x_9, x_6, -, log, x_8, x_7, **2, cos, *, **2, x_4, -, x_9, x_8]",(sin(((x_9**x_6)/(log(abs(x_8))-x_7)))+(cos(((x_4)**2*(x_9-x_8))))**2),5856.47216796875,-0.1439276486635208,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
45,3,"[-, exp, x_2, -, exp, log, **, x_7, x_7, **2, cos, u-, x_3]",(exp(x_2)-(exp(log(abs((x_7**x_7))))-(cos(-(x_3)))**2)),3774.25146484375,-0.12333054840564728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
46,4,"[sin, *, **, log, x_9, x_9, x_5]",sin(((log(abs(x_9))**x_9)*x_5)),5703.84765625,-0.14384806156158447,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
47,4,"[**3, exp, *, exp, x_5, -, sin, x_0, **, x_5, x_1]",(exp((exp(x_5)*(sin(x_0)-(x_5**x_1)))))**3,3920.04541015625,-0.12831416726112366,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
48,4,"[**, exp, x_1, *, exp, **3, x_3, log, +, x_8, sqrt, 1.45]",(exp(x_1)**(exp((x_3)**3)*log(abs((x_8+sqrt(abs(1.45))))))),3973.416259765625,-0.12862497568130493,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
49,4,"[-, exp, x_2, -, exp, log, **, x_7, x_7, **2, cos, u-, x_3]",(exp(x_2)-(exp(log(abs((x_7**x_7))))-(cos(-(x_3)))**2)),3774.25146484375,-0.12333054840564728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
50,4,"[+, sin, /, **, *, x_9, -0.13, x_6, -, log, x_8, x_7, **2, exp, **, x_3, x_7]",(sin((((x_9*-0.13)**x_6)/(log(abs(x_8))-x_7)))+(exp((x_3**x_7)))**2),4534.9482421875,-0.14048629999160767,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
51,4,"[+, sin, /, x_1, -, log, x_8, x_7, *, **, log, sin, -1.53, x_9, x_5]",(sin((x_1/(log(abs(x_8))-x_7)))+((log(abs(sin(-1.53)))**x_9)*x_5)),4832.1513671875,-0.14050018787384033,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
52,4,[x_3],x_3,5848.63232421875,-0.14859412610530853,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
53,4,"[sin, *, **, +, cos, x_5, sin, x_10, x_9, x_5]",sin((((cos(x_5)+sin(x_10))**x_9)*x_5)),5157.64697265625,-0.14370518922805786,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
54,4,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
55,4,"[+, **, **, x_10, **, -, 3.44, x_6, x_2, -, x_2, **, x_9, +, x_8, 2.39, *, *, -4.8, x_0, /, sqrt, x_9, /, -, x_4, x_9, **2, x_0]",(((x_10**((3.44-x_6)**x_2))**(x_2-(x_9**(x_8+2.39))))+((-4.8*x_0)*(sqrt(abs(x_9))/((x_4-x_9)/(x_0)**2)))),6024.3681640625,-0.15133582055568695,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
56,4,"[+, sin, cos, **, *, x_8, x_3, x_6, **2, cos, *, **2, x_4, -, x_9, x_8]",(sin(cos(((x_8*x_3)**x_6)))+(cos(((x_4)**2*(x_9-x_8))))**2),5029.07421875,-0.14141207933425903,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
57,5,"[**3, exp, *, exp, x_5, -, sin, x_0, **, x_5, x_1]",(exp((exp(x_5)*(sin(x_0)-(x_5**x_1)))))**3,3920.04541015625,-0.12831416726112366,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
58,5,"[**, exp, x_1, *, exp, **3, x_3, log, +, x_8, sqrt, 1.45]",(exp(x_1)**(exp((x_3)**3)*log(abs((x_8+sqrt(abs(1.45))))))),3973.416259765625,-0.12862497568130493,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
59,5,"[-, exp, x_2, -, exp, log, **, x_7, x_7, **2, cos, u-, x_3]",(exp(x_2)-(exp(log(abs((x_7**x_7))))-(cos(-(x_3)))**2)),3774.25146484375,-0.12333054840564728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
60,5,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
61,5,[x_7],x_7,4205.56591796875,-0.1474708914756775,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
62,5,"[-, exp, x_2, -, exp, u-, sin, x_1, **2, **2, x_3]",(exp(x_2)-(exp(-(sin(x_1)))-((x_3)**2)**2)),3861.208740234375,-0.1250983476638794,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
63,5,[x_5],x_5,5160.9296875,-0.1508098691701889,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
64,5,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
65,5,"[*, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, sin, -, u-, sin, x_8, **2, /, x_10, -4.35]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))*sin((-(sin(x_8))-((x_10/-4.35))**2))),6062.455078125,-0.15251120924949646,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
66,5,"[+, **, **, x_10, -, x_9, x_2, -, x_2, **, x_9, +, x_8, 2.39, *, *, -4.8, x_0, /, sqrt, x_9, /, -, x_4, x_9, **2, x_0]",(((x_10**(x_9-x_2))**(x_2-(x_9**(x_8+2.39))))+((-4.8*x_0)*(sqrt(abs(x_9))/((x_4-x_9)/(x_0)**2)))),5852.068359375,-0.1518857628107071,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
67,5,"[sqrt, **3, exp, +, sin, x_2, x_1]",sqrt(abs((exp((sin(x_2)+x_1)))**3)),3794.7138671875,-0.12501485645771027,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
68,6,"[**3, exp, *, exp, x_5, -, sin, x_0, **, x_5, x_1]",(exp((exp(x_5)*(sin(x_0)-(x_5**x_1)))))**3,3920.04541015625,-0.12831416726112366,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
69,6,"[**, exp, x_1, *, exp, **3, x_3, log, +, x_8, sqrt, 1.45]",(exp(x_1)**(exp((x_3)**3)*log(abs((x_8+sqrt(abs(1.45))))))),3973.416259765625,-0.12862497568130493,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
70,6,"[-, exp, x_2, -, exp, log, **, x_7, x_7, **2, cos, u-, x_3]",(exp(x_2)-(exp(log(abs((x_7**x_7))))-(cos(-(x_3)))**2)),3774.25146484375,-0.12333054840564728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
71,6,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
72,6,[x_7],x_7,4205.56591796875,-0.1474708914756775,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
73,6,"[-, exp, x_2, -, exp, u-, sin, x_1, **2, **2, x_3]",(exp(x_2)-(exp(-(sin(x_1)))-((x_3)**2)**2)),3861.208740234375,-0.1250983476638794,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
74,6,[x_5],x_5,5160.9296875,-0.1508098691701889,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
75,6,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
76,6,"[*, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, sin, -, u-, sin, x_8, **2, /, x_10, -4.35]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))*sin((-(sin(x_8))-((x_10/-4.35))**2))),6062.455078125,-0.15251120924949646,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
77,6,"[+, **, **, x_10, -, x_9, x_2, -, x_2, **, x_9, +, x_8, 2.39, *, *, -4.8, x_0, /, sqrt, x_9, /, -, x_4, x_9, **2, x_0]",(((x_10**(x_9-x_2))**(x_2-(x_9**(x_8+2.39))))+((-4.8*x_0)*(sqrt(abs(x_9))/((x_4-x_9)/(x_0)**2)))),5852.068359375,-0.1518857628107071,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
78,6,"[sqrt, **3, exp, +, sin, x_2, x_1]",sqrt(abs((exp((sin(x_2)+x_1)))**3)),3794.7138671875,-0.12501485645771027,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
79,7,"[**3, exp, *, exp, x_5, -, sin, x_0, **, x_5, x_1]",(exp((exp(x_5)*(sin(x_0)-(x_5**x_1)))))**3,3920.04541015625,-0.12831416726112366,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
80,7,"[**, exp, x_1, *, exp, **3, x_3, log, +, x_8, sqrt, 1.45]",(exp(x_1)**(exp((x_3)**3)*log(abs((x_8+sqrt(abs(1.45))))))),3973.416259765625,-0.12862497568130493,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
81,7,"[-, exp, x_2, -, exp, log, **, x_7, x_7, **2, cos, u-, x_3]",(exp(x_2)-(exp(log(abs((x_7**x_7))))-(cos(-(x_3)))**2)),3774.25146484375,-0.12333054840564728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
82,7,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
83,7,[x_7],x_7,4205.56591796875,-0.1474708914756775,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
84,7,"[-, exp, x_2, -, exp, u-, sin, x_1, **2, **2, x_3]",(exp(x_2)-(exp(-(sin(x_1)))-((x_3)**2)**2)),3861.208740234375,-0.1250983476638794,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
85,7,[x_5],x_5,5160.9296875,-0.1508098691701889,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
86,7,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
87,7,"[sqrt, **3, exp, +, sin, x_2, x_1]",sqrt(abs((exp((sin(x_2)+x_1)))**3)),3794.7138671875,-0.12501485645771027,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
88,7,"[+, **, **, x_10, -, x_9, x_2, -, x_2, **, x_9, +, x_8, 2.39, *, sqrt, -, -, x_6, x_7, x_9, /, sqrt, x_9, /, -, x_4, x_9, **2, x_0]",(((x_10**(x_9-x_2))**(x_2-(x_9**(x_8+2.39))))+(sqrt(abs(((x_6-x_7)-x_9)))*(sqrt(abs(x_9))/((x_4-x_9)/(x_0)**2)))),5852.068359375,-0.15317831933498383,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
89,8,"[**3, exp, *, exp, x_5, -, sin, x_0, **, x_5, x_1]",(exp((exp(x_5)*(sin(x_0)-(x_5**x_1)))))**3,3920.04541015625,-0.12831416726112366,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
90,8,"[**, exp, x_1, *, exp, **3, x_3, log, +, x_8, sqrt, 1.45]",(exp(x_1)**(exp((x_3)**3)*log(abs((x_8+sqrt(abs(1.45))))))),3973.416259765625,-0.12862497568130493,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
91,8,"[-, exp, x_2, -, exp, log, **, x_7, x_7, **2, cos, u-, x_3]",(exp(x_2)-(exp(log(abs((x_7**x_7))))-(cos(-(x_3)))**2)),3774.25146484375,-0.12333054840564728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
92,8,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
93,8,[x_7],x_7,4205.56591796875,-0.1474708914756775,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
94,8,"[-, exp, x_2, -, exp, u-, sin, x_1, **2, **2, x_3]",(exp(x_2)-(exp(-(sin(x_1)))-((x_3)**2)**2)),3861.208740234375,-0.1250983476638794,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
95,8,[x_5],x_5,5160.9296875,-0.1508098691701889,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
96,8,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
97,8,"[sqrt, **3, exp, +, sin, x_2, x_1]",sqrt(abs((exp((sin(x_2)+x_1)))**3)),3794.7138671875,-0.12501485645771027,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
98,8,"[+, **, **, x_10, -, x_9, x_2, -, x_2, **, x_9, +, x_8, 2.39, *, sqrt, -, -, x_6, x_7, x_9, /, sqrt, x_9, /, -, x_4, x_9, **2, x_0]",(((x_10**(x_9-x_2))**(x_2-(x_9**(x_8+2.39))))+(sqrt(abs(((x_6-x_7)-x_9)))*(sqrt(abs(x_9))/((x_4-x_9)/(x_0)**2)))),5852.068359375,-0.15317831933498383,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
99,8,"[-, **3, -, +, u-, x_2, **3, x_1, cos, x_8, **2, **, +, cos, x_3, **3, -3.49, x_1]",((((-(x_2)+(x_1)**3)-cos(x_8)))**3-(((cos(x_3)+(-3.49)**3)**x_1))**2),3746.435791015625,-0.1226392611861229,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
100,8,"[+, sin, -, *, *, x_2, x_1, *, x_9, -0.13, x_8, *, **, **, /, x_7, x_9, +, x_8, x_6, cos, -0.31, x_5]",(sin((((x_2*x_1)*(x_9*-0.13))-x_8))+((((x_7/x_9)**(x_8+x_6))**cos(-0.31))*x_5)),4845.00244140625,-0.14747896790504456,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
101,8,"[+, **, **, x_10, **, -, x_1, x_6, -, x_9, x_9, -, x_2, **, x_9, +, x_8, 2.39, *, *, -4.8, x_0, /, sqrt, x_9, /, -, 0.2, x_9, **2, x_0]",(((x_10**((x_1-x_6)**(x_9-x_9)))**(x_2-(x_9**(x_8+2.39))))+((-4.8*x_0)*(sqrt(abs(x_9))/((0.2-x_9)/(x_0)**2)))),5852.48681640625,-0.15449267625808716,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
102,9,"[**3, exp, *, exp, x_5, -, sin, x_0, **, x_5, x_1]",(exp((exp(x_5)*(sin(x_0)-(x_5**x_1)))))**3,3920.04541015625,-0.12831416726112366,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
103,9,"[-, exp, x_2, -, exp, log, **, x_7, x_7, **2, cos, u-, x_3]",(exp(x_2)-(exp(log(abs((x_7**x_7))))-(cos(-(x_3)))**2)),3774.25146484375,-0.12333054840564728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
104,9,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
105,9,[x_7],x_7,4205.56591796875,-0.1474708914756775,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
106,9,"[-, exp, x_2, -, exp, u-, sin, x_1, **2, **2, x_3]",(exp(x_2)-(exp(-(sin(x_1)))-((x_3)**2)**2)),3861.208740234375,-0.1250983476638794,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
107,9,[x_5],x_5,5160.9296875,-0.1508098691701889,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
108,9,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
109,9,"[sqrt, **3, exp, +, sin, x_2, x_1]",sqrt(abs((exp((sin(x_2)+x_1)))**3)),3794.7138671875,-0.12501485645771027,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
110,9,"[+, **, **, x_10, -, x_9, x_2, -, x_2, **, x_9, +, x_8, 2.39, *, sqrt, -, -, x_6, x_7, x_9, /, sqrt, x_9, /, -, x_4, x_9, **2, x_0]",(((x_10**(x_9-x_2))**(x_2-(x_9**(x_8+2.39))))+(sqrt(abs(((x_6-x_7)-x_9)))*(sqrt(abs(x_9))/((x_4-x_9)/(x_0)**2)))),5852.068359375,-0.15317831933498383,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
111,9,"[-, **3, -, +, u-, x_2, **3, x_1, cos, x_8, **2, **, +, cos, x_3, **3, -3.49, x_1]",((((-(x_2)+(x_1)**3)-cos(x_8)))**3-(((cos(x_3)+(-3.49)**3)**x_1))**2),3746.435791015625,-0.1226392611861229,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
112,9,"[+, sin, -, *, *, x_2, x_1, *, x_9, -0.13, x_8, *, **, **, /, x_7, x_9, +, x_8, x_6, cos, -0.31, x_5]",(sin((((x_2*x_1)*(x_9*-0.13))-x_8))+((((x_7/x_9)**(x_8+x_6))**cos(-0.31))*x_5)),4845.00244140625,-0.14747896790504456,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
113,9,"[+, **, **, x_10, **, -, x_1, x_6, -, x_9, x_9, -, x_2, **, x_9, +, x_8, 2.39, *, *, -4.8, x_0, /, sqrt, x_9, /, -, 0.2, x_9, **2, x_0]",(((x_10**((x_1-x_6)**(x_9-x_9)))**(x_2-(x_9**(x_8+2.39))))+((-4.8*x_0)*(sqrt(abs(x_9))/((0.2-x_9)/(x_0)**2)))),5852.48681640625,-0.15449267625808716,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
114,9,"[*, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, *, sqrt, -, -, x_6, x_7, x_9, /, sqrt, x_9, /, -, x_4, x_9, u-, x_10]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))*(sqrt(abs(((x_6-x_7)-x_9)))*(sqrt(abs(x_9))/((x_4-x_9)/-(x_10))))),6137.94873046875,-0.15817153453826904,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
115,9,"[*, log, exp, **, cos, x_6, x_9, **3, exp, +, sin, x_8, x_1]",(log(abs(exp((cos(x_6)**x_9))))*(exp((sin(x_8)+x_1)))**3),3947.16162109375,-0.13197070360183716,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
116,9,"[*, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7, sin, -, x_8, **2, /, x_2, -4.35]",(((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))*sin((x_8-((x_2/-4.35))**2))),5215.02880859375,-0.15298306941986084,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
117,9,[x_6],x_6,4981.89306640625,-0.14859721064567566,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
118,10,"[**3, exp, *, exp, x_5, -, sin, x_0, **, x_5, x_1]",(exp((exp(x_5)*(sin(x_0)-(x_5**x_1)))))**3,3920.04541015625,-0.12831416726112366,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
119,10,"[-, exp, x_2, -, exp, log, **, x_7, x_7, **2, cos, u-, x_3]",(exp(x_2)-(exp(log(abs((x_7**x_7))))-(cos(-(x_3)))**2)),3774.25146484375,-0.12333054840564728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
120,10,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
121,10,[x_7],x_7,4205.56591796875,-0.1474708914756775,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
122,10,"[-, exp, x_2, -, exp, u-, sin, x_1, **2, **2, x_3]",(exp(x_2)-(exp(-(sin(x_1)))-((x_3)**2)**2)),3861.208740234375,-0.1250983476638794,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
123,10,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
124,10,"[sqrt, **3, exp, +, sin, x_2, x_1]",sqrt(abs((exp((sin(x_2)+x_1)))**3)),3794.7138671875,-0.12501485645771027,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
125,10,"[-, **3, -, +, u-, x_2, **3, x_1, cos, x_8, **2, **, +, cos, x_3, **3, -3.49, x_1]",((((-(x_2)+(x_1)**3)-cos(x_8)))**3-(((cos(x_3)+(-3.49)**3)**x_1))**2),3746.435791015625,-0.1226392611861229,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
126,10,"[+, sin, -, *, *, x_2, x_1, *, x_9, -0.13, x_8, *, **, **, /, x_7, x_9, +, x_8, x_6, cos, -0.31, x_5]",(sin((((x_2*x_1)*(x_9*-0.13))-x_8))+((((x_7/x_9)**(x_8+x_6))**cos(-0.31))*x_5)),4845.00244140625,-0.14747896790504456,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
127,10,"[*, log, exp, **, cos, x_6, x_9, **3, exp, +, sin, x_8, x_1]",(log(abs(exp((cos(x_6)**x_9))))*(exp((sin(x_8)+x_1)))**3),3947.16162109375,-0.13197070360183716,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
128,10,"[*, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7, sin, -, x_8, **2, /, x_2, -4.35]",(((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))*sin((x_8-((x_2/-4.35))**2))),5215.02880859375,-0.15298306941986084,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
129,10,[x_6],x_6,4981.89306640625,-0.14859721064567566,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
130,10,"[+, sin, -, *, *, x_10, x_3, *, x_9, -0.13, x_8, *, sqrt, -, -, x_6, x_7, x_9, /, sqrt, x_9, /, -, x_4, x_9, **2, x_0]",(sin((((x_10*x_3)*(x_9*-0.13))-x_8))+(sqrt(abs(((x_6-x_7)-x_9)))*(sqrt(abs(x_9))/((x_4-x_9)/(x_0)**2)))),5155.63134765625,-0.1528487652540207,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
131,10,"[-, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_3, x_9, x_8, exp, sin, *, x_3, x_10]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_3-x_9)**x_8))+exp(sin((x_3*x_10))))),6062.380859375,-0.15972992777824402,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
132,10,"[-, exp, x_2, -, exp, log, **, x_7, x_7, **2, x_5]",(exp(x_2)-(exp(log(abs((x_7**x_7))))-(x_5)**2)),3790.51318359375,-0.12499167770147324,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
133,10,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_3, +, sin, **, -, x_3, x_9, x_7, exp, sin, *, x_3, x_10]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_3))))-(sin(((x_3-x_9)**x_7))+exp(sin((x_3*x_10))))),5242.392578125,-0.15759816765785217,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
134,11,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
135,11,[x_7],x_7,4205.56591796875,-0.1474708914756775,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
136,11,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
137,11,"[-, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_3, x_9, x_8, exp, sin, *, x_3, x_10]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_3-x_9)**x_8))+exp(sin((x_3*x_10))))),6062.380859375,-0.15972992777824402,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
138,11,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_3, +, sin, **, -, x_3, x_9, x_7, exp, sin, *, x_3, x_10]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_3))))-(sin(((x_3-x_9)**x_7))+exp(sin((x_3*x_10))))),5242.392578125,-0.15759816765785217,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
139,11,"[sin, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_6, x_7]",sin(((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_6)**x_7)))),4397.30810546875,-0.1481785774230957,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
140,11,"[*, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, **, **, x_10, -, x_9, x_2, -, x_2, **, x_9, +, x_8, x_2]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))*((x_10**(x_9-x_2))**(x_2-(x_9**(x_8+x_2))))),6004.35986328125,-0.15867777168750763,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
141,11,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, x_2, +, sin, **, -, x_3, x_9, x_7, +, +, *, x_4, x_8, cos, 0.58, sqrt, **3, x_5]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-x_2)))-(sin(((x_3-x_9)**x_7))+(((x_4*x_8)+cos(0.58))+sqrt(abs((x_5)**3))))),5006.4326171875,-0.15499694645404816,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
142,11,"[sin, *, **, log, sin, x_7, sin, *, x_3, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_3*x_10)))*((x_1+x_7)-(x_3)**3))),3337.343505859375,-0.13774541020393372,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
143,11,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_3, +, sin, **, -, x_3, x_9, x_7, exp, x_5]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_3))))-(sin(((x_3-x_9)**x_7))+exp(x_5))),4521.09814453125,-0.15330547094345093,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
144,11,"[*, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7, sin, -, x_8, **2, /, x_3, -4.35]",(((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))*sin((x_8-((x_3/-4.35))**2))),5213.775390625,-0.15531377494335175,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
145,12,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
146,12,[x_7],x_7,4205.56591796875,-0.1474708914756775,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
147,12,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
148,12,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_3, +, sin, **, -, x_3, x_9, x_7, exp, sin, *, x_3, x_10]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_3))))-(sin(((x_3-x_9)**x_7))+exp(sin((x_3*x_10))))),5242.392578125,-0.15759816765785217,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
149,12,"[sin, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_6, x_7]",sin(((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_6)**x_7)))),4397.30810546875,-0.1481785774230957,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
150,12,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, x_2, +, sin, **, -, x_3, x_9, x_7, +, +, *, x_4, x_8, cos, 0.58, sqrt, **3, x_5]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-x_2)))-(sin(((x_3-x_9)**x_7))+(((x_4*x_8)+cos(0.58))+sqrt(abs((x_5)**3))))),5006.4326171875,-0.15499694645404816,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
151,12,"[sin, *, **, log, sin, x_7, sin, *, x_3, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_3*x_10)))*((x_1+x_7)-(x_3)**3))),3337.343505859375,-0.13774541020393372,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
152,12,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_3, +, sin, **, -, x_3, x_9, x_7, exp, x_5]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_3))))-(sin(((x_3-x_9)**x_7))+exp(x_5))),4521.09814453125,-0.15330547094345093,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
153,12,"[*, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7, sin, -, x_8, **2, /, x_3, -4.35]",(((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))*sin((x_8-((x_3/-4.35))**2))),5213.775390625,-0.15531377494335175,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
154,12,"[-, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_4, x_9, x_8, exp, *, /, x_9, x_9, x_8]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_4-x_9)**x_8))+exp(((x_9/x_9)*x_8)))),6062.33251953125,-0.16274181008338928,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
155,12,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, sin, -, x_8, **2, /, x_5, -4.35]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*sin((x_8-((x_5/-4.35))**2))),5430.310546875,-0.1599261462688446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
156,13,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
157,13,[x_7],x_7,4205.56591796875,-0.1474708914756775,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
158,13,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
159,13,"[sin, *, **, log, sin, x_7, sin, *, x_3, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_3*x_10)))*((x_1+x_7)-(x_3)**3))),3337.343505859375,-0.13774541020393372,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
160,13,"[-, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_4, x_9, x_8, exp, *, /, x_9, x_9, x_8]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_4-x_9)**x_8))+exp(((x_9/x_9)*x_8)))),6062.33251953125,-0.16274181008338928,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
161,13,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, sin, -, x_8, **2, /, x_5, -4.35]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*sin((x_8-((x_5/-4.35))**2))),5430.310546875,-0.1599261462688446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
162,13,"[-, -, **, *, /, x_1, x_9, x_8, **, x_9, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_3, x_9, x_8, exp, sin, *, x_3, x_10]",(((((x_1/x_9)*x_8)**(x_9**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_3-x_9)**x_8))+exp(sin((x_3*x_10))))),6100.77294921875,-0.16336402297019958,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
163,13,"[sin, *, **, log, sin, x_7, sin, *, x_1, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_1*x_10)))*((x_1+x_7)-(x_3)**3))),3280.5556640625,-0.1355219930410385,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
164,13,"[+, sin, -, *, *, x_2, x_1, *, x_9, -0.13, +, cos, -1.08, +, x_8, x_6, *, -, *, x_8, *, x_9, x_9, *, -, x_7, x_5, log, -1.95, cos, **, -, x_3, x_4, x_7]",(sin((((x_2*x_1)*(x_9*-0.13))-(cos(-1.08)+(x_8+x_6))))+(((x_8*(x_9*x_9))-((x_7-x_5)*log(abs(-1.95))))*cos(((x_3-x_4)**x_7)))),4388.2158203125,-0.15426328778266907,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
165,13,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, sin, -, sin, x_7, **2, /, x_5, -4.35]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*sin((sin(x_7)-((x_5/-4.35))**2))),4418.94677734375,-0.1590486764907837,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
166,13,"[sin, *, **, log, sin, x_9, sin, *, x_3, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_9)))**sin((x_3*x_10)))*((x_1+x_7)-(x_3)**3))),3399.66162109375,-0.14004398882389069,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
167,13,"[-, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, x_8]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**x_8)))),6062.62158203125,-0.1633184552192688,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
168,14,"[sin, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7]",sin((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))),3977.267578125,-0.14014887809753418,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
169,14,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
170,14,"[sin, *, **, log, sin, x_7, sin, *, x_3, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_3*x_10)))*((x_1+x_7)-(x_3)**3))),3337.343505859375,-0.13774541020393372,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
171,14,"[-, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_4, x_9, x_8, exp, *, /, x_9, x_9, x_8]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_4-x_9)**x_8))+exp(((x_9/x_9)*x_8)))),6062.33251953125,-0.16274181008338928,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
172,14,"[sin, *, **, log, sin, x_7, sin, *, x_1, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_1*x_10)))*((x_1+x_7)-(x_3)**3))),3280.5556640625,-0.1355219930410385,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
173,14,"[+, sin, -, *, *, x_2, x_1, *, x_9, -0.13, +, cos, -1.08, +, x_8, x_6, *, -, *, x_8, *, x_9, x_9, *, -, x_7, x_5, log, -1.95, cos, **, -, x_3, x_4, x_7]",(sin((((x_2*x_1)*(x_9*-0.13))-(cos(-1.08)+(x_8+x_6))))+(((x_8*(x_9*x_9))-((x_7-x_5)*log(abs(-1.95))))*cos(((x_3-x_4)**x_7)))),4388.2158203125,-0.15426328778266907,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
174,14,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, sin, -, sin, x_7, **2, /, x_5, -4.35]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*sin((sin(x_7)-((x_5/-4.35))**2))),4418.94677734375,-0.1590486764907837,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
175,14,"[sin, *, **, log, sin, x_9, sin, *, x_3, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_9)))**sin((x_3*x_10)))*((x_1+x_7)-(x_3)**3))),3399.66162109375,-0.14004398882389069,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
176,14,"[-, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, x_8]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**x_8)))),6062.62158203125,-0.1633184552192688,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
177,14,"[+, sin, -, *, *, x_10, x_3, *, x_9, -0.13, x_8, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(sin((((x_10*x_3)*(x_9*-0.13))-x_8))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),5897.71533203125,-0.16215473413467407,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
178,14,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, **2, x_1, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_1)**2**x_7)))),4572.23193359375,-0.16098050773143768,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
179,14,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_3, cos, u-, exp, x_1]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_3))))-cos(-(exp(x_1)))),4019.556640625,-0.14090529084205627,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
180,14,"[-, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, x_8]",(((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**x_8)))),6062.62841796875,-0.16731227934360504,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
181,14,"[-, *, sin, *, sin, x_9, sin, x_9, sin, -, x_3, x_4, +, sin, **, -, x_3, x_4, x_7, exp, sin, *, x_5, x_10]",((sin((sin(x_9)*sin(x_9)))*sin((x_3-x_4)))-(sin(((x_3-x_4)**x_7))+exp(sin((x_5*x_10))))),4203.8046875,-0.15090268850326538,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
182,15,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
183,15,"[-, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, +, sin, **, -, x_4, x_9, x_8, exp, *, /, x_9, x_9, x_8]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(sin(((x_4-x_9)**x_8))+exp(((x_9/x_9)*x_8)))),6062.33251953125,-0.16274181008338928,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
184,15,"[sin, *, **, log, sin, x_7, sin, *, x_1, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_1*x_10)))*((x_1+x_7)-(x_3)**3))),3280.5556640625,-0.1355219930410385,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
185,15,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, sin, -, sin, x_7, **2, /, x_5, -4.35]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*sin((sin(x_7)-((x_5/-4.35))**2))),4418.94677734375,-0.1590486764907837,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
186,15,"[sin, *, **, log, sin, x_9, sin, *, x_3, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_9)))**sin((x_3*x_10)))*((x_1+x_7)-(x_3)**3))),3399.66162109375,-0.14004398882389069,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
187,15,"[+, sin, -, *, *, x_10, x_3, *, x_9, -0.13, x_8, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(sin((((x_10*x_3)*(x_9*-0.13))-x_8))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),5897.71533203125,-0.16215473413467407,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
188,15,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, **2, x_1, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_1)**2**x_7)))),4572.23193359375,-0.16098050773143768,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
189,15,"[-, *, sin, *, sin, x_9, sin, x_9, sin, -, x_3, x_4, +, sin, **, -, x_3, x_4, x_7, exp, sin, *, x_5, x_10]",((sin((sin(x_9)*sin(x_9)))*sin((x_3-x_4)))-(sin(((x_3-x_4)**x_7))+exp(sin((x_5*x_10))))),4203.8046875,-0.15090268850326538,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
190,15,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_3, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_2]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_3))))-((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_2))))),6062.2841796875,-0.16257865726947784,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
191,15,"[-, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**sin(x_9))))),6062.5185546875,-0.1686156690120697,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
192,15,"[+, sin, -, **, log, x_7, x_5, x_8, +, sin, **, -, x_3, x_4, x_7, exp, sin, *, x_3, x_5]",(sin(((log(abs(x_7))**x_5)-x_8))+(sin(((x_3-x_4)**x_7))+exp(sin((x_3*x_5))))),3902.247314453125,-0.14207583665847778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
193,15,"[sin, *, sin, **, -, x_3, x_9, x_7, -, +, x_1, x_7, **3, x_3]",sin((sin(((x_3-x_9)**x_7))*((x_1+x_7)-(x_3)**3))),3333.558837890625,-0.13774913549423218,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
194,15,"[-, *, sin, *, sin, x_9, sin, x_9, sin, -, x_3, x_4, +, sin, **, -, x_3, x_4, x_7, sin, *, sin, x_3, sin, x_9]",((sin((sin(x_9)*sin(x_9)))*sin((x_3-x_4)))-(sin(((x_3-x_4)**x_7))+sin((sin(x_3)*sin(x_9))))),4324.6943359375,-0.15742136538028717,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
195,15,"[-, -, **, *, /, x_1, x_9, x_8, **, x_7, x_8, sin, *, sin, x_7, sin, x_9, +, sin, **, -, x_3, x_9, x_8, /, *, +, -0.82, x_9, x_8, /, sin, x_2, -, x_7, x_2]",(((((x_1/x_9)*x_8)**(x_7**x_8))-sin((sin(x_7)*sin(x_9))))-(sin(((x_3-x_9)**x_8))+(((-0.82+x_9)*x_8)/(sin(x_2)/(x_7-x_2))))),6062.162109375,-0.1623815894126892,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
196,16,[x_1],x_1,4031.79248046875,-0.14607994258403778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
197,16,"[sin, *, **, log, sin, x_7, sin, *, x_1, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_1*x_10)))*((x_1+x_7)-(x_3)**3))),3280.5556640625,-0.1355219930410385,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
198,16,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, sin, -, sin, x_7, **2, /, x_5, -4.35]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*sin((sin(x_7)-((x_5/-4.35))**2))),4418.94677734375,-0.1590486764907837,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
199,16,"[sin, *, **, log, sin, x_9, sin, *, x_3, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_9)))**sin((x_3*x_10)))*((x_1+x_7)-(x_3)**3))),3399.66162109375,-0.14004398882389069,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
200,16,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, **2, x_1, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_1)**2**x_7)))),4572.23193359375,-0.16098050773143768,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
201,16,"[-, *, sin, *, sin, x_9, sin, x_9, sin, -, x_3, x_4, +, sin, **, -, x_3, x_4, x_7, exp, sin, *, x_5, x_10]",((sin((sin(x_9)*sin(x_9)))*sin((x_3-x_4)))-(sin(((x_3-x_4)**x_7))+exp(sin((x_5*x_10))))),4203.8046875,-0.15090268850326538,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
202,16,"[+, sin, -, **, log, x_7, x_5, x_8, +, sin, **, -, x_3, x_4, x_7, exp, sin, *, x_3, x_5]",(sin(((log(abs(x_7))**x_5)-x_8))+(sin(((x_3-x_4)**x_7))+exp(sin((x_3*x_5))))),3902.247314453125,-0.14207583665847778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
203,16,"[sin, *, sin, **, -, x_3, x_9, x_7, -, +, x_1, x_7, **3, x_3]",sin((sin(((x_3-x_9)**x_7))*((x_1+x_7)-(x_3)**3))),3333.558837890625,-0.13774913549423218,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
204,16,"[-, *, sin, *, sin, x_9, sin, x_9, sin, -, x_3, x_4, +, sin, **, -, x_3, x_4, x_7, sin, *, sin, x_3, sin, x_9]",((sin((sin(x_9)*sin(x_9)))*sin((x_3-x_4)))-(sin(((x_3-x_4)**x_7))+sin((sin(x_3)*sin(x_9))))),4324.6943359375,-0.15742136538028717,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
205,16,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6028.66162109375,-0.17530110478401184,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
206,16,"[-, *, sin, *, **2, x_1, sin, x_9, sin, -, x_8, *, x_8, x_3, +, sin, **, -, x_3, x_4, x_7, exp, sin, *, x_3, x_5]",((sin(((x_1)**2*sin(x_9)))*sin((x_8-(x_8*x_3))))-(sin(((x_3-x_4)**x_7))+exp(sin((x_3*x_5))))),4176.650390625,-0.14808492362499237,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
207,16,"[-, *, sin, **2, /, x_9, -4.35, sin, -, x_3, x_4, +, sin, **, -, x_3, x_4, x_7, sin, *, sin, x_3, sin, x_9]",((sin(((x_9/-4.35))**2)*sin((x_3-x_4)))-(sin(((x_3-x_4)**x_7))+sin((sin(x_3)*sin(x_9))))),4234.34228515625,-0.15100796520709991,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
208,16,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4801.62939453125,-0.16525569558143616,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
209,16,"[sin, *, **, log, sin, x_9, u-, sin, x_4, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_9)))**-(sin(x_4)))*((x_1+x_7)-(x_3)**3))),3301.4453125,-0.13615383207798004,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
210,16,"[-, sin, -, +, x_1, x_7, **3, *, x_4, x_10, +, sin, **, -, x_3, x_9, x_8, exp, sin, *, x_3, x_10]",(sin(((x_1+x_7)-((x_4*x_10))**3))-(sin(((x_3-x_9)**x_8))+exp(sin((x_3*x_10))))),3660.705810546875,-0.14172133803367615,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
211,17,"[sin, *, **, log, sin, x_7, sin, *, x_1, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_1*x_10)))*((x_1+x_7)-(x_3)**3))),3280.5556640625,-0.1355219930410385,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
212,17,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, sin, -, sin, x_7, **2, /, x_5, -4.35]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*sin((sin(x_7)-((x_5/-4.35))**2))),4418.94677734375,-0.1590486764907837,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
213,17,"[-, *, sin, *, sin, x_9, sin, x_9, sin, -, x_3, x_4, +, sin, **, -, x_3, x_4, x_7, sin, *, sin, x_3, sin, x_9]",((sin((sin(x_9)*sin(x_9)))*sin((x_3-x_4)))-(sin(((x_3-x_4)**x_7))+sin((sin(x_3)*sin(x_9))))),4324.6943359375,-0.15742136538028717,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
214,17,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6028.66162109375,-0.17530110478401184,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
215,17,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4801.62939453125,-0.16525569558143616,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
216,17,"[sin, *, **, log, sin, x_9, u-, sin, x_4, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_9)))**-(sin(x_4)))*((x_1+x_7)-(x_3)**3))),3301.4453125,-0.13615383207798004,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
217,17,"[sin, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, **3, x_3]",sin((((x_9**sin(x_8))**x_9)*((x_1+x_7)-(x_3)**3))),3313.002197265625,-0.1418149322271347,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
218,17,"[+, sin, -, *, *, x_10, x_3, *, x_9, -0.13, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",(sin((((x_10*x_3)*(x_9*-0.13))-x_8))+(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),3948.238037109375,-0.15444087982177734,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
219,17,"[+, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_5, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_5)))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),5623.3310546875,-0.17462196946144104,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
220,17,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_3, *, cos, *, exp, x_4, sin, x_3, -, +, x_1, x_7, **3, *, x_4, x_10]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_3))))-(cos((exp(x_4)*sin(x_3)))*((x_1+x_7)-((x_4*x_10))**3))),3319.430419921875,-0.1472122073173523,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
221,17,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_3, +, sin, **, -, -3.4, x_9, x_7, exp, cos, sin, x_3]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_3))))-(sin(((-3.4-x_9)**x_7))+exp(cos(sin(x_3))))),4226.8857421875,-0.15507446229457855,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
222,17,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, +, sin, **, -, x_3, x_9, x_7, exp, x_5]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-(sin(((x_3-x_9)**x_7))+exp(x_5))),4521.9052734375,-0.16263288259506226,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
223,18,"[sin, *, **, log, sin, x_7, sin, *, x_1, x_10, -, +, x_1, x_7, **3, x_3]",sin(((log(abs(sin(x_7)))**sin((x_1*x_10)))*((x_1+x_7)-(x_3)**3))),3280.5556640625,-0.1355219930410385,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
224,18,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6028.66162109375,-0.17530110478401184,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
225,18,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4801.62939453125,-0.16525569558143616,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
226,18,"[+, sin, -, *, *, x_10, x_3, *, x_9, -0.13, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",(sin((((x_10*x_3)*(x_9*-0.13))-x_8))+(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),3948.238037109375,-0.15444087982177734,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
227,18,"[+, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_5, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_5)))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),5623.3310546875,-0.17462196946144104,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
228,18,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, +, sin, **, -, x_3, x_9, x_7, exp, x_5]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-(sin(((x_3-x_9)**x_7))+exp(x_5))),4521.9052734375,-0.16263288259506226,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
229,18,"[-, *, sin, *, sin, x_3, sin, x_0, sin, -, x_8, *, x_8, x_3, *, cos, *, **, x_7, x_8, sin, x_3, -, +, x_1, x_7, **3, *, x_4, x_10]",((sin((sin(x_3)*sin(x_0)))*sin((x_8-(x_8*x_3))))-(cos(((x_7**x_8)*sin(x_3)))*((x_1+x_7)-((x_4*x_10))**3))),3309.6806640625,-0.14809758961200714,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
230,18,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6137.94873046875,-0.18504367768764496,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
231,18,"[sin, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3]",sin((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))),3293.5654296875,-0.13973531126976013,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
232,18,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, x_7, x_8, sin, *, sin, x_3, sin, x_8, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**sin(x_9))))),5130.123046875,-0.17106842994689941,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
233,18,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, sin, -, sin, x_7, **2, /, x_5, -4.35]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-sin((sin(x_7)-((x_5/-4.35))**2))),4202.36328125,-0.1607690453529358,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
234,18,"[sin, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",sin(((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3292.60546875,-0.139206200838089,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
235,18,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_4, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_4-x_9)))-sin((sin(x_3)**x_7)))),4780.72705078125,-0.1652350127696991,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
236,19,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6028.66162109375,-0.17530110478401184,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
237,19,"[+, sin, -, *, *, x_10, x_3, *, x_9, -0.13, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",(sin((((x_10*x_3)*(x_9*-0.13))-x_8))+(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),3948.238037109375,-0.15444087982177734,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
238,19,"[+, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_5, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_5)))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),5623.3310546875,-0.17462196946144104,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
239,19,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, +, sin, **, -, x_3, x_9, x_7, exp, x_5]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-(sin(((x_3-x_9)**x_7))+exp(x_5))),4521.9052734375,-0.16263288259506226,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
240,19,"[-, *, sin, *, sin, x_3, sin, x_0, sin, -, x_8, *, x_8, x_3, *, cos, *, **, x_7, x_8, sin, x_3, -, +, x_1, x_7, **3, *, x_4, x_10]",((sin((sin(x_3)*sin(x_0)))*sin((x_8-(x_8*x_3))))-(cos(((x_7**x_8)*sin(x_3)))*((x_1+x_7)-((x_4*x_10))**3))),3309.6806640625,-0.14809758961200714,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
241,19,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6137.94873046875,-0.18504367768764496,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
242,19,"[sin, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3]",sin((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))),3293.5654296875,-0.13973531126976013,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
243,19,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, x_7, x_8, sin, *, sin, x_3, sin, x_8, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**sin(x_9))))),5130.123046875,-0.17106842994689941,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
244,19,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, sin, -, sin, x_7, **2, /, x_5, -4.35]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-sin((sin(x_7)-((x_5/-4.35))**2))),4202.36328125,-0.1607690453529358,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
245,19,"[sin, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",sin(((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3292.60546875,-0.139206200838089,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
246,19,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_4, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_4-x_9)))-sin((sin(x_3)**x_7)))),4780.72705078125,-0.1652350127696991,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
247,19,"[*, -, **, *, x_0, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, sin, **, -2.84, *, x_5, x_9, sin, *, sin, x_3, sin, x_8]",((((x_0*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*(sin((-2.84**(x_5*x_9)))-sin((sin(x_3)*sin(x_8))))),4780.9404296875,-0.16679492592811584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
248,19,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
249,20,"[+, sin, -, *, *, x_10, x_3, *, x_9, -0.13, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",(sin((((x_10*x_3)*(x_9*-0.13))-x_8))+(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),3948.238037109375,-0.15444087982177734,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
250,20,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6137.94873046875,-0.18504367768764496,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
251,20,"[sin, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3]",sin((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))),3293.5654296875,-0.13973531126976013,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
252,20,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, x_7, x_8, sin, *, sin, x_3, sin, x_8, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**sin(x_9))))),5130.123046875,-0.17106842994689941,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
253,20,"[sin, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",sin(((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3292.60546875,-0.139206200838089,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
254,20,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
255,20,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, cos, sqrt, x_4]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(cos(sqrt(abs(x_4)))))),5212.419921875,-0.17371293902397156,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
256,20,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-(x_3)**3))),3308.9013671875,-0.15336167812347412,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
257,20,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, +, x_0, +, -4.37, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-((x_0+(-4.37+x_9))**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6110.69189453125,-0.18172480165958405,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
258,20,"[+, sin, -, *, *, x_10, x_3, *, x_9, -0.13, *, **2, x_5, **, x_6, x_9, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",(sin((((x_10*x_3)*(x_9*-0.13))-((x_5)**2*(x_6**x_9))))+(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),3996.605712890625,-0.15673251450061798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
259,20,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.61083984375,-0.16990771889686584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
260,20,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, x_2, +, sin, **, -, x_4, x_9, x_8, +, +, *, x_4, x_8, cos, 0.58, sin, **, x_3, x_7]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-x_2)))-(sin(((x_4-x_9)**x_8))+(((x_4*x_8)+cos(0.58))+sin((x_3**x_7))))),4148.9765625,-0.1592249721288681,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
261,20,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, sin, x_9, x_8, sin, *, sin, x_3, sin, x_8, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**(sin(x_9)**x_8))-sin((sin(x_3)*sin(x_8))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**sin(x_9))))),5337.7939453125,-0.17546707391738892,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
262,21,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6137.94873046875,-0.18504367768764496,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
263,21,"[sin, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3]",sin((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))),3293.5654296875,-0.13973531126976013,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
264,21,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, x_7, x_8, sin, *, sin, x_3, sin, x_8, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**sin(x_9))))),5130.123046875,-0.17106842994689941,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
265,21,"[sin, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",sin(((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3292.60546875,-0.139206200838089,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
266,21,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
267,21,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, cos, sqrt, x_4]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(cos(sqrt(abs(x_4)))))),5212.419921875,-0.17371293902397156,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
268,21,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-(x_3)**3))),3308.9013671875,-0.15336167812347412,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
269,21,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.61083984375,-0.16990771889686584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
270,21,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, sin, x_9, x_8, sin, *, sin, x_3, sin, x_8, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**(sin(x_9)**x_8))-sin((sin(x_3)*sin(x_8))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**sin(x_9))))),5337.7939453125,-0.17546707391738892,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
271,21,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, -0.13, x_3, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(-0.13*x_3))))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),3991.552001953125,-0.15863534808158875,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
272,21,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_3, **, +, x_0, +, -4.37, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_3)))-((x_0+(-4.37+x_9))**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6110.69189453125,-0.18260103464126587,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
273,21,"[+, *, **, *, /, x_9, x_8, x_8, **, -, x_4, x_9, x_8, sin, -, sin, x_4, *, x_8, x_9, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",(((((x_9/x_8)*x_8)**((x_4-x_9)**x_8))*sin((sin(x_4)-(x_8*x_9))))+(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),4170.7861328125,-0.16589656472206116,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
274,21,"[-, *, sin, *, sin, x_3, sin, x_6, sin, **, -, x_2, x_6, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_8, -, x_4, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin(((x_2-x_6)**x_7)))-((((x_9/x_9)*x_8)**((x_10*x_8)**(x_4-x_9)))-sin((sin(x_3)**x_7)))),4148.20849609375,-0.15974296629428864,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
275,21,"[-, -, **, *, /, x_1, x_8, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",(((((x_1/x_8)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),3735.06591796875,-0.15746310353279114,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
276,21,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5862.03271484375,-0.18247264623641968,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
277,21,"[+, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_7, x_9, sin, **, -2.84, *, x_5, x_9]",((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))+((((x_9/x_9)*x_8)**((x_10*x_9)**(x_7-x_9)))-sin((-2.84**(x_5*x_9))))),4168.86279296875,-0.161240816116333,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
278,22,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6137.94873046875,-0.18504367768764496,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
279,22,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
280,22,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, cos, sqrt, x_4]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(cos(sqrt(abs(x_4)))))),5212.419921875,-0.17371293902397156,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
281,22,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-(x_3)**3))),3308.9013671875,-0.15336167812347412,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
282,22,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.61083984375,-0.16990771889686584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
283,22,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, sin, x_9, x_8, sin, *, sin, x_3, sin, x_8, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**(sin(x_9)**x_8))-sin((sin(x_3)*sin(x_8))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**sin(x_9))))),5337.7939453125,-0.17546707391738892,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
284,22,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, x_8, *, -0.13, x_3, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",((sin((sin(x_3)*sin(x_9)))*sin((x_8-(-0.13*x_3))))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),3991.552001953125,-0.15863534808158875,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
285,22,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_3, **, +, x_0, +, -4.37, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_3)))-((x_0+(-4.37+x_9))**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6110.69189453125,-0.18260103464126587,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
286,22,"[-, -, **, *, /, x_1, x_8, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_9, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_3, x_9, -, x_8, x_9]",(((((x_1/x_8)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_3-x_9)**(x_8-x_9))))),3735.06591796875,-0.15746310353279114,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
287,22,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5862.03271484375,-0.18247264623641968,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
288,22,"[-, *, sin, *, sin, x_3, sin, x_6, sin, **, -, x_2, x_6, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_8, x_8, -, x_4, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin(((x_2-x_6)**x_7)))-((((x_9/x_9)*x_8)**((x_8*x_8)**(x_4-x_9)))-sin((sin(x_3)**x_7)))),4149.29296875,-0.16032367944717407,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
289,22,"[-, *, sin, *, sin, x_3, sin, x_9, sin, *, sin, x_3, sin, x_9, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_9)))*sin((sin(x_3)*sin(x_9))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4800.64404296875,-0.17349481582641602,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
290,22,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),5891.36328125,-0.18258389830589294,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
291,22,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5355.4248046875,-0.18232423067092896,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
292,22,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3285.0654296875,-0.1411561518907547,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
293,22,"[+, **, **2, /, 3.87, **, x_8, x_0, +, x_3, log, **, x_7, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_7, x_9, sin, **, -2.84, *, x_5, x_8]",((((3.87/(x_8**x_0)))**2**(x_3+log(abs((x_7**x_7)))))+((((x_9/x_9)*x_8)**((x_10*x_9)**(x_7-x_9)))-sin((-2.84**(x_5*x_8))))),4124.35302734375,-0.16028958559036255,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
294,22,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, x_7, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((x_7**x_7)))),4161.9951171875,-0.1679602563381195,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
295,22,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, x_8, *, x_8, x_3, *, **, **, x_9, x_5, -, x_3, x_9, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((x_8-(x_8*x_3))))-(((x_9**x_5)**(x_3-x_9))*((x_1+x_7)-(x_3)**3))),3330.82568359375,-0.15421892702579498,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
296,22,"[-, *, sin, *, sin, x_3, sin, x_9, sin, -, **, x_10, x_9, x_2, +, sin, **, -, x_4, x_9, x_8, +, +, *, x_4, x_8, cos, 0.58, sin, **, x_3, x_7]",((sin((sin(x_3)*sin(x_9)))*sin(((x_10**x_9)-x_2)))-(sin(((x_4-x_9)**x_8))+(((x_4*x_8)+cos(0.58))+sin((x_3**x_7))))),4152.57177734375,-0.16146454215049744,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
297,23,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
298,23,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, cos, sqrt, x_4]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(cos(sqrt(abs(x_4)))))),5212.419921875,-0.17371293902397156,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
299,23,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-(x_3)**3))),3308.9013671875,-0.15336167812347412,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
300,23,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.61083984375,-0.16990771889686584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
301,23,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, sin, x_9, x_8, sin, *, sin, x_3, sin, x_8, +, sin, **, -, x_3, x_9, x_8, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**(sin(x_9)**x_8))-sin((sin(x_3)*sin(x_8))))-(sin(((x_3-x_9)**x_8))+sin(((x_4-x_9)**sin(x_9))))),5337.7939453125,-0.17546707391738892,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
302,23,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5862.03271484375,-0.18247264623641968,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
303,23,"[-, *, sin, *, sin, x_3, sin, x_9, sin, *, sin, x_3, sin, x_9, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_9)))*sin((sin(x_3)*sin(x_9))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4800.64404296875,-0.17349481582641602,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
304,23,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),5891.36328125,-0.18258389830589294,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
305,23,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5355.4248046875,-0.18232423067092896,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
306,23,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3285.0654296875,-0.1411561518907547,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
307,23,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, x_7, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((x_7**x_7)))),4161.9951171875,-0.1679602563381195,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
308,23,"[-, -, **, *, /, x_9, x_5, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, **, x_7, x_8, sin, *, sin, x_3, sin, x_9]",(((((x_9/x_5)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))),6115.14453125,-0.18651649355888367,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
309,23,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6028.8896484375,-0.18360716104507446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
310,23,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-(x_3)**3))),3313.34130859375,-0.1672220081090927,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
311,23,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, +, sin, x_7, x_1, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*(sin(x_7)+x_1))-(cos(x_8))**2),3274.121337890625,-0.14015346765518188,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
312,23,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, sin, **, sin, x_8, x_7, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*(sin((sin(x_8)**x_7))-sin((sin(x_3)*sin(x_8))))),4523.24462890625,-0.17044632136821747,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
313,24,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
314,24,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-(x_3)**3))),3308.9013671875,-0.15336167812347412,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
315,24,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.61083984375,-0.16990771889686584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
316,24,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5862.03271484375,-0.18247264623641968,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
317,24,"[-, *, sin, *, sin, x_3, sin, x_9, sin, *, sin, x_3, sin, x_9, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_9)))*sin((sin(x_3)*sin(x_9))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4800.64404296875,-0.17349481582641602,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
318,24,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),5891.36328125,-0.18258389830589294,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
319,24,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5355.4248046875,-0.18232423067092896,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
320,24,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3285.0654296875,-0.1411561518907547,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
321,24,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, x_7, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((x_7**x_7)))),4161.9951171875,-0.1679602563381195,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
322,24,"[-, -, **, *, /, x_9, x_5, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, **, x_7, x_8, sin, *, sin, x_3, sin, x_9]",(((((x_9/x_5)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**(x_7**x_8))-sin((sin(x_3)*sin(x_9))))),6115.14453125,-0.18651649355888367,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
323,24,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6028.8896484375,-0.18360716104507446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
324,24,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-(x_3)**3))),3313.34130859375,-0.1672220081090927,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
325,24,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, +, sin, x_7, x_1, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*(sin(x_7)+x_1))-(cos(x_8))**2),3274.121337890625,-0.14015346765518188,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
326,24,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, sin, **, sin, x_8, x_7, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*(sin((sin(x_8)**x_7))-sin((sin(x_3)*sin(x_8))))),4523.24462890625,-0.17044632136821747,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
327,24,"[+, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),4926.443359375,-0.17936226725578308,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
328,24,"[-, *, sin, *, sin, x_5, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, sin, x_0]",((sin((sin(x_5)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(sin(x_0))**3))),3291.394287109375,-0.1422593891620636,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
329,24,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((x_3-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3286.75439453125,-0.1419024020433426,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
330,25,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
331,25,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.61083984375,-0.16990771889686584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
332,25,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5862.03271484375,-0.18247264623641968,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
333,25,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),5891.36328125,-0.18258389830589294,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
334,25,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5355.4248046875,-0.18232423067092896,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
335,25,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3285.0654296875,-0.1411561518907547,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
336,25,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6028.8896484375,-0.18360716104507446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
337,25,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, +, sin, x_7, x_1, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*(sin(x_7)+x_1))-(cos(x_8))**2),3274.121337890625,-0.14015346765518188,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
338,25,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, sin, **, sin, x_8, x_7, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*(sin((sin(x_8)**x_7))-sin((sin(x_3)*sin(x_8))))),4523.24462890625,-0.17044632136821747,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
339,25,"[+, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),4926.443359375,-0.17936226725578308,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
340,25,"[-, *, sin, *, sin, x_5, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, sin, x_0]",((sin((sin(x_5)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(sin(x_0))**3))),3291.394287109375,-0.1422593891620636,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
341,25,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((x_3-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3286.75439453125,-0.1419024020433426,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
342,25,"[*, -, **, **, *, x_10, x_9, sin, x_9, **, *, x_10, x_9, sin, x_3, **, +, x_0, +, -4.37, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_10*x_9)**sin(x_9))**((x_10*x_9)**sin(x_3)))-((x_0+(-4.37+x_9))**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6110.6923828125,-0.18452733755111694,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
343,25,"[-, *, sin, *, /, x_9, x_9, x_8, sin, -, sqrt, x_3, /, x_10, x_5, -, **, *, /, x_8, x_9, sin, x_9, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin(((x_9/x_9)*x_8))*sin((sqrt(abs(x_3))-(x_10/x_5))))-((((x_8/x_9)*sin(x_9))**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4763.70263671875,-0.17352955043315887,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
344,25,"[-, -, **, *, /, x_9, x_5, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, -, x_3, x_9, sin, *, sin, x_3, sin, x_9]",(((((x_9/x_5)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**(x_3-x_9))-sin((sin(x_3)*sin(x_9))))),6115.14453125,-0.18699075281620026,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
345,25,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_7))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.5859375,-0.16985753178596497,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
346,25,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
347,25,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, -, **, **, -, x_3, x_4, x_7, **, sin, x_5, x_8, sin, **, -, x_3, x_9, -, x_8, x_9]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_3-x_4)**x_7)**(sin(x_5)**x_8))-sin(((x_3-x_9)**(x_8-x_9))))),4872.58447265625,-0.17517518997192383,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
348,25,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
349,26,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
350,26,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.61083984375,-0.16990771889686584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
351,26,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5862.03271484375,-0.18247264623641968,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
352,26,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),5891.36328125,-0.18258389830589294,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
353,26,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5355.4248046875,-0.18232423067092896,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
354,26,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3285.0654296875,-0.1411561518907547,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
355,26,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6028.8896484375,-0.18360716104507446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
356,26,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, +, sin, x_7, x_1, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*(sin(x_7)+x_1))-(cos(x_8))**2),3274.121337890625,-0.14015346765518188,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
357,26,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, sin, **, sin, x_8, x_7, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*(sin((sin(x_8)**x_7))-sin((sin(x_3)*sin(x_8))))),4523.24462890625,-0.17044632136821747,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
358,26,"[+, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),4926.443359375,-0.17936226725578308,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
359,26,"[-, *, sin, *, sin, x_5, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, sin, x_0]",((sin((sin(x_5)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(sin(x_0))**3))),3291.394287109375,-0.1422593891620636,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
360,26,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((x_3-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3286.75439453125,-0.1419024020433426,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
361,26,"[*, -, **, **, *, x_10, x_9, sin, x_9, **, *, x_10, x_9, sin, x_3, **, +, x_0, +, -4.37, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_10*x_9)**sin(x_9))**((x_10*x_9)**sin(x_3)))-((x_0+(-4.37+x_9))**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),6110.6923828125,-0.18452733755111694,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
362,26,"[-, *, sin, *, /, x_9, x_9, x_8, sin, -, sqrt, x_3, /, x_10, x_5, -, **, *, /, x_8, x_9, sin, x_9, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin(((x_9/x_9)*x_8))*sin((sqrt(abs(x_3))-(x_10/x_5))))-((((x_8/x_9)*sin(x_9))**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4763.70263671875,-0.17352955043315887,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
363,26,"[-, -, **, *, /, x_9, x_5, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, -, x_3, x_9, sin, *, sin, x_3, sin, x_9]",(((((x_9/x_5)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**(x_3-x_9))-sin((sin(x_3)*sin(x_9))))),6115.14453125,-0.18699075281620026,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
364,26,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_7))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.5859375,-0.16985753178596497,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
365,26,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
366,26,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
367,26,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.16156631708145142,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
368,26,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, sin, *, sin, x_3, sin, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-sin((sin(x_3)*sin(x_8))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4806.2587890625,-0.17718994617462158,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
369,27,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
370,27,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.61083984375,-0.16990771889686584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
371,27,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5862.03271484375,-0.18247264623641968,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
372,27,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),5891.36328125,-0.18258389830589294,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
373,27,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5355.4248046875,-0.18232423067092896,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
374,27,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3285.0654296875,-0.1411561518907547,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
375,27,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, +, sin, x_7, x_1, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*(sin(x_7)+x_1))-(cos(x_8))**2),3274.121337890625,-0.14015346765518188,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
376,27,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, sin, **, sin, x_8, x_7, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*(sin((sin(x_8)**x_7))-sin((sin(x_3)*sin(x_8))))),4523.24462890625,-0.17044632136821747,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
377,27,"[+, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),4926.443359375,-0.17936226725578308,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
378,27,"[-, *, sin, *, sin, x_5, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, sin, x_0]",((sin((sin(x_5)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(sin(x_0))**3))),3291.394287109375,-0.1422593891620636,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
379,27,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((x_3-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3286.75439453125,-0.1419024020433426,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
380,27,"[-, *, sin, *, /, x_9, x_9, x_8, sin, -, sqrt, x_3, /, x_10, x_5, -, **, *, /, x_8, x_9, sin, x_9, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin(((x_9/x_9)*x_8))*sin((sqrt(abs(x_3))-(x_10/x_5))))-((((x_8/x_9)*sin(x_9))**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4763.70263671875,-0.17352955043315887,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
381,27,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_9, x_9, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_7))))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_9-x_9)))-sin((sin(x_3)**x_7)))),4180.5859375,-0.16985753178596497,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
382,27,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
383,27,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
384,27,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.16156631708145142,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
385,27,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, sin, *, sin, x_3, sin, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-sin((sin(x_3)*sin(x_8))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4806.2587890625,-0.17718994617462158,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
386,27,"[-, *, sin, *, sin, x_3, sin, x_6, **, +, x_0, *, x_8, x_3, **, *, x_10, x_9, x_8, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, +, x_1, x_7]",((sin((sin(x_3)*sin(x_6)))*((x_0+(x_8*x_3))**((x_10*x_9)**x_8)))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-((x_1+x_7))**3))),3291.528564453125,-0.14374090731143951,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
387,27,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, cos, *, sin, x_3, sin, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-cos((sin(x_3)*sin(x_9))))),5194.380859375,-0.17942632734775543,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
388,27,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_5, +, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_4, x_9, **, +, x_0, +, -4.37, x_9, *, sqrt, x_9, *, x_0, x_2]",(((((x_8/x_9)*sin(x_9))**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_5)))-((((x_9/x_9)*x_8)**((x_10*x_9)**(x_4-x_9)))+((x_0+(-4.37+x_9))**(sqrt(abs(x_9))*(x_0*x_2))))),5990.05029296875,-0.1852923482656479,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
389,27,"[-, -, **, *, /, x_9, x_5, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_5)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),6115.14453125,-0.19035546481609344,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
390,27,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
391,28,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
392,28,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),5355.4248046875,-0.18232423067092896,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
393,28,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3285.0654296875,-0.1411561518907547,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
394,28,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, +, sin, x_7, x_1, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*(sin(x_7)+x_1))-(cos(x_8))**2),3274.121337890625,-0.14015346765518188,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
395,28,"[+, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9, -, **, *, /, x_9, x_9, x_8, **, x_7, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))+((((x_9/x_9)*x_8)**(x_7**x_8))-sin(((x_3-x_9)**x_7)))),4926.443359375,-0.17936226725578308,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
396,28,"[-, *, sin, *, sin, x_5, sin, x_6, sin, -, sqrt, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, sin, x_0]",((sin((sin(x_5)*sin(x_6)))*sin((sqrt(abs(x_3))-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(sin(x_0))**3))),3291.394287109375,-0.1422593891620636,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
397,28,"[-, *, sin, *, sin, x_3, sin, x_6, sin, -, x_3, *, x_8, x_3, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*sin(x_6)))*sin((x_3-(x_8*x_3))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-(x_3)**3))),3286.75439453125,-0.1419024020433426,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
398,28,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
399,28,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
400,28,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.16156631708145142,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
401,28,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, sin, *, sin, x_3, sin, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-sin((sin(x_3)*sin(x_8))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4806.2587890625,-0.17718994617462158,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
402,28,"[-, *, sin, *, sin, x_3, sin, x_6, **, +, x_0, *, x_8, x_3, **, *, x_10, x_9, x_8, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, +, x_1, x_7]",((sin((sin(x_3)*sin(x_6)))*((x_0+(x_8*x_3))**((x_10*x_9)**x_8)))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-((x_1+x_7))**3))),3291.528564453125,-0.14374090731143951,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
403,28,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, cos, *, sin, x_3, sin, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-cos((sin(x_3)*sin(x_9))))),5194.380859375,-0.17942632734775543,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
404,28,"[-, -, **, *, /, x_9, x_5, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_5)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),6115.14453125,-0.19035546481609344,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
405,28,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
406,28,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_7, x_7, **, *, x_10, x_9, sin, x_9, -, **, *, /, x_9, x_9, +, x_5, x_7, *, +, x_9, x_1, -, x_2, x_10, sin, **, sin, x_0, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*(x_7*x_7))**((x_10*x_9)**sin(x_9))))*((((x_9/x_9)*(x_5+x_7))**((x_9+x_1)*(x_2-x_10)))-sin((sin(x_0)**x_7)))),5851.53271484375,-0.18263159692287445,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
407,28,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))),3997.97021484375,-0.1762666255235672,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
408,28,"[-, *, sin, *, sin, x_3, sin, x_0, sin, **, *, x_10, x_9, -, x_9, x_9, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_0)))*sin(((x_10*x_9)**(x_9-x_9))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4794.7470703125,-0.17658987641334534,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
409,28,"[*, -, **, **, *, x_10, x_9, -, x_7, x_9, **, **, -2.34, x_8, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_10*x_9)**(x_7-x_9))**((-2.34**x_8)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),5702.7451171875,-0.18249469995498657,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
410,28,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, -, x_8, x_9, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, *, /, x_8, x_9, x_8, **, x_7, x_8, sin, *, sin, x_3, sin, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**(x_8-x_9)))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))*((((x_8/x_9)*x_8)**(x_7**x_8))-sin((sin(x_3)*sin(x_8))))),5894.89404296875,-0.18570458889007568,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
411,29,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, -, +, x_1, x_7, **3, x_3, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*((x_1+x_7)-(x_3)**3))-(cos(x_8))**2),3270.474853515625,-0.13810105621814728,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
412,29,"[-, *, **, **, log, x_8, +, x_8, x_6, cos, sin, x_10, +, sin, x_7, x_1, **2, cos, x_8]",((((log(abs(x_8))**(x_8+x_6))**cos(sin(x_10)))*(sin(x_7)+x_1))-(cos(x_8))**2),3274.121337890625,-0.14015346765518188,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
413,29,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
414,29,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
415,29,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.16156631708145142,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
416,29,"[-, -, **, *, /, x_9, x_5, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, sin, x_9, sin, sin, *, -0.35, x_10]",(((((x_9/x_5)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**sin(x_9)))-sin(sin((-0.35*x_10))))),6115.14453125,-0.19035546481609344,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
417,29,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
418,29,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))),3997.97021484375,-0.1762666255235672,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
419,29,"[-, *, sin, *, sin, x_3, sin, x_0, sin, **, *, x_10, x_9, -, x_9, x_9, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",((sin((sin(x_3)*sin(x_0)))*sin(((x_10*x_9)**(x_9-x_9))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4794.7470703125,-0.17658987641334534,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
420,29,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.15657418966293335,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
421,29,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5204.89697265625,-0.18572624027729034,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
422,29,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, -, x_3, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**(x_3-x_9))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5631.15185546875,-0.1890970766544342,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
423,29,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, -, **, **, -, x_3, x_4, x_7, **, sin, x_5, x_8, sin, **, -, x_3, x_9, -, x_8, x_9]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_9)**x_8)))-((((x_3-x_4)**x_7)**(sin(x_5)**x_8))-sin(((x_3-x_9)**(x_8-x_9))))),4804.97216796875,-0.17958538234233856,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
424,30,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
425,30,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
426,30,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
427,30,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))),3997.97021484375,-0.1762666255235672,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
428,30,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.15657418966293335,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
429,30,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5204.89697265625,-0.18572624027729034,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
430,30,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, -, x_3, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**(x_3-x_9))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5631.15185546875,-0.1890970766544342,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
431,30,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
432,30,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, sin, *, x_9, x_10, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(sin((x_9*x_10))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.47705078125,-0.16682752966880798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
433,30,"[-, *, **, *, /, x_9, x_8, x_8, *, /, x_9, x_8, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_9/x_8)*x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5266.69189453125,-0.18595293164253235,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
434,30,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, -, +, x_1, x_7, **3, *, x_4, x_10, +, **, *, /, x_8, x_9, x_9, *, x_10, x_9, sin, **, -, x_4, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-((x_1+x_7)-((x_4*x_10))**3))-((((x_8/x_9)*x_9)**(x_10*x_9))+sin(((x_4-x_9)**sin(x_9))))),3458.33740234375,-0.16963419318199158,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
435,30,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4753.146484375,-0.18289296329021454,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
436,30,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5694.8056640625,-0.19393420219421387,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
437,30,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, **, x_9, sin, x_1, x_9, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-(((x_9**sin(x_1))**x_9)*((x_1+x_7)-(x_3)**3))),3255.37890625,-0.14875362813472748,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
438,30,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_6, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_6*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5074.79443359375,-0.18325954675674438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
439,31,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
440,31,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
441,31,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
442,31,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))),3997.97021484375,-0.1762666255235672,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
443,31,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5204.89697265625,-0.18572624027729034,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
444,31,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, -, x_3, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**(x_3-x_9))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5631.15185546875,-0.1890970766544342,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
445,31,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
446,31,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, sin, *, x_9, x_10, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(sin((x_9*x_10))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.47705078125,-0.16682752966880798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
447,31,"[-, *, **, *, /, x_9, x_8, x_8, *, /, x_9, x_8, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_9/x_8)*x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5266.69189453125,-0.18595293164253235,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
448,31,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4753.146484375,-0.18289296329021454,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
449,31,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5694.8056640625,-0.19393420219421387,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
450,31,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, **, x_9, sin, x_1, x_9, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-(((x_9**sin(x_1))**x_9)*((x_1+x_7)-(x_3)**3))),3255.37890625,-0.14875362813472748,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
451,31,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
452,31,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_8)*x_8)**((x_8*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.16995017230510712,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
453,31,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4685.8828125,-0.18039117753505707,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
454,31,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.16018247604370117,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
455,31,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3344.364013671875,-0.17057181894779205,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
456,32,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
457,32,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
458,32,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
459,32,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))),3997.97021484375,-0.1762666255235672,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
460,32,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5204.89697265625,-0.18572624027729034,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
461,32,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, -, x_3, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**(x_3-x_9))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5631.15185546875,-0.1890970766544342,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
462,32,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
463,32,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, sin, *, x_9, x_10, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(sin((x_9*x_10))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.47705078125,-0.16682752966880798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
464,32,"[-, *, **, *, /, x_9, x_8, x_8, *, /, x_9, x_8, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_9/x_8)*x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5266.69189453125,-0.18595293164253235,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
465,32,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4753.146484375,-0.18289296329021454,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
466,32,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5694.8056640625,-0.19393420219421387,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
467,32,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, **, x_9, sin, x_1, x_9, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-(((x_9**sin(x_1))**x_9)*((x_1+x_7)-(x_3)**3))),3255.37890625,-0.14875362813472748,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
468,32,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
469,32,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_8)*x_8)**((x_8*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.16995017230510712,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
470,32,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.16018247604370117,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
471,32,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3344.364013671875,-0.17057181894779205,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
472,32,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, *, sin, x_3, sin, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)*sin(x_8))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8)))),5694.45947265625,-0.19217686355113983,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
473,32,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4377.16650390625,-0.18082554638385773,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
474,32,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_3, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_3-x_9)**(x_2*x_1))))),3214.39892578125,-0.13611136376857758,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
475,32,"[-, *, **, **, log, x_8, +, x_2, x_6, cos, sin, x_10, +, sin, x_7, x_1, **2, cos, x_8]",((((log(abs(x_8))**(x_2+x_6))**cos(sin(x_10)))*(sin(x_7)+x_1))-(cos(x_8))**2),3234.05322265625,-0.13796818256378174,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
476,32,"[-, *, cos, exp, **3, 4.17, sin, -, x_8, *, x_8, x_9, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((cos(exp((4.17)**3))*sin((x_8-(x_8*x_9))))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3270.837158203125,-0.1500062197446823,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
477,33,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
478,33,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
479,33,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
480,33,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))),3997.97021484375,-0.1762666255235672,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
481,33,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5204.89697265625,-0.18572624027729034,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
482,33,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, -, x_3, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**(x_3-x_9))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5631.15185546875,-0.1890970766544342,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
483,33,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
484,33,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, sin, *, x_9, x_10, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(sin((x_9*x_10))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.47705078125,-0.16682752966880798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
485,33,"[-, *, **, *, /, x_9, x_8, x_8, *, /, x_9, x_8, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_9/x_8)*x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5266.69189453125,-0.18595293164253235,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
486,33,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4753.146484375,-0.18289296329021454,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
487,33,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5694.8056640625,-0.19393420219421387,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
488,33,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
489,33,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_8)*x_8)**((x_8*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.16995017230510712,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
490,33,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.16018247604370117,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
491,33,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3344.364013671875,-0.17057181894779205,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
492,33,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, *, sin, x_3, sin, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)*sin(x_8))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8)))),5694.45947265625,-0.19217686355113983,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
493,33,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4377.16650390625,-0.18082554638385773,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
494,33,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_3, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_3-x_9)**(x_2*x_1))))),3214.39892578125,-0.13611136376857758,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
495,33,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
496,33,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, -, +, x_1, x_7, **3, *, x_4, x_10, +, **, *, /, x_8, x_9, x_9, *, x_10, x_9, sin, **, -, x_8, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-((x_1+x_7)-((x_4*x_10))**3))-((((x_8/x_9)*x_9)**(x_10*x_9))+sin(((x_8-x_9)**sin(x_9))))),3431.334716796875,-0.17220357060432434,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
497,33,"[-, *, sin, *, sin, x_3, cos, x_9, **, +, x_0, *, x_8, x_3, **, *, x_10, x_9, -, x_3, x_9, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, +, x_1, x_7]",((sin((sin(x_3)*cos(x_9)))*((x_0+(x_8*x_3))**((x_10*x_9)**(x_3-x_9))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-((x_1+x_7))**3))),3232.66015625,-0.14679816365242004,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
498,33,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_9, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, -, **, **, *, x_10, x_5, **2, -1.87, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_9*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_9)**x_8)))-((((x_10*x_5)**(-1.87)**2)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4131.068359375,-0.178137868642807,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
499,33,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, sin, **, sin, x_8, x_7, **, cos, **2, x_7, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(sin((sin(x_8)**x_7))-(cos((x_7)**2)**((x_5-x_9)**(x_8-x_9))))),4556.111328125,-0.18095996975898743,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
500,34,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
501,34,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.07470703125,-0.1683632731437683,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
502,34,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
503,34,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))),3997.97021484375,-0.1762666255235672,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
504,34,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5204.89697265625,-0.18572624027729034,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
505,34,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
506,34,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, sin, *, x_9, x_10, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(sin((x_9*x_10))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.47705078125,-0.16682752966880798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
507,34,"[-, *, **, *, /, x_9, x_8, x_8, *, /, x_9, x_8, x_8, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_9/x_8)*x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5266.69189453125,-0.18595293164253235,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
508,34,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5694.8056640625,-0.19393420219421387,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
509,34,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
510,34,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_8)*x_8)**((x_8*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.16995017230510712,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
511,34,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.16018247604370117,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
512,34,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3344.364013671875,-0.17057181894779205,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
513,34,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, *, sin, x_3, sin, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)*sin(x_8))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8)))),5694.45947265625,-0.19217686355113983,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
514,34,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4377.16650390625,-0.18082554638385773,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
515,34,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_3, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_3-x_9)**(x_2*x_1))))),3214.39892578125,-0.13611136376857758,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
516,34,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
517,34,"[-, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, -, +, x_1, x_7, **3, *, x_4, x_10, +, **, *, /, x_8, x_9, x_9, *, x_10, x_9, sin, **, -, x_8, x_9, sin, x_9]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-((x_1+x_7)-((x_4*x_10))**3))-((((x_8/x_9)*x_9)**(x_10*x_9))+sin(((x_8-x_9)**sin(x_9))))),3431.334716796875,-0.17220357060432434,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
518,34,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_9, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, -, **, **, *, x_10, x_5, **2, -1.87, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_9*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_9)**x_8)))-((((x_10*x_5)**(-1.87)**2)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4131.068359375,-0.178137868642807,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
519,34,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_7, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_9, x_4, /, x_0, x_10, sin, *, x_10, x_1, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_7)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_4)+(x_0/x_10))**sin((x_10*x_1)))*((x_1+x_7)-(x_3)**3))),3290.943115234375,-0.16087862849235535,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
520,34,"[-, -, **, *, log, -0.31, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_9, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",((((log(abs(-0.31))*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_9-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5517.5595703125,-0.18958064913749695,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
521,34,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_0, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_0)**3))+sin(((x_8*x_3)**(x_2*x_1))))),3208.869140625,-0.13266168534755707,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
522,34,"[-, *, sin, *, sin, x_3, cos, x_9, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, -, x_3, x_9, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, +, x_1, x_7]",((sin((sin(x_3)*cos(x_9)))*((x_0+(x_8*x_3))**((x_9*x_9)**(x_3-x_9))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-((x_1+x_7))**3))),3229.303955078125,-0.14860984683036804,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
523,34,"[-, -, **, *, /, x_9, x_9, x_7, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_0, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_7)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_0-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5651.40234375,-0.19065432250499725,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
524,34,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_9, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_9*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4441.21484375,-0.18331262469291687,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
525,34,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, **3, x_3]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-(x_3)**3))),3601.880615234375,-0.17331869900226593,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
526,35,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
527,35,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
528,35,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, exp, log, **, x_7, x_7, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(exp(log(abs((x_7**x_7))))-((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))),3997.97021484375,-0.1762666255235672,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
529,35,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
530,35,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, sin, *, x_9, x_10, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(sin((x_9*x_10))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.47705078125,-0.16682752966880798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
531,35,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5694.8056640625,-0.19393420219421387,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
532,35,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
533,35,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.16018247604370117,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
534,35,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, *, sin, x_3, sin, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)*sin(x_8))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8)))),5694.45947265625,-0.19217686355113983,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
535,35,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4377.16650390625,-0.18082554638385773,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
536,35,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_3, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_3-x_9)**(x_2*x_1))))),3214.39892578125,-0.13611136376857758,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
537,35,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
538,35,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_7, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_9, x_4, /, x_0, x_10, sin, *, x_10, x_1, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_7)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_4)+(x_0/x_10))**sin((x_10*x_1)))*((x_1+x_7)-(x_3)**3))),3290.943115234375,-0.16087862849235535,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
539,35,"[-, -, **, *, log, -0.31, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_9, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",((((log(abs(-0.31))*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_9-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5517.5595703125,-0.18958064913749695,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
540,35,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_0, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_0)**3))+sin(((x_8*x_3)**(x_2*x_1))))),3208.869140625,-0.13266168534755707,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
541,35,"[-, *, sin, *, sin, x_3, cos, x_9, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, -, x_3, x_9, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, +, x_1, x_7]",((sin((sin(x_3)*cos(x_9)))*((x_0+(x_8*x_3))**((x_9*x_9)**(x_3-x_9))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-((x_1+x_7))**3))),3229.303955078125,-0.14860984683036804,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
542,35,"[-, -, **, *, /, x_9, x_9, x_7, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_0, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_7)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_0-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5651.40234375,-0.19065432250499725,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
543,35,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_9, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_9*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4441.21484375,-0.18331262469291687,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
544,35,"[-, *, **, *, /, x_9, x_8, x_8, *, sin, x_3, sin, x_9, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, -, x_2, x_5, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**(sin(x_3)*sin(x_9)))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*(x_2-x_5))**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5199.95068359375,-0.1863735020160675,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
545,35,"[-, *, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_8, x_9, x_8, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((((x_8/x_9)*x_8)**(x_10*x_9))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.17439231276512146,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
546,35,"[-, *, **, *, /, x_7, x_8, x_8, **, -, x_3, x_9, x_7, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_3-x_9)**x_7))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4116.7373046875,-0.17873643338680267,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
547,35,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, -, x_1, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, **, x_7, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_1-x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**(x_7**x_8)))),6122.4287109375,-0.194980651140213,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
548,35,"[-, *, **, *, /, x_9, x_8, x_8, *, /, x_8, x_9, x_9, sin, -, x_8, *, x_8, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_8)*x_8)**((x_8/x_9)*x_9))*sin((x_8-(x_8*x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5266.69189453125,-0.186519056558609,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
549,35,"[-, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, *, **, *, /, x_9, x_8, x_8, **, *, x_5, x_10, sin, x_7, sin, -, x_8, *, x_8, x_9]",(((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_9/x_8)*x_8)**((x_5*x_10)**sin(x_7)))*sin((x_8-(x_8*x_9))))),3306.074462890625,-0.16859841346740723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
550,35,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, sin, x_9, **, **, x_7, x_8, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*sin(x_9))**((x_7**x_8)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),6110.6826171875,-0.19407956302165985,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
551,36,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
552,36,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
553,36,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
554,36,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, sin, *, x_9, x_10, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(sin((x_9*x_10))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.47705078125,-0.16682752966880798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
555,36,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5694.8056640625,-0.19393420219421387,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
556,36,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
557,36,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.16018247604370117,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
558,36,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_3, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_3-x_9)**(x_2*x_1))))),3214.39892578125,-0.13611136376857758,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
559,36,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
560,36,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_7, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_9, x_4, /, x_0, x_10, sin, *, x_10, x_1, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_7)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_4)+(x_0/x_10))**sin((x_10*x_1)))*((x_1+x_7)-(x_3)**3))),3290.943115234375,-0.16087862849235535,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
561,36,"[-, *, sin, *, sin, x_3, cos, x_9, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, -, x_3, x_9, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, +, x_1, x_7]",((sin((sin(x_3)*cos(x_9)))*((x_0+(x_8*x_3))**((x_9*x_9)**(x_3-x_9))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-((x_1+x_7))**3))),3229.303955078125,-0.14860984683036804,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
562,36,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_9, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_7/x_8)*x_8)**((x_9*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4441.21484375,-0.18331262469291687,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
563,36,"[-, *, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_8, x_9, x_8, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((((x_8/x_9)*x_8)**(x_10*x_9))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.17439231276512146,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
564,36,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_10, x_9, -, x_0, x_9, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, cos, x_9, sin, *, x_10, x_1, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_10*x_9)**(x_0-x_9)))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+cos(x_9))**sin((x_10*x_1)))*((x_1+x_7)-(x_3)**3))),3302.388916015625,-0.16293928027153015,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
565,36,"[-, log, **3, exp, -, x_6, x_6, +, **, *, /, 4.08, x_9, x_9, *, x_10, x_9, -, +, x_1, x_7, u-, *, x_10, x_2]",(log(abs((exp((x_6-x_6)))**3))-((((4.08/x_9)*x_9)**(x_10*x_9))+((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.1403532475233078,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
566,36,"[-, *, **, *, *, x_10, x_9, x_8, *, /, x_9, x_8, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_9/x_8)*x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.17026934027671814,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
567,36,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5392.15673828125,-0.1927998960018158,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
568,36,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_3)**3))+sin(((x_8*x_3)**(x_2*x_1))))),3205.65185546875,-0.13386696577072144,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
569,36,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, -, x_1, x_9, exp, -0.19, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_1-x_9)**exp(-0.19))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),6080.29345703125,-0.19883431494235992,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
570,36,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
571,36,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
572,36,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3314.990478515625,-0.17099660634994507,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
573,37,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
574,37,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
575,37,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
576,37,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, sin, *, x_9, x_10, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(sin((x_9*x_10))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.47705078125,-0.16682752966880798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
577,37,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),5694.8056640625,-0.19393420219421387,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
578,37,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
579,37,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.16018247604370117,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
580,37,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_3, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_3-x_9)**(x_2*x_1))))),3214.39892578125,-0.13611136376857758,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
581,37,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
582,37,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_7, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_9, x_4, /, x_0, x_10, sin, *, x_10, x_1, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_7)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_4)+(x_0/x_10))**sin((x_10*x_1)))*((x_1+x_7)-(x_3)**3))),3290.943115234375,-0.16087862849235535,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
583,37,"[-, *, sin, *, sin, x_3, cos, x_9, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, -, x_3, x_9, *, **, log, sin, x_7, **3, exp, -0.57, -, +, x_1, x_7, **3, +, x_1, x_7]",((sin((sin(x_3)*cos(x_9)))*((x_0+(x_8*x_3))**((x_9*x_9)**(x_3-x_9))))-((log(abs(sin(x_7)))**(exp(-0.57))**3)*((x_1+x_7)-((x_1+x_7))**3))),3229.303955078125,-0.14860984683036804,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
584,37,"[-, *, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_8, x_9, x_8, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((((x_8/x_9)*x_8)**(x_10*x_9))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.17439231276512146,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
585,37,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_10, x_9, -, x_0, x_9, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, cos, x_9, sin, *, x_10, x_1, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_10*x_9)**(x_0-x_9)))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+cos(x_9))**sin((x_10*x_1)))*((x_1+x_7)-(x_3)**3))),3302.388916015625,-0.16293928027153015,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
586,37,"[-, log, **3, exp, -, x_6, x_6, +, **, *, /, 4.08, x_9, x_9, *, x_10, x_9, -, +, x_1, x_7, u-, *, x_10, x_2]",(log(abs((exp((x_6-x_6)))**3))-((((4.08/x_9)*x_9)**(x_10*x_9))+((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.1403532475233078,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
587,37,"[-, *, **, *, *, x_10, x_9, x_8, *, /, x_9, x_8, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_9/x_8)*x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.17026934027671814,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
588,37,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5392.15673828125,-0.1927998960018158,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
589,37,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_3)**3))+sin(((x_8*x_3)**(x_2*x_1))))),3205.65185546875,-0.13386696577072144,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
590,37,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, -, x_1, x_9, exp, -0.19, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_1-x_9)**exp(-0.19))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),6080.29345703125,-0.19883431494235992,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
591,37,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
592,37,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
593,37,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3314.990478515625,-0.17099660634994507,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
594,37,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_7, x_8, x_8, **, *, x_9, x_10, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, **, x_7, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_10*x_9)**x_8))-(((x_7/x_8)*x_8)**((x_9*x_10)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**(x_7**x_8)))),6043.267578125,-0.1960078477859497,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
595,37,"[*, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, -, +, x_1, x_7, **3, *, x_4, x_10, -, **, **, -, x_3, x_8, -, x_8, x_9, **, *, x_10, x_8, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-((x_1+x_7)-((x_4*x_10))**3))*((((x_3-x_8)**(x_8-x_9))**((x_10*x_8)**sin(x_9)))-sin(sin((x_9*x_10))))),3409.128173828125,-0.17471636831760406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
596,37,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
597,37,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, sin, **, sin, x_3, x_7, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(sin((sin(x_3)**x_7))-((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))),4076.77001953125,-0.18393804132938385,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
598,37,"[-, -, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, x_8, **, -, x_9, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, **, x_7, x_8]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))-(((x_9/x_9)*x_8)**((x_9-x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**(x_7**x_8)))),6023.634765625,-0.1956343948841095,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
599,37,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, x_8, x_9]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_8*x_9)))),5892.74072265625,-0.19525200128555298,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
600,38,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
601,38,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.4775390625,-0.16768571734428406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
602,38,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
603,38,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, sin, *, x_9, x_10, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin(sin((x_9*x_10))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3302.47705078125,-0.16682752966880798,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
604,38,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
605,38,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.16018247604370117,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
606,38,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
607,38,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_7, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_9, x_4, /, x_0, x_10, sin, *, x_10, x_1, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_7)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_4)+(x_0/x_10))**sin((x_10*x_1)))*((x_1+x_7)-(x_3)**3))),3290.943115234375,-0.16087862849235535,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
608,38,"[-, *, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_8, x_9, x_8, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((((x_8/x_9)*x_8)**(x_10*x_9))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.17439231276512146,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
609,38,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_10, x_9, -, x_0, x_9, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, cos, x_9, sin, *, x_10, x_1, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_10*x_9)**(x_0-x_9)))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+cos(x_9))**sin((x_10*x_1)))*((x_1+x_7)-(x_3)**3))),3302.388916015625,-0.16293928027153015,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
610,38,"[-, *, **, *, *, x_10, x_9, x_8, *, /, x_9, x_8, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_9/x_8)*x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.17026934027671814,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
611,38,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_3)**3))+sin(((x_8*x_3)**(x_2*x_1))))),3205.65185546875,-0.13386696577072144,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
612,38,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, -, x_1, x_9, exp, -0.19, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_1-x_9)**exp(-0.19))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),6080.29345703125,-0.19883431494235992,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
613,38,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
614,38,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
615,38,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3314.990478515625,-0.17099660634994507,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
616,38,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_7, x_8, x_8, **, *, x_9, x_10, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, **, x_7, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_10*x_9)**x_8))-(((x_7/x_8)*x_8)**((x_9*x_10)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**(x_7**x_8)))),6043.267578125,-0.1960078477859497,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
617,38,"[*, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, -, +, x_1, x_7, **3, *, x_4, x_10, -, **, **, -, x_3, x_8, -, x_8, x_9, **, *, x_10, x_8, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-((x_1+x_7)-((x_4*x_10))**3))*((((x_3-x_8)**(x_8-x_9))**((x_10*x_8)**sin(x_9)))-sin(sin((x_9*x_10))))),3409.128173828125,-0.17471636831760406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
618,38,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
619,38,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5392.15673828125,-0.19579842686653137,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
620,38,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_4, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_4-x_9)**(x_2*x_1))))),3213.270751953125,-0.13691756129264832,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
621,38,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5077.12744140625,-0.18868787586688995,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
622,38,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
623,38,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
624,38,"[-, *, log, sin, cos, x_5, sin, -, x_8, exp, x_5, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-exp(x_5))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3260.397705078125,-0.15325868129730225,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
625,38,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_4, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_4*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5090.73876953125,-0.18874332308769226,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
626,39,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))),3293.161376953125,-0.16142156720161438,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
627,39,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, /, +, x_10, x_10, -, x_10, x_3, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_10+x_10)/(x_10-x_3))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.1621420979499817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
628,39,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
629,39,"[-, *, log, sin, cos, x_5, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-(x_8*x_9))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3275.76513671875,-0.16018247604370117,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
630,39,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
631,39,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_7, x_8, sin, -, x_8, *, x_8, x_9, *, **, +, **, x_9, x_4, /, x_0, x_10, sin, *, x_10, x_1, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_8)*x_8)**((x_8*x_7)**x_8))*sin((x_8-(x_8*x_9))))-((((x_9**x_4)+(x_0/x_10))**sin((x_10*x_1)))*((x_1+x_7)-(x_3)**3))),3290.943115234375,-0.16087862849235535,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
632,39,"[-, *, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_8, x_9, x_8, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((((x_8/x_9)*x_8)**(x_10*x_9))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.17439231276512146,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
633,39,"[-, *, **, *, *, x_10, x_9, x_8, *, /, x_9, x_8, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_9/x_8)*x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.17026934027671814,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
634,39,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_3)**3))+sin(((x_8*x_3)**(x_2*x_1))))),3205.65185546875,-0.13386696577072144,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
635,39,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
636,39,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
637,39,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3314.990478515625,-0.17099660634994507,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
638,39,"[*, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, -, +, x_1, x_7, **3, *, x_4, x_10, -, **, **, -, x_3, x_8, -, x_8, x_9, **, *, x_10, x_8, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-((x_1+x_7)-((x_4*x_10))**3))*((((x_3-x_8)**(x_8-x_9))**((x_10*x_8)**sin(x_9)))-sin(sin((x_9*x_10))))),3409.128173828125,-0.17471636831760406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
639,39,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
640,39,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5392.15673828125,-0.19579842686653137,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
641,39,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_4, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_4-x_9)**(x_2*x_1))))),3213.270751953125,-0.13691756129264832,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
642,39,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5077.12744140625,-0.18868787586688995,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
643,39,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
644,39,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
645,39,"[-, *, log, sin, cos, x_5, sin, -, x_8, exp, x_5, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-exp(x_5))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3260.397705078125,-0.15325868129730225,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
646,39,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_4, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_4*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5090.73876953125,-0.18874332308769226,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
647,39,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, sin, x_0, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**sin(x_0))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4003.874755859375,-0.1836564540863037,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
648,39,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, -, sqrt, x_3, /, x_10, x_5, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**(sqrt(abs(x_3))-(x_10/x_5))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),5941.32373046875,-0.1994493305683136,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
649,39,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, -, x_8, x_0, /, x_9, x_9, **, *, x_9, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_8, x_8, x_9, *, x_10, x_9]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_8-x_0)*(x_9/x_9))**((x_9*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_8/x_8)*x_9)**(x_10*x_9)))),5214.708984375,-0.19038733839988708,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
650,39,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, sqrt, x_10, x_7, sin, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-(((sqrt(abs(x_10))**x_7)**sin((x_10*x_9)))*((x_1+x_7)-cos(sin(x_0))))),3297.150390625,-0.17019926011562347,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
651,40,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-sin(sin((x_9*x_10))))),4821.83251953125,-0.18522509932518005,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
652,40,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
653,40,"[-, *, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_8, x_9, x_8, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((((x_8/x_9)*x_8)**(x_10*x_9))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.17439231276512146,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
654,40,"[-, *, **, *, *, x_10, x_9, x_8, *, /, x_9, x_8, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_9/x_8)*x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.17026934027671814,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
655,40,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
656,40,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
657,40,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, **, *, sqrt, x_6, x_8, **, -, x_5, x_9, -, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*((sqrt(abs(x_6))*x_8)**((x_5-x_9)**(x_8-x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3314.990478515625,-0.17099660634994507,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
658,40,"[*, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, -, +, x_1, x_7, **3, *, x_4, x_10, -, **, **, -, x_3, x_8, -, x_8, x_9, **, *, x_10, x_8, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-((x_1+x_7)-((x_4*x_10))**3))*((((x_3-x_8)**(x_8-x_9))**((x_10*x_8)**sin(x_9)))-sin(sin((x_9*x_10))))),3409.128173828125,-0.17471636831760406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
659,40,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
660,40,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5392.15673828125,-0.19579842686653137,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
661,40,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_4, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_4-x_9)**(x_2*x_1))))),3213.270751953125,-0.13691756129264832,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
662,40,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5077.12744140625,-0.18868787586688995,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
663,40,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
664,40,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
665,40,"[-, *, log, sin, cos, x_5, sin, -, x_8, exp, x_5, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-exp(x_5))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3260.397705078125,-0.15325868129730225,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
666,40,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_4, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_4*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5090.73876953125,-0.18874332308769226,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
667,40,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, sin, x_0, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**sin(x_0))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4003.874755859375,-0.1836564540863037,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
668,40,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, -, sqrt, x_3, /, x_10, x_5, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**(sqrt(abs(x_3))-(x_10/x_5))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),5941.32373046875,-0.1994493305683136,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
669,40,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, -, x_8, x_0, /, x_9, x_9, **, *, x_9, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_8, x_8, x_9, *, x_10, x_9]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*(((x_8-x_0)*(x_9/x_9))**((x_9*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_8/x_8)*x_9)**(x_10*x_9)))),5214.708984375,-0.19038733839988708,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
670,40,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, sqrt, x_10, x_7, sin, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-(((sqrt(abs(x_10))**x_7)**sin((x_10*x_9)))*((x_1+x_7)-cos(sin(x_0))))),3297.150390625,-0.17019926011562347,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
671,40,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, **, -, x_9, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5937.73583984375,-0.1986386626958847,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
672,40,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_5, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_5)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3225.64453125,-0.15196380019187927,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
673,40,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9/x_9)*x_8)))),5892.74072265625,-0.19669583439826965,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
674,40,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, /, x_8, x_3, **2, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin(((x_8/x_3)*(x_3)**2))+sin(((x_8*x_3)**(x_2*x_1))))),3217.008056640625,-0.1417751908302307,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
675,40,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3261.822509765625,-0.16404670476913452,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
676,40,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_0, sin, **, *, x_8, x_9, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_0)**3))+sin(((x_8*x_9)**(x_2*x_1))))),3205.383056640625,-0.13563352823257446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
677,41,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
678,41,"[-, *, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_8, x_9, x_8, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((((x_8/x_9)*x_8)**(x_10*x_9))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.17439231276512146,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
679,41,"[-, *, **, *, *, x_10, x_9, x_8, *, /, x_9, x_8, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_9/x_8)*x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.17026934027671814,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
680,41,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
681,41,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
682,41,"[*, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, -, +, x_1, x_7, **3, *, x_4, x_10, -, **, **, -, x_3, x_8, -, x_8, x_9, **, *, x_10, x_8, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-((x_1+x_7)-((x_4*x_10))**3))*((((x_3-x_8)**(x_8-x_9))**((x_10*x_8)**sin(x_9)))-sin(sin((x_9*x_10))))),3409.128173828125,-0.17471636831760406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
683,41,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
684,41,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5392.15673828125,-0.19579842686653137,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
685,41,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_4, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_4-x_9)**(x_2*x_1))))),3213.270751953125,-0.13691756129264832,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
686,41,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5077.12744140625,-0.18868787586688995,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
687,41,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
688,41,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
689,41,"[-, *, log, sin, cos, x_5, sin, -, x_8, exp, x_5, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-exp(x_5))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3260.397705078125,-0.15325868129730225,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
690,41,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_4, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_4*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5090.73876953125,-0.18874332308769226,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
691,41,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, sin, x_0, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**sin(x_0))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4003.874755859375,-0.1836564540863037,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
692,41,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, -, sqrt, x_3, /, x_10, x_5, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**(sqrt(abs(x_3))-(x_10/x_5))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),5941.32373046875,-0.1994493305683136,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
693,41,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, sqrt, x_10, x_7, sin, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-(((sqrt(abs(x_10))**x_7)**sin((x_10*x_9)))*((x_1+x_7)-cos(sin(x_0))))),3297.150390625,-0.17019926011562347,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
694,41,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, **, -, x_9, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5937.73583984375,-0.1986386626958847,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
695,41,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_5, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_5)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3225.64453125,-0.15196380019187927,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
696,41,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9/x_9)*x_8)))),5892.74072265625,-0.19669583439826965,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
697,41,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, /, x_8, x_3, **2, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin(((x_8/x_3)*(x_3)**2))+sin(((x_8*x_3)**(x_2*x_1))))),3217.008056640625,-0.1417751908302307,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
698,41,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3261.822509765625,-0.16404670476913452,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
699,41,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_0, sin, **, *, x_8, x_9, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_0)**3))+sin(((x_8*x_9)**(x_2*x_1))))),3205.383056640625,-0.13563352823257446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
700,41,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5320.59912109375,-0.19423359632492065,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
701,41,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, **, *, sqrt, x_0, x_8, **, -, x_5, x_9, -, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*((sqrt(abs(x_0))*x_8)**((x_5-x_9)**(x_8-x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3310.259033203125,-0.17118704319000244,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
702,41,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_1, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **3, *, x_9, x_10]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_1)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9*x_10))**3))),5202.11767578125,-0.1911020576953888,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
703,41,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-(x_3)**3))),3313.3408203125,-0.17386983335018158,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
704,41,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4801.943359375,-0.1877625286579132,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
705,41,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
706,41,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3676.606689453125,-0.1835351288318634,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
707,42,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
708,42,"[-, *, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8, sin, -, x_8, *, x_8, x_9, *, **, *, /, x_8, x_9, x_8, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8))*sin((x_8-(x_8*x_9))))-((((x_8/x_9)*x_8)**(x_10*x_9))*((x_1+x_7)-cos(sin(x_0))))),3324.07421875,-0.17439231276512146,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
709,42,"[-, *, **, *, *, x_10, x_9, x_8, *, /, x_9, x_8, x_8, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_9/x_8)*x_8))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.17026934027671814,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
710,42,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
711,42,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
712,42,"[*, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, -, +, x_1, x_7, **3, *, x_4, x_10, -, **, **, -, x_3, x_8, -, x_8, x_9, **, *, x_10, x_8, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))-((x_1+x_7)-((x_4*x_10))**3))*((((x_3-x_8)**(x_8-x_9))**((x_10*x_8)**sin(x_9)))-sin(sin((x_9*x_10))))),3409.128173828125,-0.17471636831760406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
713,42,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
714,42,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5392.15673828125,-0.19579842686653137,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
715,42,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_4, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_4-x_9)**(x_2*x_1))))),3213.270751953125,-0.13691756129264832,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
716,42,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5077.12744140625,-0.18868787586688995,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
717,42,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
718,42,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
719,42,"[-, *, log, sin, cos, x_5, sin, -, x_8, exp, x_5, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-exp(x_5))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3260.397705078125,-0.15325868129730225,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
720,42,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_4, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_4*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5090.73876953125,-0.18874332308769226,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
721,42,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, sin, x_0, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**sin(x_0))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4003.874755859375,-0.1836564540863037,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
722,42,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, -, sqrt, x_3, /, x_10, x_5, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**(sqrt(abs(x_3))-(x_10/x_5))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),5941.32373046875,-0.1994493305683136,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
723,42,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, sqrt, x_10, x_7, sin, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-(((sqrt(abs(x_10))**x_7)**sin((x_10*x_9)))*((x_1+x_7)-cos(sin(x_0))))),3297.150390625,-0.17019926011562347,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
724,42,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, **, -, x_9, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5937.73583984375,-0.1986386626958847,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
725,42,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_5, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_5)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3225.64453125,-0.15196380019187927,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
726,42,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9/x_9)*x_8)))),5892.74072265625,-0.19669583439826965,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
727,42,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, /, x_8, x_3, **2, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin(((x_8/x_3)*(x_3)**2))+sin(((x_8*x_3)**(x_2*x_1))))),3217.008056640625,-0.1417751908302307,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
728,42,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3261.822509765625,-0.16404670476913452,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
729,42,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_0, sin, **, *, x_8, x_9, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_0)**3))+sin(((x_8*x_9)**(x_2*x_1))))),3205.383056640625,-0.13563352823257446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
730,42,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5320.59912109375,-0.19423359632492065,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
731,42,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, **, *, sqrt, x_0, x_8, **, -, x_5, x_9, -, x_8, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*((sqrt(abs(x_0))*x_8)**((x_5-x_9)**(x_8-x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3310.259033203125,-0.17118704319000244,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
732,42,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_1, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **3, *, x_9, x_10]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_1)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9*x_10))**3))),5202.11767578125,-0.1911020576953888,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
733,42,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, **3, x_3]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-(x_3)**3))),3313.3408203125,-0.17386983335018158,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
734,42,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4801.943359375,-0.1877625286579132,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
735,42,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
736,42,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3676.606689453125,-0.1835351288318634,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
737,42,"[-, -, +, sin, x_7, x_1, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8]",(((sin(x_7)+x_1)-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))),3508.416259765625,-0.1792917549610138,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
738,42,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, +, -3.78, -, x_7, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**(-3.78+(x_7-x_8))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),6121.2900390625,-0.19978249073028564,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
739,42,"[-, *, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4337.13427734375,-0.1874706745147705,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
740,42,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_3, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_3)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5045.21923828125,-0.18823537230491638,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
741,42,"[-, *, **, *, *, x_10, x_9, /, x_2, x_5, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, **, -, x_3, x_9, -, x_8, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*(x_2/x_5))**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_3-x_9)**(x_8-x_9))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.166185662150383,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
742,42,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4189.40625,-0.18637783825397491,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
743,43,"[-, *, sin, *, sin, x_3, **, x_7, x_8, sin, -, sqrt, x_3, *, x_7, x_3, *, **, log, sin, x_7, *, /, x_9, x_9, x_8, -, +, x_1, x_7, **3, x_3]",((sin((sin(x_3)*(x_7**x_8)))*sin((sqrt(abs(x_3))-(x_7*x_3))))-((log(abs(sin(x_7)))**((x_9/x_9)*x_8))*((x_1+x_7)-(x_3)**3))),3244.589111328125,-0.15262144804000854,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
744,43,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
745,43,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
746,43,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
747,43,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5392.15673828125,-0.19579842686653137,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
748,43,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_4, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_4-x_9)**(x_2*x_1))))),3213.270751953125,-0.13691756129264832,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
749,43,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
750,43,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
751,43,"[-, *, log, sin, cos, x_5, sin, -, x_8, exp, x_5, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",((log(abs(sin(cos(x_5))))*sin((x_8-exp(x_5))))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3260.397705078125,-0.15325868129730225,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
752,43,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, sin, x_0, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**sin(x_0))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4003.874755859375,-0.1836564540863037,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
753,43,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, -, sqrt, x_3, /, x_10, x_5, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**(sqrt(abs(x_3))-(x_10/x_5))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),5941.32373046875,-0.1994493305683136,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
754,43,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, sqrt, x_10, x_7, sin, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-(((sqrt(abs(x_10))**x_7)**sin((x_10*x_9)))*((x_1+x_7)-cos(sin(x_0))))),3297.150390625,-0.17019926011562347,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
755,43,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, **, -, x_9, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5937.73583984375,-0.1986386626958847,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
756,43,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_5, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_5)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3225.64453125,-0.15196380019187927,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
757,43,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_8, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_8)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9/x_9)*x_8)))),5892.74072265625,-0.19669583439826965,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
758,43,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, /, x_8, x_3, **2, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin(((x_8/x_3)*(x_3)**2))+sin(((x_8*x_3)**(x_2*x_1))))),3217.008056640625,-0.1417751908302307,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
759,43,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3261.822509765625,-0.16404670476913452,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
760,43,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_0, sin, **, *, x_8, x_9, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_0)**3))+sin(((x_8*x_9)**(x_2*x_1))))),3205.383056640625,-0.13563352823257446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
761,43,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5320.59912109375,-0.19423359632492065,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
762,43,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_1, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **3, *, x_9, x_10]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_1)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9*x_10))**3))),5202.11767578125,-0.1911020576953888,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
763,43,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
764,43,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3676.606689453125,-0.1835351288318634,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
765,43,"[-, *, **, *, *, x_10, x_9, /, x_2, x_5, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, **, -, x_3, x_9, -, x_8, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*(x_2/x_5))**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_3-x_9)**(x_8-x_9))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.166185662150383,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
766,43,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4189.40625,-0.18637783825397491,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
767,43,"[-, *, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4337.13427734375,-0.19018612802028656,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
768,43,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, -, x_9, x_9, exp, -0.19, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_8, x_9, x_8, *, /, -2.02, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_9-x_9)**exp(-0.19))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_8/x_9)*x_8)**((-2.02/x_10)*x_8)))),6082.6728515625,-0.19987328350543976,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
769,43,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_3, sin, **, *, x_8, x_6, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_3)**3))+sin(((x_8*x_6)**(x_2*x_1))))),3189.455810546875,-0.1325826644897461,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
770,43,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.2057109922170639,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
771,43,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.18149539828300476,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
772,44,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
773,44,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
774,44,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
775,44,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_4, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_4-x_9)**(x_2*x_1))))),3213.270751953125,-0.13691756129264832,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
776,44,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
777,44,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
778,44,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, -, sqrt, x_3, /, x_10, x_5, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**(sqrt(abs(x_3))-(x_10/x_5))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_8/x_9)*x_8)))),5941.32373046875,-0.1994493305683136,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
779,44,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, sqrt, x_10, x_7, sin, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-(((sqrt(abs(x_10))**x_7)**sin((x_10*x_9)))*((x_1+x_7)-cos(sin(x_0))))),3297.150390625,-0.17019926011562347,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
780,44,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, **, -, x_9, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5937.73583984375,-0.1986386626958847,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
781,44,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, /, x_8, x_3, **2, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin(((x_8/x_3)*(x_3)**2))+sin(((x_8*x_3)**(x_2*x_1))))),3217.008056640625,-0.1417751908302307,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
782,44,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3261.822509765625,-0.16404670476913452,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
783,44,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_0, sin, **, *, x_8, x_9, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_0)**3))+sin(((x_8*x_9)**(x_2*x_1))))),3205.383056640625,-0.13563352823257446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
784,44,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_1, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **3, *, x_9, x_10]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_1)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9*x_10))**3))),5202.11767578125,-0.1911020576953888,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
785,44,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
786,44,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3676.606689453125,-0.1835351288318634,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
787,44,"[-, *, **, *, *, x_10, x_9, /, x_2, x_5, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_5, *, **, **, -, x_3, x_9, -, x_8, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*(x_2/x_5))**((x_5*x_10)**x_8))*sin((x_8-exp(x_5))))-((((x_3-x_9)**(x_8-x_9))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3293.251220703125,-0.166185662150383,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
788,44,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4189.40625,-0.18637783825397491,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
789,44,"[-, *, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4337.13427734375,-0.19018612802028656,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
790,44,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, -, x_9, x_9, exp, -0.19, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_8, x_9, x_8, *, /, -2.02, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_9-x_9)**exp(-0.19))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_8/x_9)*x_8)**((-2.02/x_10)*x_8)))),6082.6728515625,-0.19987328350543976,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
791,44,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_3, sin, **, *, x_8, x_6, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_3)**3))+sin(((x_8*x_6)**(x_2*x_1))))),3189.455810546875,-0.1325826644897461,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
792,44,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.2057109922170639,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
793,44,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.18149539828300476,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
794,44,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_2, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_2)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5309.1123046875,-0.19582904875278473,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
795,44,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_9, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_9)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.859375,-0.1542423963546753,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
796,44,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5392.15673828125,-0.19779068231582642,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
797,44,"[-, -, **, **, -, x_3, x_9, -, x_9, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_9-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3686.606689453125,-0.18420732021331787,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
798,44,"[-, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3584.82763671875,-0.18153852224349976,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
799,44,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-sin(((x_1+x_7)--((x_10*x_2))))),3224.1044921875,-0.1542709469795227,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
800,44,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, x_8, *, x_10, x_9, **, *, x_9, x_9, x_8, +, **, u-, **, x_2, x_0, *, x_10, x_9, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*((x_8*(x_10*x_9))**((x_9*x_9)**x_8)))-((-((x_2**x_0))**(x_10*x_9))+((x_1+x_7)--((x_10*x_2))))),3229.035400390625,-0.15664291381835938,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
801,45,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
802,45,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
803,45,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
804,45,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, +, sin, *, exp, x_4, **3, -0.35, sin, **, -, x_4, x_9, *, x_2, x_1]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((exp(x_4)*(-0.35)**3))+sin(((x_4-x_9)**(x_2*x_1))))),3213.270751953125,-0.13691756129264832,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
805,45,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
806,45,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
807,45,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, sqrt, x_10, x_7, sin, *, x_10, x_9, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-(((sqrt(abs(x_10))**x_7)**sin((x_10*x_9)))*((x_1+x_7)-cos(sin(x_0))))),3297.150390625,-0.17019926011562347,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
808,45,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, /, x_8, x_3, **2, x_3, sin, **, *, x_8, x_3, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin(((x_8/x_3)*(x_3)**2))+sin(((x_8*x_3)**(x_2*x_1))))),3217.008056640625,-0.1417751908302307,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
809,45,"[-, *, **, *, *, x_10, x_9, x_8, **, *, x_5, x_10, x_8, sin, -, x_8, exp, x_9, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**((x_5*x_10)**x_8))*sin((x_8-exp(x_9))))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3261.822509765625,-0.16404670476913452,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
810,45,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_0, sin, **, *, x_8, x_9, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_0)**3))+sin(((x_8*x_9)**(x_2*x_1))))),3205.383056640625,-0.13563352823257446,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
811,45,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_1, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **3, *, x_9, x_10]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_1)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9*x_10))**3))),5202.11767578125,-0.1911020576953888,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
812,45,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
813,45,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3676.606689453125,-0.1835351288318634,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
814,45,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4189.40625,-0.18637783825397491,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
815,45,"[-, *, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4337.13427734375,-0.19018612802028656,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
816,45,"[-, sin, -, +, x_1, x_7, **3, x_3, +, sin, *, exp, x_4, **3, x_3, sin, **, *, x_8, x_6, *, x_2, x_1]",(sin(((x_1+x_7)-(x_3)**3))-(sin((exp(x_4)*(x_3)**3))+sin(((x_8*x_6)**(x_2*x_1))))),3189.455810546875,-0.1325826644897461,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
817,45,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.2057109922170639,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
818,45,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.18149539828300476,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
819,45,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_2, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_2)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5309.1123046875,-0.19582904875278473,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
820,45,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_9, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_9)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.859375,-0.1542423963546753,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
821,45,"[-, -, **, **, -, x_3, x_9, -, x_9, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_9-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3686.606689453125,-0.18420732021331787,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
822,45,"[-, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3584.82763671875,-0.18153852224349976,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
823,45,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-sin(((x_1+x_7)--((x_10*x_2))))),3224.1044921875,-0.1542709469795227,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
824,45,"[-, *, **, *, /, x_7, x_8, x_8, **, *, x_5, x_10, x_8, **, *, x_8, *, x_10, x_9, **, *, x_9, x_9, x_8, +, **, u-, **, x_2, x_0, *, x_10, x_9, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_7/x_8)*x_8)**((x_5*x_10)**x_8))*((x_8*(x_10*x_9))**((x_9*x_9)**x_8)))-((-((x_2**x_0))**(x_10*x_9))+((x_1+x_7)--((x_10*x_2))))),3229.035400390625,-0.15664291381835938,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
825,45,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, x_3, +, 2.87, x_10, **, x_7, x_8, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((x_3**(2.87+x_10))**(x_7**x_8)))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3302.47998046875,-0.1710708886384964,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
826,45,"[-, *, **, *, *, x_10, x_9, x_8, sin, sqrt, x_7, sin, *, /, x_9, x_9, x_8, *, **, log, sin, x_9, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_10*x_9)*x_8)**sin(sqrt(abs(x_7))))*sin(((x_9/x_9)*x_8)))-((log(abs(sin(x_9)))**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3291.0810546875,-0.16623231768608093,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
827,45,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_0, sin, sqrt, x_9]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_0))**sin(sqrt(abs(x_9)))))),3220.0068359375,-0.14421486854553223,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
828,45,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_8-x_10)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8)))),5669.021484375,-0.20145945250988007,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
829,45,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5333.64599609375,-0.19875793159008026,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
830,45,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_9, x_8, -, **, *, **, x_9, x_9, sqrt, x_6, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_9)**x_8)))-((((x_9**x_9)*sqrt(abs(x_6)))**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5292.24169921875,-0.19429618120193481,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
831,45,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_7, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_7)**x_7)))),4112.494140625,-0.18585218489170074,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
832,46,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, *, x_5, x_8, **, *, x_9, x_9, x_8, sin, **, -, x_3, x_9, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*(x_5*x_8))**((x_9*x_9)**x_8))-sin(((x_3-x_9)**x_7)))),5096.53173828125,-0.19031432271003723,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
833,46,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
834,46,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**(x_10*x_9))))),5240.53515625,-0.19210553169250488,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
835,46,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
836,46,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
837,46,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_1, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **3, *, x_9, x_10]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_1)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9*x_10))**3))),5202.11767578125,-0.1911020576953888,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
838,46,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
839,46,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3676.606689453125,-0.1835351288318634,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
840,46,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4189.40625,-0.18637783825397491,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
841,46,"[-, *, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4337.13427734375,-0.19018612802028656,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
842,46,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.2057109922170639,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
843,46,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.18149539828300476,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
844,46,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_2, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_2)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5309.1123046875,-0.19582904875278473,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
845,46,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_9, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_9)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.859375,-0.1542423963546753,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
846,46,"[-, -, **, **, -, x_3, x_9, -, x_9, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_9-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3686.606689453125,-0.18420732021331787,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
847,46,"[-, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3584.82763671875,-0.18153852224349976,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
848,46,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-sin(((x_1+x_7)--((x_10*x_2))))),3224.1044921875,-0.1542709469795227,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
849,46,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_8-x_10)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8)))),5669.021484375,-0.20145945250988007,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
850,46,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5333.64599609375,-0.19875793159008026,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
851,46,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_9, x_8, -, **, *, **, x_9, x_9, sqrt, x_6, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_9)**x_8)))-((((x_9**x_9)*sqrt(abs(x_6)))**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5292.24169921875,-0.19429618120193481,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
852,46,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_7, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_7)**x_7)))),4112.494140625,-0.18585218489170074,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
853,46,"[-, +, sin, *, +, x_1, x_7, **3, x_0, sin, **, *, x_9, x_9, *, x_2, x_1, +, **, *, sqrt, x_7, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+sin(((x_9*x_9)**(x_2*x_1))))-(((sqrt(abs(x_7))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3180.852783203125,-0.14205001294612885,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
854,46,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, **2, u-, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-((-(x_8))**2))-sin(((x_1+x_7)--((x_10*x_2))))),3208.601318359375,-0.14656603336334229,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
855,46,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, -, x_9, x_9, *, x_10, 0.66, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_8, x_9, x_8, *, /, -2.02, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_9-x_9)**(x_10*0.66))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_8/x_9)*x_8)**((-2.02/x_10)*x_8)))),6082.6728515625,-0.2017090618610382,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
856,46,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
857,47,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),3660.947021484375,-0.18194621801376343,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
858,47,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
859,47,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
860,47,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, **, x_7, x_1, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **3, *, x_9, x_10]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_7**x_1)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9*x_10))**3))),5202.11767578125,-0.1911020576953888,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
861,47,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
862,47,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3676.606689453125,-0.1835351288318634,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
863,47,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4189.40625,-0.18637783825397491,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
864,47,"[-, *, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4337.13427734375,-0.19018612802028656,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
865,47,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.2057109922170639,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
866,47,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))),3306.074462890625,-0.18149539828300476,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
867,47,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_9, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_9)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.859375,-0.1542423963546753,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
868,47,"[-, -, **, **, -, x_3, x_9, -, x_9, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, x_7, x_8, *, **, **, x_9, sin, x_8, +, x_0, *, x_8, x_3, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_9-x_9))**((x_8/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(x_7**x_8)))-(((x_9**sin(x_8))**(x_0+(x_8*x_3)))*((x_1+x_7)-((x_9/x_9)*x_8)))),3686.606689453125,-0.18420732021331787,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
869,47,"[-, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3584.82763671875,-0.18153852224349976,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
870,47,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-sin(((x_1+x_7)--((x_10*x_2))))),3224.1044921875,-0.1542709469795227,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
871,47,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_8-x_10)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8)))),5669.021484375,-0.20145945250988007,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
872,47,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5333.64599609375,-0.19875793159008026,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
873,47,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_9, x_8, -, **, *, **, x_9, x_9, sqrt, x_6, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_9)**x_8)))-((((x_9**x_9)*sqrt(abs(x_6)))**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5292.24169921875,-0.19429618120193481,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
874,47,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_7, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_7)**x_7)))),4112.494140625,-0.18585218489170074,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
875,47,"[-, +, sin, *, +, x_1, x_7, **3, x_0, sin, **, *, x_9, x_9, *, x_2, x_1, +, **, *, sqrt, x_7, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+sin(((x_9*x_9)**(x_2*x_1))))-(((sqrt(abs(x_7))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3180.852783203125,-0.14205001294612885,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
876,47,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, **2, u-, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-((-(x_8))**2))-sin(((x_1+x_7)--((x_10*x_2))))),3208.601318359375,-0.14656603336334229,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
877,47,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, -, x_9, x_9, *, x_10, 0.66, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_8, x_9, x_8, *, /, -2.02, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_9-x_9)**(x_10*0.66))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_8/x_9)*x_8)**((-2.02/x_10)*x_8)))),6082.6728515625,-0.2017090618610382,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
878,47,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
879,47,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5319.96923828125,-0.19752702116966248,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
880,47,"[-, *, **, *, **, x_9, x_9, x_8, **, *, x_10, x_10, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, **, -, x_3, x_8, -, x_8, x_9, **, *, x_10, x_8, sin, x_9, sin, sin, *, x_9, x_10]",(((((x_9**x_9)*x_8)**((x_10*x_10)**x_9))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_3-x_8)**(x_8-x_9))**((x_10*x_8)**sin(x_9)))-sin(sin((x_9*x_10))))),5307.46923828125,-0.1961641013622284,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
881,47,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_2, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_2))**((x_9*x_9)**x_8)))),3222.761962890625,-0.1486123502254486,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
882,47,"[-, *, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_2, x_9, **, *, -, x_8, x_0, /, x_9, x_9, **, *, x_9, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_8, x_8, x_9, *, x_10, x_9]",(((((x_8/x_9)*sin(x_9))**((-3.77/x_2)**x_9))*(((x_8-x_0)*(x_9/x_9))**((x_9*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_8/x_8)*x_9)**(x_10*x_9)))),5204.89697265625,-0.19391749799251556,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
883,47,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, sqrt, x_5, **, -, x_8, x_10, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*sqrt(abs(x_5)))**((x_8-x_10)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8)))),5616.19189453125,-0.2000441998243332,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
884,47,"[*, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_3, x_9, x_7, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_3-x_9)**x_7)))*((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))),4839.33984375,-0.19082234799861908,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
885,48,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.83837890625,-0.14998848736286163,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
886,48,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
887,48,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
888,48,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.2057109922170639,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
889,48,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_9, **, +, x_0, *, x_8, x_3, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_9)))*((x_0+(x_8*x_3))**((x_9*x_9)**x_8)))),3222.859375,-0.1542423963546753,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
890,48,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-sin(((x_1+x_7)--((x_10*x_2))))),3224.1044921875,-0.1542709469795227,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
891,48,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_8-x_10)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_10*x_9)**x_8)))),5669.021484375,-0.20145945250988007,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
892,48,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5333.64599609375,-0.19875793159008026,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
893,48,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_7, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_7)**x_7)))),4112.494140625,-0.18585218489170074,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
894,48,"[-, +, sin, *, +, x_1, x_7, **3, x_0, sin, **, *, x_9, x_9, *, x_2, x_1, +, **, *, sqrt, x_7, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+sin(((x_9*x_9)**(x_2*x_1))))-(((sqrt(abs(x_7))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3180.852783203125,-0.14205001294612885,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
895,48,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, **2, u-, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-((-(x_8))**2))-sin(((x_1+x_7)--((x_10*x_2))))),3208.601318359375,-0.14656603336334229,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
896,48,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
897,48,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5319.96923828125,-0.19752702116966248,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
898,48,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, sin, *, sin, x_3, sin, x_2, **, +, x_0, *, x_8, x_2, **, *, x_9, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-(sin((sin(x_3)*sin(x_2)))*((x_0+(x_8*x_2))**((x_9*x_9)**x_8)))),3222.761962890625,-0.1486123502254486,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
899,48,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, **3, x_10, **2, x_10, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_10)**3**(x_10)**2)**((x_8/x_9)*x_8)))),5140.90576171875,-0.19659432768821716,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
900,48,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, -, x_8, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_10)))-(((x_9/x_9)*x_8)**((x_8-x_10)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_8-x_10)**x_8)))),5808.21435546875,-0.20253267884254456,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
901,48,"[-, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),3584.82763671875,-0.18485993146896362,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
902,48,"[-, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_9, sin, *, x_9, x_10]",(((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_9))**sin((x_9*x_10))))),3306.074462890625,-0.18167200684547424,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
903,48,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, 4.16, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((4.16/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_9/x_9)*x_8)))),5592.884765625,-0.20120033621788025,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
904,48,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
905,49,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
906,49,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
907,49,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5333.64599609375,-0.19875793159008026,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
908,49,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_7, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_7)**x_7)))),4112.494140625,-0.18585218489170074,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
909,49,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, **2, u-, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-((-(x_8))**2))-sin(((x_1+x_7)--((x_10*x_2))))),3208.601318359375,-0.14656603336334229,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
910,49,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
911,49,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5319.96923828125,-0.19752702116966248,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
912,49,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, **3, x_10, **2, x_10, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_10)**3**(x_10)**2)**((x_8/x_9)*x_8)))),5140.90576171875,-0.19659432768821716,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
913,49,"[-, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),3584.82763671875,-0.18485993146896362,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
914,49,"[-, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_9, sin, *, x_9, x_10]",(((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_9))**sin((x_9*x_10))))),3306.074462890625,-0.18167200684547424,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
915,49,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
916,49,"[-, +, sin, *, +, x_1, x_7, **3, x_0, sin, **, *, x_9, x_9, *, x_2, x_1, +, **, *, sqrt, x_7, x_8, **, -, x_8, x_0, x_8, -, +, x_1, x_7, u-, *, x_10, x_9]",((sin(((x_1+x_7)*(x_0)**3))+sin(((x_9*x_9)**(x_2*x_1))))-(((sqrt(abs(x_7))*x_8)**((x_8-x_0)**x_8))+((x_1+x_7)--((x_10*x_9))))),3208.56494140625,-0.14614708721637726,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
917,49,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5391.927734375,-0.20470571517944336,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
918,49,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_4, **, **2, *, x_2, x_5, **, *, x_9, x_0, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_4))*(((x_2*x_5))**2**((x_9*x_0)**x_8)))),3215.91943359375,-0.15566374361515045,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
919,49,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),5204.98876953125,-0.19726026058197021,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
920,49,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.20612473785877228,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
921,49,"[-, +, sin, *, +, x_1, x_7, **3, x_0, sin, **, *, x_9, x_9, *, x_2, x_1, +, **, *, sqrt, x_0, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+sin(((x_9*x_9)**(x_2*x_1))))-(((sqrt(abs(x_0))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3170.263427734375,-0.14263081550598145,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
922,50,"[-, *, **, *, /, x_9, x_10, *, x_10, x_9, **, *, x_5, x_10, x_8, sin, -, x_8, *, x_9, x_9, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, +, x_1, x_7, sin, *, x_8, x_10]",(((((x_9/x_10)*(x_10*x_9))**((x_5*x_10)**x_8))*sin((x_8-(x_9*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*((x_1+x_7)-sin((x_8*x_10))))),4006.12353515625,-0.18512916564941406,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
923,50,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
924,50,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5333.64599609375,-0.19875793159008026,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
925,50,"[-, *, **, *, /, x_9, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_7, x_7]",(((((x_9/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_7)**x_7)))),4112.494140625,-0.18585218489170074,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
926,50,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
927,50,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, sin, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**(sin(x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))),5319.96923828125,-0.19752702116966248,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
928,50,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, **3, x_10, **2, x_10, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_10)**3**(x_10)**2)**((x_8/x_9)*x_8)))),5140.90576171875,-0.19659432768821716,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
929,50,"[-, *, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),3584.82763671875,-0.18485993146896362,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
930,50,"[-, *, **, **, -, x_3, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_9, sin, *, x_9, x_10]",(((((x_3-x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_9))**sin((x_9*x_10))))),3306.074462890625,-0.18167200684547424,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
931,50,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
932,50,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5391.927734375,-0.20470571517944336,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
933,50,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),5204.98876953125,-0.19726026058197021,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
934,50,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.20612473785877228,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
935,50,"[-, *, **, *, /, x_8, x_9, *, x_9, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_8/x_9)*(x_9*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_9/x_9)*x_8)**((x_3*x_9)**x_8))-sin((sin(x_3)**x_7)))),4119.05322265625,-0.18622784316539764,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
936,50,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, *, /, x_9, x_9, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-(((x_9/x_9)*x_8)))-sin(((x_1+x_7)--((x_10*x_2))))),3150.4892578125,-0.15700148046016693,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
937,50,"[-, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3293.161376953125,-0.17545098066329956,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
938,50,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))),3224.1044921875,-0.16450533270835876,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
939,50,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_4, **, **2, *, x_10, x_5, **, *, x_9, x_0, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_4))*(((x_10*x_5))**2**((x_9*x_0)**x_8)))),3192.52880859375,-0.15765278041362762,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
940,51,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
941,51,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, **3, x_10, **2, x_10, *, /, x_8, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_10)**3**(x_10)**2)**((x_8/x_9)*x_8)))),5140.90576171875,-0.19659432768821716,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
942,51,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
943,51,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5391.927734375,-0.20470571517944336,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
944,51,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, -, x_9, x_9, *, x_10, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-sin(((x_9-x_9)**(x_10*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),5204.98876953125,-0.19726026058197021,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
945,51,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.20612473785877228,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
946,51,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, *, /, x_9, x_9, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-(((x_9/x_9)*x_8)))-sin(((x_1+x_7)--((x_10*x_2))))),3150.4892578125,-0.15700148046016693,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
947,51,"[-, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3293.161376953125,-0.17545098066329956,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
948,51,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))),3224.1044921875,-0.16450533270835876,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
949,51,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_8, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_8*x_9))**((x_10*x_8)**x_8)))),6137.39111328125,-0.20803987979888916,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
950,51,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3303.247802734375,-0.1860901266336441,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
951,51,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, +, **, *, sqrt, x_0, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-(((sqrt(abs(x_0))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3160.47705078125,-0.1612790822982788,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
952,51,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),5296.0146484375,-0.20412577688694,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
953,51,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_8, x_9, *, x_8, x_9, **, /, x_9, x_9, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_8/x_9)*(x_8*x_9))**((x_9/x_9)**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),4015.733642578125,-0.18807117640972137,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
954,51,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_9, x_0, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*x_8)**((x_9*x_0)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))),5214.42822265625,-0.20131099224090576,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
955,52,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
956,52,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
957,52,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5391.927734375,-0.20470571517944336,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
958,52,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.20612473785877228,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
959,52,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, *, /, x_9, x_9, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-(((x_9/x_9)*x_8)))-sin(((x_1+x_7)--((x_10*x_2))))),3150.4892578125,-0.15700148046016693,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
960,52,"[-, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3293.161376953125,-0.17545098066329956,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
961,52,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))),3224.1044921875,-0.16450533270835876,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
962,52,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_8, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_8*x_9))**((x_10*x_8)**x_8)))),6137.39111328125,-0.20803987979888916,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
963,52,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3303.247802734375,-0.1860901266336441,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
964,52,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, +, **, *, sqrt, x_0, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-(((sqrt(abs(x_0))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3160.47705078125,-0.1612790822982788,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
965,52,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),5296.0146484375,-0.20412577688694,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
966,52,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_8, x_9, *, x_8, x_9, **, /, x_9, x_9, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_8/x_9)*(x_8*x_9))**((x_9/x_9)**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),4015.733642578125,-0.18807117640972137,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
967,52,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, -, x_8, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_8-x_10)**x_8)))),5140.90576171875,-0.20339569449424744,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
968,52,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, *, x_5, x_10, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_0, x_10, **, -, x_8, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_10)))-(((x_9/x_9)*x_8)**((x_9/x_9)*(x_5*x_10))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_0*x_10))**((x_8-x_10)**x_8)))),5906.291015625,-0.2047315239906311,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
969,53,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
970,53,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
971,53,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5391.927734375,-0.20470571517944336,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
972,53,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),6117.29296875,-0.20612473785877228,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
973,53,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, *, /, x_9, x_9, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-(((x_9/x_9)*x_8)))-sin(((x_1+x_7)--((x_10*x_2))))),3150.4892578125,-0.15700148046016693,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
974,53,"[-, *, **, +, **, x_2, x_4, /, x_0, x_10, sin, *, x_10, x_10, -, +, x_1, x_7, **3, x_3, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_2**x_4)+(x_0/x_10))**sin((x_10*x_10)))*((x_1+x_7)-(x_3)**3))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3293.161376953125,-0.17545098066329956,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
975,53,"[-, sin, -, +, x_1, x_7, u-, *, x_10, x_2, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8]",(sin(((x_1+x_7)--((x_10*x_2))))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))),3224.1044921875,-0.16450533270835876,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
976,53,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3303.247802734375,-0.1860901266336441,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
977,53,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, +, **, *, sqrt, x_0, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-(((sqrt(abs(x_0))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3160.47705078125,-0.1612790822982788,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
978,53,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, *, /, x_8, x_9, *, x_8, x_9, **, /, x_9, x_9, x_8, *, **, **, x_9, sin, x_8, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-(((x_8/x_9)*(x_8*x_9))**((x_9/x_9)**x_8)))-(((x_9**sin(x_8))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))),4015.733642578125,-0.18807117640972137,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
979,53,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, -, x_8, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_8-x_10)**x_8)))),5140.90576171875,-0.20339569449424744,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
980,53,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, *, x_5, x_10, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_0, x_10, **, -, x_8, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_10)))-(((x_9/x_9)*x_8)**((x_9/x_9)*(x_5*x_10))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_0*x_10))**((x_8-x_10)**x_8)))),5906.291015625,-0.2047315239906311,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
981,53,"[-, +, sin, *, +, x_1, x_7, **3, x_0, sin, **, *, x_3, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+sin(((x_3*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3149.9951171875,-0.147397980093956,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
982,53,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, **, x_9, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_8, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_9**x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_8*x_9))**((x_10*x_8)**x_8)))),6132.92236328125,-0.2087482362985611,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
983,53,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, *, x_9, x_10, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_9*x_10)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3310.818359375,-0.1861678510904312,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
984,53,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_8, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_8-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),5245.4208984375,-0.20469754934310913,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
985,54,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
986,54,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
987,54,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5391.927734375,-0.20470571517944336,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
988,54,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, *, /, x_9, x_9, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-(((x_9/x_9)*x_8)))-sin(((x_1+x_7)--((x_10*x_2))))),3150.4892578125,-0.15700148046016693,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
989,54,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3303.247802734375,-0.1860901266336441,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
990,54,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, +, **, *, sqrt, x_0, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-(((sqrt(abs(x_0))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3160.47705078125,-0.1612790822982788,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
991,54,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, -, x_8, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_8-x_10)**x_8)))),5140.90576171875,-0.20339569449424744,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
992,54,"[-, +, sin, *, +, x_1, x_7, **3, x_0, sin, **, *, x_3, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+sin(((x_3*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3149.9951171875,-0.147397980093956,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
993,54,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, **, x_9, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_8, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_9**x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_8*x_9))**((x_10*x_8)**x_8)))),6132.92236328125,-0.2087482362985611,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
994,54,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, *, x_9, x_10, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_9*x_10)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3310.818359375,-0.1861678510904312,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
995,54,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_8, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_8-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),5245.4208984375,-0.20469754934310913,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
996,54,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5408.2177734375,-0.2074887454509735,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
997,54,"[-, *, **, **, -, x_3, x_7, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, *, /, x_8, x_9, *, x_8, x_9, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, *, x_8, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_3-x_7)**x_7)**sin((x_9*x_10)))*((x_1+x_7)-((x_8/x_9)*(x_8*x_9))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*(x_8*x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3349.188232421875,-0.18715079128742218,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
998,54,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3233.35009765625,-0.17662708461284637,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
999,54,"[-, *, **, **, -, x_3, x_9, -, x_8, x_9, x_9, -, +, x_1, x_7, *, /, x_9, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",(((((x_3-x_9)**(x_8-x_9))**x_9)*((x_1+x_7)-((x_9/x_9)*x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),3878.526611328125,-0.1882343590259552,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1000,54,"[-, -, **, *, sin, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",((((sin(x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3204.8388671875,-0.17225784063339233,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1001,55,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1002,55,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1003,55,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, *, /, x_9, x_9, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-(((x_9/x_9)*x_8)))-sin(((x_1+x_7)--((x_10*x_2))))),3150.4892578125,-0.15700148046016693,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1004,55,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3303.247802734375,-0.1860901266336441,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1005,55,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, +, **, *, sqrt, x_0, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-(((sqrt(abs(x_0))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3160.47705078125,-0.1612790822982788,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1006,55,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, -, x_8, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_8-x_10)**x_8)))),5140.90576171875,-0.20339569449424744,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1007,55,"[-, +, sin, *, +, x_1, x_7, **3, x_0, sin, **, *, x_3, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+sin(((x_3*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3149.9951171875,-0.147397980093956,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1008,55,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3233.35009765625,-0.17662708461284637,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1009,55,"[-, -, **, *, sin, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",((((sin(x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3204.8388671875,-0.17225784063339233,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1010,55,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, -, **, -, +, x_1, x_7, **3, x_3, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9))))-((((x_1+x_7)-(x_3)**3)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5132.03955078125,-0.19950959086418152,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1011,55,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, **, x_9, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_9**x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))),6128.20458984375,-0.20908987522125244,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1012,55,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, *, x_9, x_10, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_10, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_9*x_10)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_10)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3310.818359375,-0.18813994526863098,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1013,55,"[-, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4196.28271484375,-0.19412752985954285,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1014,55,"[-, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_8, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, *, x_8, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_8))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*(x_8*x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3296.826416015625,-0.18325035274028778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1015,55,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5204.98876953125,-0.20785239338874817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1016,55,"[-, *, **, **, x_9, sin, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, *, /, x_9, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",((((x_9**sin(x_8))**sin((x_9*x_10)))*((x_1+x_7)-((x_9/x_9)*x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),3871.613037109375,-0.18950136005878448,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1017,56,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1018,56,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1019,56,"[-, *, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, u-, *, /, x_9, x_9, x_8, sin, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8))*-(((x_9/x_9)*x_8)))-sin(((x_1+x_7)--((x_10*x_2))))),3150.4892578125,-0.15700148046016693,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1020,56,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3303.247802734375,-0.1860901266336441,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1021,56,"[-, *, **, *, /, x_9, x_8, x_8, **, *, x_8, x_10, x_8, sin, -, x_8, *, x_8, x_9, +, **, *, sqrt, x_0, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_8)*x_8)**((x_8*x_10)**x_8))*sin((x_8-(x_8*x_9))))-(((sqrt(abs(x_0))*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3160.47705078125,-0.1612790822982788,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1022,56,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_10, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, -, x_8, x_10, x_8]",(((((x_3-x_9)**(x_8-x_9))**((x_10*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_8-x_10)**x_8)))),5140.90576171875,-0.20339569449424744,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1023,56,"[-, +, sin, *, +, x_1, x_7, **3, x_0, sin, **, *, x_3, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+sin(((x_3*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3149.9951171875,-0.147397980093956,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1024,56,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3233.35009765625,-0.17662708461284637,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1025,56,"[-, -, **, *, sin, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",((((sin(x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3204.8388671875,-0.17225784063339233,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1026,56,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, -, **, -, +, x_1, x_7, **3, x_3, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9))))-((((x_1+x_7)-(x_3)**3)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5132.03955078125,-0.19950959086418152,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1027,56,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, **, x_9, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_9**x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))),6128.20458984375,-0.20908987522125244,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1028,56,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, *, x_9, x_10, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_10, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_9*x_10)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_10)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3310.818359375,-0.18813994526863098,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1029,56,"[-, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4196.28271484375,-0.19412752985954285,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1030,56,"[-, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_8, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, *, x_8, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_8))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*(x_8*x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3296.826416015625,-0.18325035274028778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1031,56,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5204.98876953125,-0.20785239338874817,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1032,56,"[-, *, **, **, x_9, sin, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, *, /, x_9, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",((((x_9**sin(x_8))**sin((x_9*x_10)))*((x_1+x_7)-((x_9/x_9)*x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),3871.613037109375,-0.18950136005878448,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1033,56,"[-, *, **, *, *, x_10, x_9, x_9, **, *, x_5, x_10, x_8, **, *, /, x_9, x_9, *, x_5, x_10, **, *, -4.91, x_9, x_8, *, sin, **, *, x_8, x_6, *, x_2, x_1, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_0]",(((((x_10*x_9)*x_9)**((x_5*x_10)**x_8))*(((x_9/x_9)*(x_5*x_10))**((-4.91*x_9)**x_8)))-(sin(((x_8*x_6)**(x_2*x_1)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_0))))),3179.324951171875,-0.16575714945793152,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1034,56,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_6, x_9, *, /, x_9, x_9, *, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_6-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5204.9755859375,-0.20522204041481018,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1035,57,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_3, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_3)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3224.65673828125,-0.17304149270057678,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1036,57,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1037,57,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3303.247802734375,-0.1860901266336441,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1038,57,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3233.35009765625,-0.17662708461284637,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1039,57,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, -, **, -, +, x_1, x_7, **3, x_3, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9))))-((((x_1+x_7)-(x_3)**3)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5132.03955078125,-0.19950959086418152,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1040,57,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, **, x_9, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_9**x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))),6128.20458984375,-0.20908987522125244,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1041,57,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, *, x_9, x_10, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_10, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_9*x_10)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_10)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3310.818359375,-0.18813994526863098,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1042,57,"[-, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4196.28271484375,-0.19412752985954285,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1043,57,"[-, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_8, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, *, x_8, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_8))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*(x_8*x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3296.826416015625,-0.18325035274028778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1044,57,"[-, *, **, **, x_9, sin, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, *, /, x_9, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",((((x_9**sin(x_8))**sin((x_9*x_10)))*((x_1+x_7)-((x_9/x_9)*x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),3871.613037109375,-0.18950136005878448,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1045,57,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, +, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8+x_3)))-(((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),6136.822265625,-0.20952896773815155,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1046,57,"[-, +, sin, *, +, x_1, x_7, **3, x_0, +, **, x_8, *, x_2, x_1, *, x_5, +, x_7, x_9, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+((x_8**(x_2*x_1))+(x_5*(x_7+x_9))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3140.842041015625,-0.1490361988544464,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1047,57,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5140.58544921875,-0.20830589532852173,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1048,57,"[-, +, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, sin, **, *, x_9, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))+sin(((x_9*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3154.25830078125,-0.1727348119020462,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1049,57,"[-, +, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, sin, **, *, x_3, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))+sin(((x_3*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3146.60888671875,-0.17031241953372955,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1050,57,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, *, x_5, x_10, -, sin, **, sin, x_3, x_7, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_10)))-(((x_9/x_9)*x_8)**((x_9/x_9)*(x_5*x_10))))-(sin((sin(x_3)**x_7))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),4251.58203125,-0.19490955770015717,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1051,58,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1052,58,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3303.247802734375,-0.1860901266336441,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1053,58,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3233.35009765625,-0.17662708461284637,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1054,58,"[-, -, **, *, /, x_9, x_9, /, x_9, x_9, **, *, x_8, x_9, x_8, **, **, -, x_3, x_9, **, x_9, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8]",(((((x_9/x_9)*(x_9/x_9))**((x_8*x_9)**x_8))-(((x_3-x_9)**(x_9**x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))),6128.20458984375,-0.20908987522125244,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1055,58,"[-, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4196.28271484375,-0.19412752985954285,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1056,58,"[-, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_8, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, *, x_8, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_8))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*(x_8*x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3296.826416015625,-0.18325035274028778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1057,58,"[-, *, **, **, x_9, sin, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, *, /, x_9, x_9, x_8, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, *, /, x_9, x_9, x_9, *, /, x_9, x_9, x_8]",((((x_9**sin(x_8))**sin((x_9*x_10)))*((x_1+x_7)-((x_9/x_9)*x_8)))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_9/x_9)*x_9)**((x_9/x_9)*x_8)))),3871.613037109375,-0.18950136005878448,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1058,58,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, +, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8+x_3)))-(((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),6136.822265625,-0.20952896773815155,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1059,58,"[-, +, sin, *, +, x_1, x_7, **3, x_0, +, **, x_8, *, x_2, x_1, *, x_5, +, x_7, x_9, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+((x_8**(x_2*x_1))+(x_5*(x_7+x_9))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3140.842041015625,-0.1490361988544464,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1060,58,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5140.58544921875,-0.20830589532852173,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1061,58,"[-, +, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, sin, **, *, x_9, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))+sin(((x_9*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3154.25830078125,-0.1727348119020462,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1062,58,"[-, +, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, sin, **, *, x_3, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))+sin(((x_3*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3146.60888671875,-0.17031241953372955,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1063,58,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, *, x_5, x_10, -, sin, **, sin, x_3, x_7, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_10)))-(((x_9/x_9)*x_8)**((x_9/x_9)*(x_5*x_10))))-(sin((sin(x_3)**x_7))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),4251.58203125,-0.19490955770015717,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1064,58,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, **, x_9, x_9, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_9**x_9)))-(((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5431.24560546875,-0.2086244523525238,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1065,58,"[-, *, **, *, /, x_8, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, -, x_3, x_9, -, x_8, x_9]",(((((x_8/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_3-x_9)**(x_8-x_9))))),3584.825927734375,-0.18870443105697632,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1066,58,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, *, x_9, x_10, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_9, x_9, *, x_8, x_9, **, /, -3.77, x_10, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_9*x_10)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_9/x_9)*(x_8*x_9))**((-3.77/x_10)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3310.818359375,-0.1884620636701584,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1067,58,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_9, **, -, x_3, x_9, -, x_8, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_3-x_9)**(x_8-x_9))**((x_3-x_9)**(x_8-x_9))))),5606.357421875,-0.20872366428375244,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1068,58,"[-, -, **, *, sin, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",((((sin(x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3204.8388671875,-0.17520105838775635,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1069,58,"[*, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, **, x_9, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_3, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_9**x_9))**((x_9/x_9)*sin(x_9))))*((((x_3-x_9)**(x_8-x_9))**((x_3*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))),5059.59033203125,-0.20446991920471191,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1070,59,"[-, *, **, *, /, x_9, x_9, sin, x_9, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_9/x_9)*sin(x_9))**((x_10*x_9)**x_8))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4127.4638671875,-0.19264666736125946,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1071,59,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, **, **, sin, x_8, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, -, **, *, /, x_8, x_9, sin, x_9, **, /, -3.77, x_7, x_9, -, +, x_1, x_7, **3, *, x_4, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))-((sin(x_8)**(x_8-x_9))**((x_9/x_9)*sin(x_10))))-((((x_8/x_9)*sin(x_9))**((-3.77/x_7)**x_9))-((x_1+x_7)-((x_4*x_10))**3))),3303.247802734375,-0.1860901266336441,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1072,59,"[-, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3233.35009765625,-0.17662708461284637,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1073,59,"[-, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4196.28271484375,-0.19412752985954285,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1074,59,"[-, *, **, log, sin, x_9, sin, *, x_9, x_10, -, -, +, x_1, x_7, **3, x_3, cos, sin, x_8, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, *, x_8, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((log(abs(sin(x_9)))**sin((x_9*x_10)))*(((x_1+x_7)-(x_3)**3)-cos(sin(x_8))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*(x_8*x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3296.826416015625,-0.18325035274028778,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1075,59,"[-, +, sin, *, +, x_1, x_7, **3, x_0, +, **, x_8, *, x_2, x_1, *, x_5, +, x_7, x_9, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",((sin(((x_1+x_7)*(x_0)**3))+((x_8**(x_2*x_1))+(x_5*(x_7+x_9))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3140.842041015625,-0.1490361988544464,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1076,59,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5140.58544921875,-0.20830589532852173,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1077,59,"[-, +, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, sin, **, *, x_9, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))+sin(((x_9*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3154.25830078125,-0.1727348119020462,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1078,59,"[-, +, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_8, x_9, sin, x_9, sin, **, *, x_3, x_9, *, x_2, x_1, +, **, *, /, x_9, x_9, x_8, **, -, x_8, x_10, x_8, -, +, x_1, x_7, u-, *, x_10, x_2]",(((((x_3-x_9)**(x_8-x_9))**((x_8/x_9)*sin(x_9)))+sin(((x_3*x_9)**(x_2*x_1))))-((((x_9/x_9)*x_8)**((x_8-x_10)**x_8))+((x_1+x_7)--((x_10*x_2))))),3146.60888671875,-0.17031241953372955,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1079,59,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_10, **, *, /, x_9, x_9, x_8, *, /, x_9, x_9, *, x_5, x_10, -, sin, **, sin, x_3, x_7, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_10)))-(((x_9/x_9)*x_8)**((x_9/x_9)*(x_5*x_10))))-(sin((sin(x_3)**x_7))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),4251.58203125,-0.19490955770015717,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1080,59,"[-, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, **, x_9, x_9, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_9**x_9)))-(((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9))))-((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5431.24560546875,-0.2086244523525238,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1081,59,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, **, **, -, x_3, x_9, -, x_8, x_9, **, -, x_3, x_9, -, x_8, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))-(((x_3-x_9)**(x_8-x_9))**((x_3-x_9)**(x_8-x_9))))),5606.357421875,-0.20872366428375244,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1082,59,"[-, -, **, *, sin, x_9, x_8, **, *, x_10, x_9, x_8, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, *, **, **, sin, x_9, x_7, sin, *, x_9, x_10, -, +, x_1, x_7, u-, *, x_10, x_2]",((((sin(x_9)*x_8)**((x_10*x_9)**x_8))-(((x_9/x_9)*x_8)**((x_10*x_9)**x_8)))-(((sin(x_9)**x_7)**sin((x_9*x_10)))*((x_1+x_7)--((x_10*x_2))))),3204.8388671875,-0.17520105838775635,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1083,59,"[*, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, **, x_9, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, **, *, x_3, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, **, *, x_3, x_9, x_8]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_9**x_9))**((x_9/x_9)*sin(x_9))))*((((x_3-x_9)**(x_8-x_9))**((x_3*x_9)**sin(x_9)))-(((x_9/x_9)*x_8)**((x_3*x_9)**x_8)))),5059.59033203125,-0.20446991920471191,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1084,59,"[-, *, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_3, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, x_8, sin, *, x_9, x_10]",(((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_3)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*x_8)**sin((x_9*x_10))))),3305.863037109375,-0.18875741958618164,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1085,59,"[-, -, **, *, **, x_9, x_9, x_8, **, *, x_10, x_9, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_9, -, **, *, /, x_9, x_9, *, x_0, x_10, **, -, x_8, x_10, x_8, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9]",(((((x_9**x_9)*x_8)**((x_10*x_9)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_9))))-((((x_9/x_9)*(x_0*x_10))**((x_8-x_10)**x_8))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))),5140.54345703125,-0.2049836814403534,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1086,59,"[-, *, **, *, /, x_8, x_9, x_8, sin, *, x_9, x_10, -, +, x_1, x_7, cos, sin, x_0, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_9]",(((((x_8/x_9)*x_8)**sin((x_9*x_10)))*((x_1+x_7)-cos(sin(x_0))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_9))))),3583.068115234375,-0.19030681252479553,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1087,59,"[-, -, **, **, -, x_5, x_9, -, x_8, x_9, *, /, x_9, x_9, *, x_8, x_9, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, -, **, **, -, x_3, x_9, -, x_8, x_9, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_5, x_10, **, -, x_8, x_10, x_8]",(((((x_5-x_9)**(x_8-x_9))**((x_9/x_9)*(x_8*x_9)))-(((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9))))-((((x_3-x_9)**(x_8-x_9))**((x_9/x_9)*sin(x_9)))-(((x_9/x_9)*(x_5*x_10))**((x_8-x_10)**x_8)))),5906.43798828125,-0.20955440402030945,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
1088,59,"[-, *, **, **, -, x_3, x_9, -, x_8, x_8, *, /, x_9, x_9, sin, x_9, **, *, /, x_9, x_9, *, x_8, x_9, **, *, x_10, x_9, x_8, -, **, *, /, x_9, x_9, x_8, **, *, x_10, x_9, x_8, sin, **, sin, x_3, x_7]",(((((x_3-x_9)**(x_8-x_8))**((x_9/x_9)*sin(x_9)))*(((x_9/x_9)*(x_8*x_9))**((x_10*x_9)**x_8)))-((((x_9/x_9)*x_8)**((x_10*x_9)**x_8))-sin((sin(x_3)**x_7)))),4154.943359375,-0.1936848908662796,202,210,60,210,not_specified,neuralnet-counts-elastic_model,not_specified,not_specified,diabets
