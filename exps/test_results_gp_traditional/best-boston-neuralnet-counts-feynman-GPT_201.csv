,generation,parsable_tree,latex_tree,accuracy,interpretability,seed,pop_size,num_gen,num_offsprings,encoder_type,ground_truth_type,sampling,warm-up,data
0,0,"[-, sin, *, x_12, x_6, sqrt, /, -, sqrt, x_12, u-, x_12, 0.28]",(sin((x_12*x_6))-sqrt(abs(((sqrt(abs(x_12))--(x_12))/0.28)))),45.96709060668945,0.12314106523990631,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
1,0,"[u-, x_9]",-(x_9),66.91973114013672,0.10119057446718216,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
2,0,"[sin, **3, sin, x_5]",sin((sin(x_5))**3),58.12263488769531,0.1150050237774849,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
3,0,[x_3],x_3,85.39032745361328,0.07463179528713226,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
4,0,[x_8],x_8,72.52814483642578,0.07645959407091141,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
5,0,"[sin, exp, *, u-, x_5, **2, x_10]",sin(exp((-(x_5)*(x_10)**2))),65.0174560546875,0.11385253816843033,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
6,1,[x_3],x_3,85.39032745361328,0.07463179528713226,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
7,1,[x_8],x_8,72.52814483642578,0.07645959407091141,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
8,1,"[u-, x_12]",-(x_12),39.54974365234375,0.09552165120840073,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
9,2,[x_8],x_8,72.52814483642578,0.07645959407091141,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
10,2,"[u-, x_12]",-(x_12),39.54974365234375,0.09552165120840073,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
11,2,[x_1],x_1,75.50125885009766,0.07219220697879791,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
12,3,[x_8],x_8,72.52814483642578,0.07645959407091141,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
13,3,"[u-, x_12]",-(x_12),39.54974365234375,0.09552165120840073,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
14,3,[x_1],x_1,75.50125885009766,0.07219220697879791,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
15,3,[x_2],x_2,66.8115463256836,0.07873626798391342,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
16,4,[x_1],x_1,75.50125885009766,0.07219220697879791,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
17,4,"[/, x_2, x_1]",(x_2/x_1),73.78738403320312,0.07371340692043304,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
18,4,[x_12],x_12,39.54974365234375,0.07422241568565369,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
19,5,[x_1],x_1,75.50125885009766,0.07219220697879791,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
20,5,"[/, x_2, x_1]",(x_2/x_1),73.78738403320312,0.07371340692043304,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
21,5,[x_12],x_12,39.54974365234375,0.07422241568565369,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
22,5,"[-, x_10, *, x_12, x_12]",(x_10-(x_12*x_12)),87.73778533935547,0.0704340860247612,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
23,5,"[exp, u-, exp, x_12]",exp(-(exp(x_12))),34.15968322753906,0.12139163911342621,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
24,5,"[*, x_7, x_1]",(x_7*x_1),83.08941650390625,0.07167292386293411,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
25,6,[x_1],x_1,75.50125885009766,0.07219220697879791,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
26,6,"[/, x_2, x_1]",(x_2/x_1),73.78738403320312,0.07371340692043304,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
27,6,[x_12],x_12,39.54974365234375,0.07422241568565369,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
28,6,"[exp, u-, exp, x_12]",exp(-(exp(x_12))),34.15968322753906,0.12139163911342621,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
29,6,"[*, x_7, x_1]",(x_7*x_1),83.08941650390625,0.07167292386293411,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
30,6,"[*, x_3, x_1]",(x_3*x_1),84.92928314208984,0.0698433518409729,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
31,6,"[sin, x_12]",sin(x_12),34.47508239746094,0.09103380143642426,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
32,7,[x_1],x_1,75.50125885009766,0.07219220697879791,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
33,7,"[/, x_2, x_1]",(x_2/x_1),73.78738403320312,0.07371340692043304,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
34,7,[x_12],x_12,39.54974365234375,0.07422241568565369,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
35,7,"[exp, u-, exp, x_12]",exp(-(exp(x_12))),34.15968322753906,0.12139163911342621,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
36,7,"[*, x_3, x_1]",(x_3*x_1),84.92928314208984,0.0698433518409729,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
37,7,"[sin, x_12]",sin(x_12),34.47508239746094,0.09103380143642426,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
38,7,"[*, **, x_3, x_1, x_10]",((x_3**x_1)*x_10),76.65897369384766,0.06986354291439056,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
39,8,"[/, x_2, x_1]",(x_2/x_1),73.78738403320312,0.07371340692043304,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
40,8,[x_12],x_12,39.54974365234375,0.07422241568565369,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
41,8,"[exp, u-, exp, x_12]",exp(-(exp(x_12))),34.15968322753906,0.12139163911342621,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
42,8,"[*, x_3, x_1]",(x_3*x_1),84.92928314208984,0.0698433518409729,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
43,8,"[sin, x_12]",sin(x_12),34.47508239746094,0.09103380143642426,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
44,8,"[*, **, x_3, x_1, x_10]",((x_3**x_1)*x_10),76.65897369384766,0.06986354291439056,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
45,8,"[+, sin, *, **3, x_5, **2, u-, x_6, u-, sin, x_12]",(sin(((x_5)**3*(-(x_6))**2))+-(sin(x_12))),34.07299041748047,0.12450654804706573,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
46,8,"[*, x_0, x_8]",(x_0*x_8),75.10034942626953,0.0708300918340683,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
47,9,[x_12],x_12,39.54974365234375,0.07422241568565369,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
48,9,"[exp, u-, exp, x_12]",exp(-(exp(x_12))),34.15968322753906,0.12139163911342621,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
49,9,"[sin, x_12]",sin(x_12),34.47508239746094,0.09103380143642426,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
50,9,"[*, **, x_3, x_1, x_10]",((x_3**x_1)*x_10),76.65897369384766,0.06986354291439056,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
51,9,"[+, sin, *, **3, x_5, **2, u-, x_6, u-, sin, x_12]",(sin(((x_5)**3*(-(x_6))**2))+-(sin(x_12))),34.07299041748047,0.12450654804706573,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
52,9,"[*, x_0, x_8]",(x_0*x_8),75.10034942626953,0.0708300918340683,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
53,9,"[*, x_12, x_10]",(x_12*x_10),83.06015014648438,0.06744682788848877,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
54,9,"[-, -0.67, x_10]",(-0.67-x_10),61.76319122314453,0.07192519307136536,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
55,10,[x_12],x_12,39.54974365234375,0.07422241568565369,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
56,10,"[sin, x_12]",sin(x_12),34.47508239746094,0.09103380143642426,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
57,10,"[*, **, x_3, x_1, x_10]",((x_3**x_1)*x_10),76.65897369384766,0.06986354291439056,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
58,10,"[*, x_0, x_8]",(x_0*x_8),75.10034942626953,0.0708300918340683,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
59,10,"[*, x_12, x_10]",(x_12*x_10),83.06015014648438,0.06744682788848877,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
60,10,"[-, -0.67, x_10]",(-0.67-x_10),61.76319122314453,0.07192519307136536,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
61,10,"[+, x_5, u-, sin, x_12]",(x_5+-(sin(x_12))),33.22290802001953,0.10519307851791382,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
62,10,"[*, x_5, x_1]",(x_5*x_1),66.691162109375,0.07092364877462387,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
63,10,"[**3, exp, u-, exp, x_12]",(exp(-(exp(x_12))))**3,32.855918884277344,0.12562254071235657,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
64,11,[x_12],x_12,39.54974365234375,0.07422241568565369,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
65,11,"[sin, x_12]",sin(x_12),34.47508239746094,0.09103380143642426,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
66,11,"[*, x_0, x_8]",(x_0*x_8),75.10034942626953,0.0708300918340683,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
67,11,"[*, x_12, x_10]",(x_12*x_10),83.06015014648438,0.06744682788848877,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
68,11,"[-, -0.67, x_10]",(-0.67-x_10),61.76319122314453,0.07192519307136536,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
69,11,"[+, x_5, u-, sin, x_12]",(x_5+-(sin(x_12))),33.22290802001953,0.10519307851791382,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
70,11,"[*, x_5, x_1]",(x_5*x_1),66.691162109375,0.07092364877462387,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
71,11,"[**3, exp, u-, exp, x_12]",(exp(-(exp(x_12))))**3,32.855918884277344,0.12562254071235657,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
72,11,"[*, -0.67, x_1]",(-0.67*x_1),75.50125885009766,0.06854058802127838,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
73,12,[x_12],x_12,39.54974365234375,0.07422241568565369,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
74,12,"[sin, x_12]",sin(x_12),34.47508239746094,0.09103380143642426,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
75,12,"[*, x_0, x_8]",(x_0*x_8),75.10034942626953,0.0708300918340683,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
76,12,"[-, -0.67, x_10]",(-0.67-x_10),61.76319122314453,0.07192519307136536,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
77,12,"[+, x_5, u-, sin, x_12]",(x_5+-(sin(x_12))),33.22290802001953,0.10519307851791382,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
78,12,"[*, x_5, x_1]",(x_5*x_1),66.691162109375,0.07092364877462387,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
79,12,"[**3, exp, u-, exp, x_12]",(exp(-(exp(x_12))))**3,32.855918884277344,0.12562254071235657,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
80,12,"[*, -0.67, x_1]",(-0.67*x_1),75.50125885009766,0.06854058802127838,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
81,12,"[**, x_1, x_1]",(x_1**x_1),82.8744125366211,0.0672852098941803,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
82,12,"[+, x_5, u-, x_12]",(x_5+-(x_12)),34.15042495727539,0.09570971131324768,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
83,12,"[*, x_5, 1.34]",(x_5*1.34),48.859561920166016,0.07289397716522217,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
84,13,"[+, x_5, u-, sin, x_12]",(x_5+-(sin(x_12))),33.22290802001953,0.10519307851791382,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
85,13,"[**3, exp, u-, exp, x_12]",(exp(-(exp(x_12))))**3,32.855918884277344,0.12562254071235657,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
86,13,"[*, -0.67, x_1]",(-0.67*x_1),75.50125885009766,0.06854058802127838,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
87,13,"[**, x_1, x_1]",(x_1**x_1),82.8744125366211,0.0672852098941803,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
88,13,"[+, x_5, u-, x_12]",(x_5+-(x_12)),34.15042495727539,0.09570971131324768,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
89,13,"[*, x_5, 1.34]",(x_5*1.34),48.859561920166016,0.07289397716522217,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
90,13,"[*, sin, x_12, 1.34]",(sin(x_12)*1.34),34.47508239746094,0.08371434360742569,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
91,13,"[/, x_12, x_1]",(x_12/x_1),48.99879455566406,0.0694599449634552,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
92,13,"[*, -, -0.87, x_12, 1.34]",((-0.87-x_12)*1.34),39.54974365234375,0.07334175705909729,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
93,14,"[+, x_5, u-, sin, x_12]",(x_5+-(sin(x_12))),33.22290802001953,0.10519307851791382,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
94,14,"[**, x_1, x_1]",(x_1**x_1),82.8744125366211,0.0672852098941803,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
95,14,"[+, x_5, u-, x_12]",(x_5+-(x_12)),34.15042495727539,0.09570971131324768,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
96,14,"[*, sin, x_12, 1.34]",(sin(x_12)*1.34),34.47508239746094,0.08371434360742569,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
97,14,"[/, x_12, x_1]",(x_12/x_1),48.99879455566406,0.0694599449634552,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
98,14,"[exp, u-, x_12]",exp(-(x_12)),30.23102569580078,0.1116701140999794,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
99,14,"[-, 1.34, x_12]",(1.34-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
100,14,"[*, -, x_10, *, x_10, x_12, x_1]",((x_10-(x_10*x_12))*x_1),73.29904174804688,0.06795840710401535,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
101,15,"[+, x_5, u-, sin, x_12]",(x_5+-(sin(x_12))),33.22290802001953,0.10519307851791382,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
102,15,"[**, x_1, x_1]",(x_1**x_1),82.8744125366211,0.0672852098941803,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
103,15,"[+, x_5, u-, x_12]",(x_5+-(x_12)),34.15042495727539,0.09570971131324768,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
104,15,"[*, sin, x_12, 1.34]",(sin(x_12)*1.34),34.47508239746094,0.08371434360742569,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
105,15,"[/, x_12, x_1]",(x_12/x_1),48.99879455566406,0.0694599449634552,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
106,15,"[exp, u-, x_12]",exp(-(x_12)),30.23102569580078,0.1116701140999794,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
107,15,"[-, 1.34, x_12]",(1.34-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
108,15,"[*, -, x_10, *, x_10, x_12, x_1]",((x_10-(x_10*x_12))*x_1),73.29904174804688,0.06795840710401535,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
109,15,"[*, -, *, sin, *, x_0, x_5, sin, x_1, x_12, 1.34]",(((sin((x_0*x_5))*sin(x_1))-x_12)*1.34),38.50499725341797,0.07742224633693695,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
110,15,"[-, **, /, x_12, x_12, **2, exp, log, x_10, exp, u-, x_12]",(((x_12/x_12)**(exp(log(abs(x_10))))**2)-exp(-(x_12))),30.23837661743164,0.10648126155138016,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
111,16,"[+, x_5, u-, sin, x_12]",(x_5+-(sin(x_12))),33.22290802001953,0.10519307851791382,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
112,16,"[**, x_1, x_1]",(x_1**x_1),82.8744125366211,0.0672852098941803,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
113,16,"[+, x_5, u-, x_12]",(x_5+-(x_12)),34.15042495727539,0.09570971131324768,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
114,16,"[*, sin, x_12, 1.34]",(sin(x_12)*1.34),34.47508239746094,0.08371434360742569,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
115,16,"[/, x_12, x_1]",(x_12/x_1),48.99879455566406,0.0694599449634552,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
116,16,"[exp, u-, x_12]",exp(-(x_12)),30.23102569580078,0.1116701140999794,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
117,16,"[-, 1.34, x_12]",(1.34-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
118,16,"[*, -, *, sin, *, x_0, x_5, sin, x_1, x_12, 1.34]",(((sin((x_0*x_5))*sin(x_1))-x_12)*1.34),38.50499725341797,0.07742224633693695,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
119,16,"[-, **, /, x_12, x_12, **2, exp, log, x_10, exp, u-, x_12]",(((x_12/x_12)**(exp(log(abs(x_10))))**2)-exp(-(x_12))),30.23837661743164,0.10648126155138016,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
120,16,"[-, *, *, x_12, x_3, *, x_12, x_11, x_12]",(((x_12*x_3)*(x_12*x_11))-x_12),39.258907318115234,0.07734639942646027,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
121,16,"[-, -3.02, x_12]",(-3.02-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
122,16,"[*, x_12, x_1]",(x_12*x_1),73.052490234375,0.06781823933124542,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
123,17,"[**, x_1, x_1]",(x_1**x_1),82.8744125366211,0.0672852098941803,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
124,17,"[/, x_12, x_1]",(x_12/x_1),48.99879455566406,0.0694599449634552,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
125,17,"[exp, u-, x_12]",exp(-(x_12)),30.23102569580078,0.1116701140999794,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
126,17,"[-, 1.34, x_12]",(1.34-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
127,17,"[-, **, /, x_12, x_12, **2, exp, log, x_10, exp, u-, x_12]",(((x_12/x_12)**(exp(log(abs(x_10))))**2)-exp(-(x_12))),30.23837661743164,0.10648126155138016,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
128,17,"[-, -3.02, x_12]",(-3.02-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
129,17,"[*, x_12, x_1]",(x_12*x_1),73.052490234375,0.06781823933124542,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
130,17,"[-, x_12, x_5]",(x_12-x_5),34.15042495727539,0.07494553923606873,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
131,17,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
132,18,"[**, x_1, x_1]",(x_1**x_1),82.8744125366211,0.0672852098941803,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
133,18,"[/, x_12, x_1]",(x_12/x_1),48.99879455566406,0.0694599449634552,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
134,18,"[exp, u-, x_12]",exp(-(x_12)),30.23102569580078,0.1116701140999794,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
135,18,"[-, 1.34, x_12]",(1.34-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
136,18,"[-, **, /, x_12, x_12, **2, exp, log, x_10, exp, u-, x_12]",(((x_12/x_12)**(exp(log(abs(x_10))))**2)-exp(-(x_12))),30.23837661743164,0.10648126155138016,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
137,18,"[-, -3.02, x_12]",(-3.02-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
138,18,"[*, x_12, x_1]",(x_12*x_1),73.052490234375,0.06781823933124542,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
139,18,"[-, x_12, x_5]",(x_12-x_5),34.15042495727539,0.07494553923606873,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
140,18,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
141,18,"[*, -, *, *, x_12, x_10, /, x_12, x_12, x_12, 1.34]",((((x_12*x_10)*(x_12/x_12))-x_12)*1.34),46.154052734375,0.07167753577232361,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
142,18,"[**, x_10, x_1]",(x_10**x_1),84.81099700927734,0.06659719347953796,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
143,19,"[**, x_1, x_1]",(x_1**x_1),82.8744125366211,0.0672852098941803,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
144,19,"[/, x_12, x_1]",(x_12/x_1),48.99879455566406,0.0694599449634552,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
145,19,"[exp, u-, x_12]",exp(-(x_12)),30.23102569580078,0.1116701140999794,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
146,19,"[-, 1.34, x_12]",(1.34-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
147,19,"[-, **, /, x_12, x_12, **2, exp, log, x_10, exp, u-, x_12]",(((x_12/x_12)**(exp(log(abs(x_10))))**2)-exp(-(x_12))),30.23837661743164,0.10648126155138016,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
148,19,"[-, -3.02, x_12]",(-3.02-x_12),39.54974365234375,0.07239881902933121,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
149,19,"[*, x_12, x_1]",(x_12*x_1),73.052490234375,0.06781823933124542,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
150,19,"[-, x_12, x_5]",(x_12-x_5),34.15042495727539,0.07494553923606873,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
151,19,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
152,19,"[*, -, *, *, x_12, x_10, /, x_12, x_12, x_12, 1.34]",((((x_12*x_10)*(x_12/x_12))-x_12)*1.34),46.154052734375,0.07167753577232361,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
153,19,"[**, x_10, x_1]",(x_10**x_1),84.81099700927734,0.06659719347953796,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
154,19,"[-, *, -, x_10, *, x_10, x_12, x_1, x_1]",(((x_10-(x_10*x_12))*x_1)-x_1),72.45574951171875,0.06893507391214371,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
155,19,"[*, x_5, -, x_10, *, x_10, x_12]",(x_5*(x_10-(x_10*x_12))),46.87705993652344,0.07126196473836899,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
156,20,"[/, x_12, x_1]",(x_12/x_1),48.99879455566406,0.0694599449634552,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
157,20,"[exp, u-, x_12]",exp(-(x_12)),30.23102569580078,0.1116701140999794,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
158,20,"[-, **, /, x_12, x_12, **2, exp, log, x_10, exp, u-, x_12]",(((x_12/x_12)**(exp(log(abs(x_10))))**2)-exp(-(x_12))),30.23837661743164,0.10648126155138016,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
159,20,"[-, x_12, x_5]",(x_12-x_5),34.15042495727539,0.07494553923606873,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
160,20,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
161,20,"[**, x_10, x_1]",(x_10**x_1),84.81099700927734,0.06659719347953796,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
162,20,"[*, x_5, -, x_10, *, x_10, x_12]",(x_5*(x_10-(x_10*x_12))),46.87705993652344,0.07126196473836899,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
163,20,"[-, /, x_10, *, -, x_10, *, x_10, x_12, x_1, x_12]",((x_10/((x_10-(x_10*x_12))*x_1))-x_12),78.4140625,0.06687162816524506,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
164,20,"[*, *, -, -, x_12, x_12, x_12, 1.34, 1.34]",((((x_12-x_12)-x_12)*1.34)*1.34),39.54974365234375,0.07137444615364075,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
165,20,"[*, -, -, *, *, x_12, x_10, x_12, x_12, x_12, 1.34]",(((((x_12*x_10)*x_12)-x_12)-x_12)*1.34),57.619590759277344,0.06756740808486938,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
166,21,"[/, x_12, x_1]",(x_12/x_1),48.99879455566406,0.0694599449634552,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
167,21,"[-, x_12, x_5]",(x_12-x_5),34.15042495727539,0.07494553923606873,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
168,21,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
169,21,"[**, x_10, x_1]",(x_10**x_1),84.81099700927734,0.06659719347953796,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
170,21,"[*, x_5, -, x_10, *, x_10, x_12]",(x_5*(x_10-(x_10*x_12))),46.87705993652344,0.07126196473836899,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
171,21,"[-, /, x_10, *, -, x_10, *, x_10, x_12, x_1, x_12]",((x_10/((x_10-(x_10*x_12))*x_1))-x_12),78.4140625,0.06687162816524506,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
172,21,"[*, *, -, -, x_12, x_12, x_12, 1.34, 1.34]",((((x_12-x_12)-x_12)*1.34)*1.34),39.54974365234375,0.07137444615364075,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
173,21,"[*, -, -, *, *, x_12, x_10, x_12, x_12, x_12, 1.34]",(((((x_12*x_10)*x_12)-x_12)-x_12)*1.34),57.619590759277344,0.06756740808486938,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
174,21,"[-, x_12, **, sqrt, x_5, cos, x_12]",(x_12-(sqrt(abs(x_5))**cos(x_12))),28.807340621948242,0.10020466893911362,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
175,21,"[-, *, -, *, *, x_9, x_12, sin, x_1, x_12, 1.34, x_10]",(((((x_9*x_12)*sin(x_1))-x_12)*1.34)-x_10),33.47319030761719,0.07827383279800415,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
176,22,"[-, x_12, x_5]",(x_12-x_5),34.15042495727539,0.07494553923606873,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
177,22,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
178,22,"[**, x_10, x_1]",(x_10**x_1),84.81099700927734,0.06659719347953796,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
179,22,"[-, /, x_10, *, -, x_10, *, x_10, x_12, x_1, x_12]",((x_10/((x_10-(x_10*x_12))*x_1))-x_12),78.4140625,0.06687162816524506,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
180,22,"[*, -, -, *, *, x_12, x_10, x_12, x_12, x_12, 1.34]",(((((x_12*x_10)*x_12)-x_12)-x_12)*1.34),57.619590759277344,0.06756740808486938,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
181,22,"[-, x_12, **, sqrt, x_5, cos, x_12]",(x_12-(sqrt(abs(x_5))**cos(x_12))),28.807340621948242,0.10020466893911362,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
182,22,"[-, *, -, *, *, x_9, x_12, sin, x_1, x_12, 1.34, x_10]",(((((x_9*x_12)*sin(x_1))-x_12)*1.34)-x_10),33.47319030761719,0.07827383279800415,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
183,22,"[-, -, -, **, log, x_12, cos, -1.83, x_12, x_12, x_10]",((((log(abs(x_12))**cos(-1.83))-x_12)-x_12)-x_10),32.30693054199219,0.08448943495750427,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
184,22,"[*, -0.67, x_12]",(-0.67*x_12),39.54974365234375,0.0693059116601944,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
185,22,"[*, -, *, *, x_12, x_10, x_12, x_12, 1.34]",((((x_12*x_10)*x_12)-x_12)*1.34),76.06391143798828,0.06690119206905365,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
186,23,"[-, x_12, x_5]",(x_12-x_5),34.15042495727539,0.07494553923606873,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
187,23,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
188,23,"[-, x_12, **, sqrt, x_5, cos, x_12]",(x_12-(sqrt(abs(x_5))**cos(x_12))),28.807340621948242,0.10020466893911362,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
189,23,"[-, *, -, *, *, x_9, x_12, sin, x_1, x_12, 1.34, x_10]",(((((x_9*x_12)*sin(x_1))-x_12)*1.34)-x_10),33.47319030761719,0.07827383279800415,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
190,23,"[-, -, -, **, log, x_12, cos, -1.83, x_12, x_12, x_10]",((((log(abs(x_12))**cos(-1.83))-x_12)-x_12)-x_10),32.30693054199219,0.08448943495750427,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
191,23,"[*, -0.67, x_12]",(-0.67*x_12),39.54974365234375,0.0693059116601944,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
192,23,"[*, -, -, *, *, x_12, x_10, x_10, x_12, x_12, 1.34]",(((((x_12*x_10)*x_10)-x_12)-x_12)*1.34),56.17990493774414,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
193,23,"[-, -, -2.13, -, x_10, *, x_10, x_12, x_12]",((-2.13-(x_10-(x_10*x_12)))-x_12),34.69268798828125,0.07255570590496063,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
194,23,"[*, x_12, 1.34]",(x_12*1.34),39.54974365234375,0.0693059116601944,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
195,24,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
196,24,"[-, x_12, **, sqrt, x_5, cos, x_12]",(x_12-(sqrt(abs(x_5))**cos(x_12))),28.807340621948242,0.10020466893911362,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
197,24,"[-, -, -, **, log, x_12, cos, -1.83, x_12, x_12, x_10]",((((log(abs(x_12))**cos(-1.83))-x_12)-x_12)-x_10),32.30693054199219,0.08448943495750427,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
198,24,"[*, -0.67, x_12]",(-0.67*x_12),39.54974365234375,0.0693059116601944,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
199,24,"[*, -, -, *, *, x_12, x_10, x_10, x_12, x_12, 1.34]",(((((x_12*x_10)*x_10)-x_12)-x_12)*1.34),56.17990493774414,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
200,24,"[*, x_12, 1.34]",(x_12*1.34),39.54974365234375,0.0693059116601944,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
201,24,"[-, **, /, x_12, x_12, sin, *, +, x_12, x_0, **2, x_3, exp, u-, x_12]",(((x_12/x_12)**sin(((x_12+x_0)*(x_3)**2)))-exp(-(x_12))),30.23102569580078,0.09877625852823257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
202,24,"[-, x_12, **, sqrt, x_5, cos, cos, 1.34]",(x_12-(sqrt(abs(x_5))**cos(cos(1.34)))),27.0483455657959,0.11064080893993378,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
203,24,"[*, -, x_10, *, x_10, *, x_0, x_12, x_1]",((x_10-(x_10*(x_0*x_12)))*x_1),74.3637466430664,0.06574660539627075,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
204,24,"[-, x_12, **, sqrt, x_5, cos, cos, x_10]",(x_12-(sqrt(abs(x_5))**cos(cos(x_10)))),27.732810974121094,0.10858303308486938,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
205,24,"[-, *, -, *, *, x_9, x_8, x_10, x_12, 1.34, x_10]",(((((x_9*x_8)*x_10)-x_12)*1.34)-x_10),33.279117584228516,0.07205197215080261,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
206,25,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
207,25,"[-, x_12, **, sqrt, x_5, cos, x_12]",(x_12-(sqrt(abs(x_5))**cos(x_12))),28.807340621948242,0.10020466893911362,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
208,25,"[-, -, -, **, log, x_12, cos, -1.83, x_12, x_12, x_10]",((((log(abs(x_12))**cos(-1.83))-x_12)-x_12)-x_10),32.30693054199219,0.08448943495750427,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
209,25,"[*, -, -, *, *, x_12, x_10, x_10, x_12, x_12, 1.34]",(((((x_12*x_10)*x_10)-x_12)-x_12)*1.34),56.17990493774414,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
210,25,"[-, **, /, x_12, x_12, sin, *, +, x_12, x_0, **2, x_3, exp, u-, x_12]",(((x_12/x_12)**sin(((x_12+x_0)*(x_3)**2)))-exp(-(x_12))),30.23102569580078,0.09877625852823257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
211,25,"[-, x_12, **, sqrt, x_5, cos, cos, 1.34]",(x_12-(sqrt(abs(x_5))**cos(cos(1.34)))),27.0483455657959,0.11064080893993378,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
212,25,"[*, -, x_10, *, x_10, *, x_0, x_12, x_1]",((x_10-(x_10*(x_0*x_12)))*x_1),74.3637466430664,0.06574660539627075,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
213,25,"[-, x_12, **, sqrt, x_5, cos, cos, x_10]",(x_12-(sqrt(abs(x_5))**cos(cos(x_10)))),27.732810974121094,0.10858303308486938,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
214,25,"[-, *, -, *, *, x_9, x_8, x_10, x_12, 1.34, x_10]",(((((x_9*x_8)*x_10)-x_12)*1.34)-x_10),33.279117584228516,0.07205197215080261,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
215,25,"[-, *, -, *, *, x_9, x_10, x_10, x_12, 1.34, x_10]",(((((x_9*x_10)*x_10)-x_12)*1.34)-x_10),37.32480239868164,0.06903807818889618,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
216,25,"[-, x_12, **, sqrt, x_5, cos, cos, sqrt, x_5]",(x_12-(sqrt(abs(x_5))**cos(cos(sqrt(abs(x_5)))))),26.843914031982422,0.12447170913219452,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
217,25,"[-, *, x_1, **, x_12, x_1, x_12]",((x_1*(x_12**x_1))-x_12),38.0101432800293,0.06871557235717773,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
218,25,"[-, *, **3, sin, x_5, x_5, x_12]",(((sin(x_5))**3*x_5)-x_12),30.872976303100586,0.09289354085922241,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
219,25,"[*, -, x_10, *, -, x_10, *, x_10, x_12, x_12, x_1]",((x_10-((x_10-(x_10*x_12))*x_12))*x_1),73.10635375976562,0.0661821961402893,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
220,25,"[-, *, -, *, *, x_9, x_12, x_10, x_12, 1.34, x_10]",(((((x_9*x_12)*x_10)-x_12)*1.34)-x_10),34.464786529541016,0.06919935345649719,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
221,26,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
222,26,"[-, x_12, **, sqrt, x_5, cos, x_12]",(x_12-(sqrt(abs(x_5))**cos(x_12))),28.807340621948242,0.10020466893911362,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
223,26,"[-, -, -, **, log, x_12, cos, -1.83, x_12, x_12, x_10]",((((log(abs(x_12))**cos(-1.83))-x_12)-x_12)-x_10),32.30693054199219,0.08448943495750427,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
224,26,"[*, -, -, *, *, x_12, x_10, x_10, x_12, x_12, 1.34]",(((((x_12*x_10)*x_10)-x_12)-x_12)*1.34),56.17990493774414,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
225,26,"[-, **, /, x_12, x_12, sin, *, +, x_12, x_0, **2, x_3, exp, u-, x_12]",(((x_12/x_12)**sin(((x_12+x_0)*(x_3)**2)))-exp(-(x_12))),30.23102569580078,0.09877625852823257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
226,26,"[-, x_12, **, sqrt, x_5, cos, cos, 1.34]",(x_12-(sqrt(abs(x_5))**cos(cos(1.34)))),27.0483455657959,0.11064080893993378,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
227,26,"[*, -, x_10, *, x_10, *, x_0, x_12, x_1]",((x_10-(x_10*(x_0*x_12)))*x_1),74.3637466430664,0.06574660539627075,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
228,26,"[-, x_12, **, sqrt, x_5, cos, cos, x_10]",(x_12-(sqrt(abs(x_5))**cos(cos(x_10)))),27.732810974121094,0.10858303308486938,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
229,26,"[-, *, -, *, *, x_9, x_8, x_10, x_12, 1.34, x_10]",(((((x_9*x_8)*x_10)-x_12)*1.34)-x_10),33.279117584228516,0.07205197215080261,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
230,26,"[-, x_12, **, sqrt, x_5, cos, cos, sqrt, x_5]",(x_12-(sqrt(abs(x_5))**cos(cos(sqrt(abs(x_5)))))),26.843914031982422,0.12447170913219452,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
231,26,"[-, *, x_1, **, x_12, x_1, x_12]",((x_1*(x_12**x_1))-x_12),38.0101432800293,0.06871557235717773,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
232,26,"[-, *, **3, sin, x_5, x_5, x_12]",(((sin(x_5))**3*x_5)-x_12),30.872976303100586,0.09289354085922241,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
233,26,"[*, -, x_10, *, -, x_10, *, x_10, x_12, x_12, x_1]",((x_10-((x_10-(x_10*x_12))*x_12))*x_1),73.10635375976562,0.0661821961402893,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
234,26,"[-, *, -, *, *, x_9, x_12, x_10, x_12, 1.34, x_10]",(((((x_9*x_12)*x_10)-x_12)*1.34)-x_10),34.464786529541016,0.06919935345649719,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
235,26,"[*, -, -, *, *, x_1, x_10, x_12, x_12, x_12, 1.34]",(((((x_1*x_10)*x_12)-x_12)-x_12)*1.34),39.26938247680664,0.0671481043100357,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
236,26,"[-, *, -, *, x_12, x_10, x_12, 1.34, x_10]",((((x_12*x_10)-x_12)*1.34)-x_10),34.78877258300781,0.06872919201850891,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
237,26,"[*, /, x_10, *, -, x_10, *, x_10, x_12, x_1, x_1]",((x_10/((x_10-(x_10*x_12))*x_1))*x_1),87.5326919555664,0.06555350124835968,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
238,26,"[+, x_5, -, *, **3, sin, x_5, *, x_10, x_12, x_12]",(x_5+(((sin(x_5))**3*(x_10*x_12))-x_12)),31.791271209716797,0.08900545537471771,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
239,27,"[-, +, x_12, x_12, x_5]",((x_12+x_12)-x_5),32.58485794067383,0.08060979843139648,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
240,27,"[-, x_12, **, sqrt, x_5, cos, x_12]",(x_12-(sqrt(abs(x_5))**cos(x_12))),28.807340621948242,0.10020466893911362,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
241,27,"[*, -, -, *, *, x_12, x_10, x_10, x_12, x_12, 1.34]",(((((x_12*x_10)*x_10)-x_12)-x_12)*1.34),56.17990493774414,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
242,27,"[-, x_12, **, sqrt, x_5, cos, cos, 1.34]",(x_12-(sqrt(abs(x_5))**cos(cos(1.34)))),27.0483455657959,0.11064080893993378,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
243,27,"[*, -, x_10, *, x_10, *, x_0, x_12, x_1]",((x_10-(x_10*(x_0*x_12)))*x_1),74.3637466430664,0.06574660539627075,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
244,27,"[-, x_12, **, sqrt, x_5, cos, cos, x_10]",(x_12-(sqrt(abs(x_5))**cos(cos(x_10)))),27.732810974121094,0.10858303308486938,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
245,27,"[-, *, -, *, *, x_9, x_8, x_10, x_12, 1.34, x_10]",(((((x_9*x_8)*x_10)-x_12)*1.34)-x_10),33.279117584228516,0.07205197215080261,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
246,27,"[-, x_12, **, sqrt, x_5, cos, cos, sqrt, x_5]",(x_12-(sqrt(abs(x_5))**cos(cos(sqrt(abs(x_5)))))),26.843914031982422,0.12447170913219452,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
247,27,"[-, *, x_1, **, x_12, x_1, x_12]",((x_1*(x_12**x_1))-x_12),38.0101432800293,0.06871557235717773,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
248,27,"[*, -, x_10, *, -, x_10, *, x_10, x_12, x_12, x_1]",((x_10-((x_10-(x_10*x_12))*x_12))*x_1),73.10635375976562,0.0661821961402893,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
249,27,"[-, *, -, *, *, x_9, x_12, x_10, x_12, 1.34, x_10]",(((((x_9*x_12)*x_10)-x_12)*1.34)-x_10),34.464786529541016,0.06919935345649719,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
250,27,"[*, -, -, *, *, x_1, x_10, x_12, x_12, x_12, 1.34]",(((((x_1*x_10)*x_12)-x_12)-x_12)*1.34),39.26938247680664,0.0671481043100357,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
251,27,"[-, *, -, *, x_12, x_10, x_12, 1.34, x_10]",((((x_12*x_10)-x_12)*1.34)-x_10),34.78877258300781,0.06872919201850891,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
252,27,"[*, /, x_10, *, -, x_10, *, x_10, x_12, x_1, x_1]",((x_10/((x_10-(x_10*x_12))*x_1))*x_1),87.5326919555664,0.06555350124835968,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
253,27,"[*, -, x_10, *, -, x_10, *, x_10, x_12, x_12, x_12]",((x_10-((x_10-(x_10*x_12))*x_12))*x_12),82.36178588867188,0.06558077037334442,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
254,27,"[-, sin, log, exp, x_12, **, sqrt, x_5, cos, cos, sqrt, x_5]",(sin(log(abs(exp(x_12))))-(sqrt(abs(x_5))**cos(cos(sqrt(abs(x_5)))))),26.789077758789062,0.13496889173984528,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
255,27,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, x_10]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-x_10),29.53447151184082,0.08286644518375397,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
256,27,"[*, /, *, -, x_12, *, x_10, x_12, x_1, x_3, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",((((x_12-(x_10*x_12))*x_1)/x_3)*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.82276153564453,0.06382255256175995,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
257,28,"[*, -, -, *, *, x_12, x_10, x_10, x_12, x_12, 1.34]",(((((x_12*x_10)*x_10)-x_12)-x_12)*1.34),56.17990493774414,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
258,28,"[*, -, x_10, *, x_10, *, x_0, x_12, x_1]",((x_10-(x_10*(x_0*x_12)))*x_1),74.3637466430664,0.06574660539627075,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
259,28,"[-, *, -, *, *, x_9, x_8, x_10, x_12, 1.34, x_10]",(((((x_9*x_8)*x_10)-x_12)*1.34)-x_10),33.279117584228516,0.07205197215080261,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
260,28,"[-, x_12, **, sqrt, x_5, cos, cos, sqrt, x_5]",(x_12-(sqrt(abs(x_5))**cos(cos(sqrt(abs(x_5)))))),26.843914031982422,0.12447170913219452,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
261,28,"[-, *, x_1, **, x_12, x_1, x_12]",((x_1*(x_12**x_1))-x_12),38.0101432800293,0.06871557235717773,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
262,28,"[*, -, x_10, *, -, x_10, *, x_10, x_12, x_12, x_1]",((x_10-((x_10-(x_10*x_12))*x_12))*x_1),73.10635375976562,0.0661821961402893,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
263,28,"[-, *, -, *, *, x_9, x_12, x_10, x_12, 1.34, x_10]",(((((x_9*x_12)*x_10)-x_12)*1.34)-x_10),34.464786529541016,0.06919935345649719,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
264,28,"[*, -, -, *, *, x_1, x_10, x_12, x_12, x_12, 1.34]",(((((x_1*x_10)*x_12)-x_12)-x_12)*1.34),39.26938247680664,0.0671481043100357,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
265,28,"[-, *, -, *, x_12, x_10, x_12, 1.34, x_10]",((((x_12*x_10)-x_12)*1.34)-x_10),34.78877258300781,0.06872919201850891,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
266,28,"[-, sin, log, exp, x_12, **, sqrt, x_5, cos, cos, sqrt, x_5]",(sin(log(abs(exp(x_12))))-(sqrt(abs(x_5))**cos(cos(sqrt(abs(x_5)))))),26.789077758789062,0.13496889173984528,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
267,28,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, x_10]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-x_10),29.53447151184082,0.08286644518375397,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
268,28,"[*, /, *, -, x_12, *, x_10, x_12, x_1, x_3, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",((((x_12-(x_10*x_12))*x_1)/x_3)*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.82276153564453,0.06382255256175995,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
269,28,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
270,28,"[*, -, x_10, *, x_10, *, /, x_1, x_0, x_12, x_1]",((x_10-(x_10*((x_1/x_0)*x_12)))*x_1),78.89354705810547,0.06418438255786896,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
271,28,"[-, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12]",((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12)))),30.77576446533203,0.07591493427753448,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
272,29,"[*, -, -, *, *, x_12, x_10, x_10, x_12, x_12, 1.34]",(((((x_12*x_10)*x_10)-x_12)-x_12)*1.34),56.17990493774414,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
273,29,"[*, -, x_10, *, x_10, *, x_0, x_12, x_1]",((x_10-(x_10*(x_0*x_12)))*x_1),74.3637466430664,0.06574660539627075,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
274,29,"[-, *, -, *, *, x_9, x_8, x_10, x_12, 1.34, x_10]",(((((x_9*x_8)*x_10)-x_12)*1.34)-x_10),33.279117584228516,0.07205197215080261,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
275,29,"[-, x_12, **, sqrt, x_5, cos, cos, sqrt, x_5]",(x_12-(sqrt(abs(x_5))**cos(cos(sqrt(abs(x_5)))))),26.843914031982422,0.12447170913219452,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
276,29,"[-, *, x_1, **, x_12, x_1, x_12]",((x_1*(x_12**x_1))-x_12),38.0101432800293,0.06871557235717773,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
277,29,"[*, -, x_10, *, -, x_10, *, x_10, x_12, x_12, x_1]",((x_10-((x_10-(x_10*x_12))*x_12))*x_1),73.10635375976562,0.0661821961402893,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
278,29,"[-, *, -, *, *, x_9, x_12, x_10, x_12, 1.34, x_10]",(((((x_9*x_12)*x_10)-x_12)*1.34)-x_10),34.464786529541016,0.06919935345649719,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
279,29,"[*, -, -, *, *, x_1, x_10, x_12, x_12, x_12, 1.34]",(((((x_1*x_10)*x_12)-x_12)-x_12)*1.34),39.26938247680664,0.0671481043100357,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
280,29,"[-, *, -, *, x_12, x_10, x_12, 1.34, x_10]",((((x_12*x_10)-x_12)*1.34)-x_10),34.78877258300781,0.06872919201850891,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
281,29,"[-, sin, log, exp, x_12, **, sqrt, x_5, cos, cos, sqrt, x_5]",(sin(log(abs(exp(x_12))))-(sqrt(abs(x_5))**cos(cos(sqrt(abs(x_5)))))),26.789077758789062,0.13496889173984528,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
282,29,"[*, /, *, -, x_12, *, x_10, x_12, x_1, x_3, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",((((x_12-(x_10*x_12))*x_1)/x_3)*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.82276153564453,0.06382255256175995,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
283,29,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
284,29,"[*, -, x_10, *, x_10, *, /, x_1, x_0, x_12, x_1]",((x_10-(x_10*((x_1/x_0)*x_12)))*x_1),78.89354705810547,0.06418438255786896,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
285,29,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
286,30,"[*, -, x_10, *, x_10, *, x_0, x_12, x_1]",((x_10-(x_10*(x_0*x_12)))*x_1),74.3637466430664,0.06574660539627075,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
287,30,"[-, *, x_1, **, x_12, x_1, x_12]",((x_1*(x_12**x_1))-x_12),38.0101432800293,0.06871557235717773,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
288,30,"[-, *, -, *, *, x_9, x_12, x_10, x_12, 1.34, x_10]",(((((x_9*x_12)*x_10)-x_12)*1.34)-x_10),34.464786529541016,0.06919935345649719,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
289,30,"[*, -, -, *, *, x_1, x_10, x_12, x_12, x_12, 1.34]",(((((x_1*x_10)*x_12)-x_12)-x_12)*1.34),39.26938247680664,0.0671481043100357,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
290,30,"[-, *, -, *, x_12, x_10, x_12, 1.34, x_10]",((((x_12*x_10)-x_12)*1.34)-x_10),34.78877258300781,0.06872919201850891,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
291,30,"[*, /, *, -, x_12, *, x_10, x_12, x_1, x_3, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",((((x_12-(x_10*x_12))*x_1)/x_3)*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.82276153564453,0.06382255256175995,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
292,30,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
293,30,"[*, -, x_10, *, x_10, *, /, x_1, x_0, x_12, x_1]",((x_10-(x_10*((x_1/x_0)*x_12)))*x_1),78.89354705810547,0.06418438255786896,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
294,30,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
295,30,"[-, *, -, *, **, x_10, x_12, x_10, x_12, 1.34, x_10]",(((((x_10**x_12)*x_10)-x_12)*1.34)-x_10),48.77766036987305,0.0668121725320816,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
296,30,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
297,30,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
298,30,"[-, x_12, **, sqrt, x_5, cos, *, *, x_3, x_10, **3, x_11]",(x_12-(sqrt(abs(x_5))**cos(((x_3*x_10)*(x_11)**3)))),26.35284423828125,0.0997745543718338,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
299,31,"[-, *, -, *, *, x_9, x_12, x_10, x_12, 1.34, x_10]",(((((x_9*x_12)*x_10)-x_12)*1.34)-x_10),34.464786529541016,0.06919935345649719,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
300,31,"[-, *, -, *, x_12, x_10, x_12, 1.34, x_10]",((((x_12*x_10)-x_12)*1.34)-x_10),34.78877258300781,0.06872919201850891,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
301,31,"[*, /, *, -, x_12, *, x_10, x_12, x_1, x_3, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",((((x_12-(x_10*x_12))*x_1)/x_3)*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.82276153564453,0.06382255256175995,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
302,31,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
303,31,"[*, -, x_10, *, x_10, *, /, x_1, x_0, x_12, x_1]",((x_10-(x_10*((x_1/x_0)*x_12)))*x_1),78.89354705810547,0.06418438255786896,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
304,31,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
305,31,"[-, *, -, *, **, x_10, x_12, x_10, x_12, 1.34, x_10]",(((((x_10**x_12)*x_10)-x_12)*1.34)-x_10),48.77766036987305,0.0668121725320816,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
306,31,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
307,31,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
308,31,"[-, x_12, **, sqrt, x_5, cos, *, *, x_3, x_10, **3, x_11]",(x_12-(sqrt(abs(x_5))**cos(((x_3*x_10)*(x_11)**3)))),26.35284423828125,0.0997745543718338,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
309,31,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
310,31,"[-, *, -, *, *, x_10, x_10, x_12, x_12, x_12, x_10]",(((((x_10*x_10)*x_12)-x_12)*x_12)-x_10),62.806861877441406,0.06558077037334442,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
311,32,"[-, *, -, *, *, x_9, x_12, x_10, x_12, 1.34, x_10]",(((((x_9*x_12)*x_10)-x_12)*1.34)-x_10),34.464786529541016,0.06919935345649719,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
312,32,"[-, *, -, *, x_12, x_10, x_12, 1.34, x_10]",((((x_12*x_10)-x_12)*1.34)-x_10),34.78877258300781,0.06872919201850891,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
313,32,"[*, /, *, -, x_12, *, x_10, x_12, x_1, x_3, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",((((x_12-(x_10*x_12))*x_1)/x_3)*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.82276153564453,0.06382255256175995,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
314,32,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
315,32,"[*, -, x_10, *, x_10, *, /, x_1, x_0, x_12, x_1]",((x_10-(x_10*((x_1/x_0)*x_12)))*x_1),78.89354705810547,0.06418438255786896,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
316,32,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
317,32,"[-, *, -, *, **, x_10, x_12, x_10, x_12, 1.34, x_10]",(((((x_10**x_12)*x_10)-x_12)*1.34)-x_10),48.77766036987305,0.0668121725320816,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
318,32,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
319,32,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
320,32,"[-, x_12, **, sqrt, x_5, cos, *, *, x_3, x_10, **3, x_11]",(x_12-(sqrt(abs(x_5))**cos(((x_3*x_10)*(x_11)**3)))),26.35284423828125,0.0997745543718338,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
321,32,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
322,32,"[-, *, -, *, *, x_10, x_10, x_12, x_12, x_12, x_10]",(((((x_10*x_10)*x_12)-x_12)*x_12)-x_10),62.806861877441406,0.06558077037334442,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
323,32,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_12, cos, sqrt, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_12)**cos(sqrt(abs(x_12)))))),26.14129066467285,0.12625479698181152,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
324,33,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
325,33,"[*, -, x_10, *, x_10, *, /, x_1, x_0, x_12, x_1]",((x_10-(x_10*((x_1/x_0)*x_12)))*x_1),78.89354705810547,0.06418438255786896,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
326,33,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
327,33,"[-, *, -, *, **, x_10, x_12, x_10, x_12, 1.34, x_10]",(((((x_10**x_12)*x_10)-x_12)*1.34)-x_10),48.77766036987305,0.0668121725320816,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
328,33,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
329,33,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
330,33,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
331,33,"[-, *, -, *, *, x_10, x_10, x_12, x_12, x_12, x_10]",(((((x_10*x_10)*x_12)-x_12)*x_12)-x_10),62.806861877441406,0.06558077037334442,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
332,33,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_12, cos, sqrt, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_12)**cos(sqrt(abs(x_12)))))),26.14129066467285,0.12625479698181152,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
333,33,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
334,33,"[*, /, *, -, x_12, *, x_10, x_12, x_1, 1.34, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",((((x_12-(x_10*x_12))*x_1)/1.34)*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.55838775634766,0.06255249679088593,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
335,33,"[-, x_12, **, x_5, cos, sin, /, x_2, x_7]",(x_12-(x_5**cos(sin((x_2/x_7))))),26.251174926757812,0.09868180751800537,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
336,34,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
337,34,"[*, -, x_10, *, x_10, *, /, x_1, x_0, x_12, x_1]",((x_10-(x_10*((x_1/x_0)*x_12)))*x_1),78.89354705810547,0.06418438255786896,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
338,34,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
339,34,"[-, *, -, *, **, x_10, x_12, x_10, x_12, 1.34, x_10]",(((((x_10**x_12)*x_10)-x_12)*1.34)-x_10),48.77766036987305,0.0668121725320816,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
340,34,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
341,34,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
342,34,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
343,34,"[-, *, -, *, *, x_10, x_10, x_12, x_12, x_12, x_10]",(((((x_10*x_10)*x_12)-x_12)*x_12)-x_10),62.806861877441406,0.06558077037334442,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
344,34,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_12, cos, sqrt, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_12)**cos(sqrt(abs(x_12)))))),26.14129066467285,0.12625479698181152,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
345,34,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
346,34,"[*, /, *, -, x_12, *, x_10, x_12, x_1, 1.34, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",((((x_12-(x_10*x_12))*x_1)/1.34)*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.55838775634766,0.06255249679088593,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
347,34,"[-, x_12, **, x_5, cos, sin, /, x_2, x_7]",(x_12-(x_5**cos(sin((x_2/x_7))))),26.251174926757812,0.09868180751800537,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
348,34,"[-, x_12, **, x_5, cos, sin, x_12]",(x_12-(x_5**cos(sin(x_12)))),27.113218307495117,0.09298592060804367,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
349,34,"[*, x_12, -, 1.34, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.34-(((x_12*x_10)*x_10)-x_12))),50.878841400146484,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
350,34,"[*, -, x_10, *, x_12, *, /, x_1, x_0, x_12, x_0]",((x_10-(x_12*((x_1/x_0)*x_12)))*x_0),66.10192108154297,0.0644311010837555,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
351,35,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
352,35,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
353,35,"[-, *, -, *, **, x_10, x_12, x_10, x_12, 1.34, x_10]",(((((x_10**x_12)*x_10)-x_12)*1.34)-x_10),48.77766036987305,0.0668121725320816,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
354,35,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
355,35,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
356,35,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
357,35,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
358,35,"[-, x_12, **, x_5, cos, sin, /, x_2, x_7]",(x_12-(x_5**cos(sin((x_2/x_7))))),26.251174926757812,0.09868180751800537,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
359,35,"[-, x_12, **, x_5, cos, sin, x_12]",(x_12-(x_5**cos(sin(x_12)))),27.113218307495117,0.09298592060804367,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
360,35,"[*, x_12, -, 1.34, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.34-(((x_12*x_10)*x_10)-x_12))),50.878841400146484,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
361,35,"[-, x_12, **, sqrt, x_5, **, sqrt, x_5, cos, cos, x_10]",(x_12-(sqrt(abs(x_5))**(sqrt(abs(x_5))**cos(cos(x_10))))),25.22967529296875,0.12220349907875061,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
362,35,"[-, x_12, **, sqrt, x_5, cos, *, *, x_3, x_0, **, x_12, x_5]",(x_12-(sqrt(abs(x_5))**cos(((x_3*x_0)*(x_12**x_5))))),26.4862060546875,0.09687669575214386,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
363,35,"[-, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_10, x_12]",((x_12+x_12)-(x_5*((x_12*x_10)*(x_10/x_12)))),30.400861740112305,0.07476946711540222,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
364,35,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
365,35,"[-, x_12, **, x_5, cos, sin, **, x_0, -0.23]",(x_12-(x_5**cos(sin((x_0**-0.23))))),27.535884857177734,0.0879359319806099,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
366,36,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
367,36,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
368,36,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
369,36,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
370,36,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
371,36,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
372,36,"[-, x_12, **, x_5, cos, sin, /, x_2, x_7]",(x_12-(x_5**cos(sin((x_2/x_7))))),26.251174926757812,0.09868180751800537,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
373,36,"[-, x_12, **, x_5, cos, sin, x_12]",(x_12-(x_5**cos(sin(x_12)))),27.113218307495117,0.09298592060804367,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
374,36,"[*, x_12, -, 1.34, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.34-(((x_12*x_10)*x_10)-x_12))),50.878841400146484,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
375,36,"[-, x_12, **, sqrt, x_5, **, sqrt, x_5, cos, cos, x_10]",(x_12-(sqrt(abs(x_5))**(sqrt(abs(x_5))**cos(cos(x_10))))),25.22967529296875,0.12220349907875061,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
376,36,"[-, x_12, **, sqrt, x_5, cos, *, *, x_3, x_0, **, x_12, x_5]",(x_12-(sqrt(abs(x_5))**cos(((x_3*x_0)*(x_12**x_5))))),26.4862060546875,0.09687669575214386,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
377,36,"[-, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_10, x_12]",((x_12+x_12)-(x_5*((x_12*x_10)*(x_10/x_12)))),30.400861740112305,0.07476946711540222,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
378,36,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
379,36,"[-, x_12, **, x_5, cos, sin, **, x_0, -0.23]",(x_12-(x_5**cos(sin((x_0**-0.23))))),27.535884857177734,0.0879359319806099,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
380,36,"[*, *, -, *, *, 0.31, x_12, x_10, x_12, 1.34, 1.34]",(((((0.31*x_12)*x_10)-x_12)*1.34)*1.34),38.85733413696289,0.06670742481946945,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
381,36,"[-, x_12, **, x_5, cos, sin, 1.34]",(x_12-(x_5**cos(sin(1.34)))),26.579219818115234,0.09437428414821625,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
382,36,"[-, x_12, **, sqrt, x_5, cos, *, *, x_3, x_5, **3, x_8]",(x_12-(sqrt(abs(x_5))**cos(((x_3*x_5)*(x_8)**3)))),26.142353057861328,0.10619820654392242,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
383,36,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),67.2184829711914,0.05613597482442856,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
384,37,"[*, -, sqrt, x_5, x_12, 1.34]",((sqrt(abs(x_5))-x_12)*1.34),26.95122528076172,0.09361523389816284,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
385,37,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
386,37,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
387,37,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
388,37,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
389,37,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
390,37,"[-, x_12, **, x_5, cos, sin, /, x_2, x_7]",(x_12-(x_5**cos(sin((x_2/x_7))))),26.251174926757812,0.09868180751800537,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
391,37,"[-, x_12, **, x_5, cos, sin, x_12]",(x_12-(x_5**cos(sin(x_12)))),27.113218307495117,0.09298592060804367,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
392,37,"[*, x_12, -, 1.34, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.34-(((x_12*x_10)*x_10)-x_12))),50.878841400146484,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
393,37,"[-, x_12, **, sqrt, x_5, cos, *, *, x_3, x_0, **, x_12, x_5]",(x_12-(sqrt(abs(x_5))**cos(((x_3*x_0)*(x_12**x_5))))),26.4862060546875,0.09687669575214386,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
394,37,"[-, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_10, x_12]",((x_12+x_12)-(x_5*((x_12*x_10)*(x_10/x_12)))),30.400861740112305,0.07476946711540222,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
395,37,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
396,37,"[-, x_12, **, x_5, cos, sin, **, x_0, -0.23]",(x_12-(x_5**cos(sin((x_0**-0.23))))),27.535884857177734,0.0879359319806099,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
397,37,"[*, *, -, *, *, 0.31, x_12, x_10, x_12, 1.34, 1.34]",(((((0.31*x_12)*x_10)-x_12)*1.34)*1.34),38.85733413696289,0.06670742481946945,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
398,37,"[-, x_12, **, x_5, cos, sin, 1.34]",(x_12-(x_5**cos(sin(1.34)))),26.579219818115234,0.09437428414821625,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
399,37,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),67.2184829711914,0.05613597482442856,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
400,37,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, u-, x_2]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(-(x_2))))),24.643774032592773,0.12411587685346603,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
401,37,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_9, x_8, x_10, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_9*x_8)*x_10)-x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),87.86016845703125,0.05549676716327667,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
402,37,"[-, x_12, **, x_5, cos, x_12]",(x_12-(x_5**cos(x_12))),28.47986602783203,0.08781884610652924,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
403,37,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_12, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_12)**cos(-(x_12))))),24.898216247558594,0.12099094688892365,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
404,37,"[-, x_12, **, x_5, cos, sin, sin, x_8]",(x_12-(x_5**cos(sin(sin(x_8))))),25.089862823486328,0.10324916243553162,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
405,38,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
406,38,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
407,38,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
408,38,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
409,38,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
410,38,"[-, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_10, x_12]",((x_12+x_12)-(x_5*((x_12*x_10)*(x_10/x_12)))),30.400861740112305,0.07476946711540222,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
411,38,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
412,38,"[*, *, -, *, *, 0.31, x_12, x_10, x_12, 1.34, 1.34]",(((((0.31*x_12)*x_10)-x_12)*1.34)*1.34),38.85733413696289,0.06670742481946945,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
413,38,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),67.2184829711914,0.05613597482442856,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
414,38,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, u-, x_2]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(-(x_2))))),24.643774032592773,0.12411587685346603,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
415,38,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_9, x_8, x_10, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_9*x_8)*x_10)-x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),87.86016845703125,0.05549676716327667,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
416,38,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_12, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_12)**cos(-(x_12))))),24.898216247558594,0.12099094688892365,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
417,38,"[-, x_12, **, x_5, cos, sin, sin, x_8]",(x_12-(x_5**cos(sin(sin(x_8))))),25.089862823486328,0.10324916243553162,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
418,38,"[*, -, -, *, cos, x_11, x_5, x_10, x_12, 1.34]",((((cos(x_11)*x_5)-x_10)-x_12)*1.34),28.68352699279785,0.0835711732506752,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
419,38,"[-, x_12, **, x_5, cos, /, /, x_7, -2.83, exp, x_5]",(x_12-(x_5**cos(((x_7/-2.83)/exp(x_5))))),26.1131534576416,0.10050321370363235,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
420,38,"[-, x_12, **, x_5, cos, sin, **, x_0, x_12]",(x_12-(x_5**cos(sin((x_0**x_12))))),26.141141891479492,0.08646749705076218,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
421,38,"[*, x_12, -, 1.37, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.37-(((x_12*x_10)*x_10)-x_12))),50.633304595947266,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
422,39,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
423,39,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
424,39,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
425,39,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
426,39,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
427,39,"[-, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_10, x_12]",((x_12+x_12)-(x_5*((x_12*x_10)*(x_10/x_12)))),30.400861740112305,0.07476946711540222,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
428,39,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
429,39,"[*, *, -, *, *, 0.31, x_12, x_10, x_12, 1.34, 1.34]",(((((0.31*x_12)*x_10)-x_12)*1.34)*1.34),38.85733413696289,0.06670742481946945,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
430,39,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),67.2184829711914,0.05613597482442856,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
431,39,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_9, x_8, x_10, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_9*x_8)*x_10)-x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),87.86016845703125,0.05549676716327667,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
432,39,"[-, x_12, **, x_5, cos, sin, sin, x_8]",(x_12-(x_5**cos(sin(sin(x_8))))),25.089862823486328,0.10324916243553162,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
433,39,"[*, -, -, *, cos, x_11, x_5, x_10, x_12, 1.34]",((((cos(x_11)*x_5)-x_10)-x_12)*1.34),28.68352699279785,0.0835711732506752,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
434,39,"[-, x_12, **, x_5, cos, /, /, x_7, -2.83, exp, x_5]",(x_12-(x_5**cos(((x_7/-2.83)/exp(x_5))))),26.1131534576416,0.10050321370363235,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
435,39,"[-, x_12, **, x_5, cos, sin, **, x_0, x_12]",(x_12-(x_5**cos(sin((x_0**x_12))))),26.141141891479492,0.08646749705076218,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
436,39,"[*, x_12, -, 1.37, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.37-(((x_12*x_10)*x_10)-x_12))),50.633304595947266,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
437,39,"[*, /, -, *, *, x_1, x_10, x_10, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",(((((x_1*x_10)*x_10)-x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.77600860595703,0.05586041510105133,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
438,39,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
439,40,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, x_5, 1.34]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5*1.34)),28.80973243713379,0.07497859746217728,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
440,40,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
441,40,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
442,40,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
443,40,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
444,40,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
445,40,"[*, *, -, *, *, 0.31, x_12, x_10, x_12, 1.34, 1.34]",(((((0.31*x_12)*x_10)-x_12)*1.34)*1.34),38.85733413696289,0.06670742481946945,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
446,40,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),67.2184829711914,0.05613597482442856,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
447,40,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_9, x_8, x_10, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_9*x_8)*x_10)-x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),87.86016845703125,0.05549676716327667,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
448,40,"[-, x_12, **, x_5, cos, sin, sin, x_8]",(x_12-(x_5**cos(sin(sin(x_8))))),25.089862823486328,0.10324916243553162,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
449,40,"[-, x_12, **, x_5, cos, sin, **, x_0, x_12]",(x_12-(x_5**cos(sin((x_0**x_12))))),26.141141891479492,0.08646749705076218,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
450,40,"[*, x_12, -, 1.37, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.37-(((x_12*x_10)*x_10)-x_12))),50.633304595947266,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
451,40,"[*, /, -, *, *, x_1, x_10, x_10, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, x_12]",(((((x_1*x_10)*x_10)-x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*(1.34-(((x_12*x_10)*(x_12/x_12))-x_12))),87.77600860595703,0.05586041510105133,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
452,40,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
453,40,"[-, x_12, **, x_5, cos, sin, **, x_11, x_10]",(x_12-(x_5**cos(sin((x_11**x_10))))),25.606931686401367,0.08880646526813507,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
454,40,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, -, 1.34, -, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34-(x_12-x_12))),30.400861740112305,0.07451923191547394,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
455,40,"[-, -, -, x_5, x_12, x_12, x_10]",(((x_5-x_12)-x_12)-x_10),28.021913528442383,0.07874637097120285,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
456,40,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_10]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_10))),41.89823913574219,0.06642736494541168,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
457,41,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
458,41,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
459,41,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
460,41,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
461,41,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
462,41,"[*, *, -, *, *, 0.31, x_12, x_10, x_12, 1.34, 1.34]",(((((0.31*x_12)*x_10)-x_12)*1.34)*1.34),38.85733413696289,0.06670742481946945,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
463,41,"[-, x_12, **, x_5, cos, sin, **, x_0, x_12]",(x_12-(x_5**cos(sin((x_0**x_12))))),26.141141891479492,0.08646749705076218,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
464,41,"[*, x_12, -, 1.37, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.37-(((x_12*x_10)*x_10)-x_12))),50.633304595947266,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
465,41,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
466,41,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_10]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_10))),41.89823913574219,0.06642736494541168,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
467,41,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_9, x_8, x_10, x_12, *, *, *, x_12, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_9*x_8)*x_10)-x_12))*(((x_12*x_10)*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),84.24190521240234,0.053956493735313416,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
468,41,"[-, x_12, **, x_5, cos, sin, /, x_12, x_1]",(x_12-(x_5**cos(sin((x_12/x_1))))),24.58085060119629,0.0882943719625473,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
469,41,"[*, -, -, *, *, -0.87, x_10, x_5, x_10, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_10)-x_12)*1.34),27.16884422302246,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
470,41,"[*, -, *, **, /, x_12, x_12, x_1, *, *, x_10, x_10, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*((x_10*x_10)*(x_12/x_12)))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),62.14418029785156,0.05530316010117531,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
471,42,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
472,42,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
473,42,"[*, -, -, *, *, 1.34, x_10, x_12, x_10, x_12, 1.34]",(((((1.34*x_10)*x_12)-x_10)-x_12)*1.34),37.3075065612793,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
474,42,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
475,42,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
476,42,"[*, *, -, *, *, 0.31, x_12, x_10, x_12, 1.34, 1.34]",(((((0.31*x_12)*x_10)-x_12)*1.34)*1.34),38.85733413696289,0.06670742481946945,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
477,42,"[-, x_12, **, x_5, cos, sin, **, x_0, x_12]",(x_12-(x_5**cos(sin((x_0**x_12))))),26.141141891479492,0.08646749705076218,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
478,42,"[*, x_12, -, 1.37, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.37-(((x_12*x_10)*x_10)-x_12))),50.633304595947266,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
479,42,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
480,42,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_10]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_10))),41.89823913574219,0.06642736494541168,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
481,42,"[-, x_12, **, x_5, cos, sin, /, x_12, x_1]",(x_12-(x_5**cos(sin((x_12/x_1))))),24.58085060119629,0.0882943719625473,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
482,42,"[*, -, *, **, /, x_12, x_12, x_1, *, *, x_10, x_10, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*((x_10*x_10)*(x_12/x_12)))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),62.14418029785156,0.05530316010117531,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
483,42,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
484,42,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_10, x_12, *, *, x_10, /, x_12, x_12, *, *, x_12, x_10, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(x_5*((x_12*x_10)*(x_10/x_12))))*((x_10*(x_12/x_12))*((x_12*x_10)*x_12))),78.75709533691406,0.052501145750284195,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
485,43,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
486,43,"[-, *, -, *, *, x_10, x_10, x_10, x_12, x_12, x_10]",(((((x_10*x_10)*x_10)-x_12)*x_12)-x_10),51.82767105102539,0.06598162651062012,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
487,43,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
488,43,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
489,43,"[*, *, -, *, *, 0.31, x_12, x_10, x_12, 1.34, 1.34]",(((((0.31*x_12)*x_10)-x_12)*1.34)*1.34),38.85733413696289,0.06670742481946945,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
490,43,"[-, x_12, **, x_5, cos, sin, **, x_0, x_12]",(x_12-(x_5**cos(sin((x_0**x_12))))),26.141141891479492,0.08646749705076218,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
491,43,"[*, x_12, -, 1.37, -, *, *, x_12, x_10, x_10, x_12]",(x_12*(1.37-(((x_12*x_10)*x_10)-x_12))),50.633304595947266,0.06633438915014267,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
492,43,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
493,43,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_10]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_10))),41.89823913574219,0.06642736494541168,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
494,43,"[-, x_12, **, x_5, cos, sin, /, x_12, x_1]",(x_12-(x_5**cos(sin((x_12/x_1))))),24.58085060119629,0.0882943719625473,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
495,43,"[*, -, *, **, /, x_12, x_12, x_1, *, *, x_10, x_10, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*((x_10*x_10)*(x_12/x_12)))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),62.14418029785156,0.05530316010117531,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
496,43,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
497,43,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, 1.34, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, *, *, x_10, *, sin, x_5, **3, x_10, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/1.34))-((x_12*x_10)*((1.02-x_12)/x_12)))*((x_10*(sin(x_5)*(x_10)**3))*((x_12*x_10)*((1.02-x_12)/x_12)))),78.02393341064453,0.051443204283714294,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
498,43,"[*, -, -, *, *, 1.02, x_10, x_10, x_12, x_12, 1.34]",(((((1.02*x_10)*x_10)-x_12)-x_12)*1.34),33.398406982421875,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
499,43,"[*, /, -, *, *, x_1, x_10, x_10, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, /, *, -, x_12, *, x_10, x_12, x_1, *, *, x_12, x_10, x_12]",(((((x_1*x_10)*x_10)-x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*(((x_12-(x_10*x_12))*x_1)/((x_12*x_10)*x_12))),87.70661926269531,0.0511295385658741,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
500,43,"[*, -, -, *, *, 2.54, x_10, x_10, x_12, *, **, /, x_12, x_12, x_1, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((2.54*x_10)*x_10)-x_12)-(((x_12/x_12)**x_1)*x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),65.46800231933594,0.05225158855319023,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
501,43,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
502,44,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
503,44,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
504,44,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),53.77265930175781,0.06120474264025688,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
505,44,"[*, *, -, *, *, 0.31, x_12, x_10, x_12, 1.34, 1.34]",(((((0.31*x_12)*x_10)-x_12)*1.34)*1.34),38.85733413696289,0.06670742481946945,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
506,44,"[-, x_12, **, x_5, cos, sin, **, x_0, x_12]",(x_12-(x_5**cos(sin((x_0**x_12))))),26.141141891479492,0.08646749705076218,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
507,44,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
508,44,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_10]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_10))),41.89823913574219,0.06642736494541168,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
509,44,"[-, x_12, **, x_5, cos, sin, /, x_12, x_1]",(x_12-(x_5**cos(sin((x_12/x_1))))),24.58085060119629,0.0882943719625473,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
510,44,"[*, -, *, **, /, x_12, x_12, x_1, *, *, x_10, x_10, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*((x_10*x_10)*(x_12/x_12)))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),62.14418029785156,0.05530316010117531,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
511,44,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
512,44,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, 1.34, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, *, *, x_10, *, sin, x_5, **3, x_10, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/1.34))-((x_12*x_10)*((1.02-x_12)/x_12)))*((x_10*(sin(x_5)*(x_10)**3))*((x_12*x_10)*((1.02-x_12)/x_12)))),78.02393341064453,0.051443204283714294,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
513,44,"[*, -, -, *, *, 1.02, x_10, x_10, x_12, x_12, 1.34]",(((((1.02*x_10)*x_10)-x_12)-x_12)*1.34),33.398406982421875,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
514,44,"[*, -, -, *, *, 2.54, x_10, x_10, x_12, *, **, /, x_12, x_12, x_1, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((2.54*x_10)*x_10)-x_12)-(((x_12/x_12)**x_1)*x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),65.46800231933594,0.05225158855319023,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
515,44,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
516,44,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, x_12]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/x_12)))),46.39778518676758,0.0654347687959671,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
517,44,"[*, /, *, -, x_12, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, x_10, x_12]",((((x_12-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-(x_10*x_12)))),86.47875213623047,0.05023493617773056,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
518,45,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
519,45,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
520,45,"[-, x_12, **, x_5, cos, sin, **, x_0, x_12]",(x_12-(x_5**cos(sin((x_0**x_12))))),26.141141891479492,0.08646749705076218,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
521,45,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
522,45,"[-, x_12, **, x_5, cos, sin, /, x_12, x_1]",(x_12-(x_5**cos(sin((x_12/x_1))))),24.58085060119629,0.0882943719625473,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
523,45,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
524,45,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, 1.34, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, *, *, x_10, *, sin, x_5, **3, x_10, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/1.34))-((x_12*x_10)*((1.02-x_12)/x_12)))*((x_10*(sin(x_5)*(x_10)**3))*((x_12*x_10)*((1.02-x_12)/x_12)))),78.02393341064453,0.051443204283714294,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
525,45,"[*, -, -, *, *, 1.02, x_10, x_10, x_12, x_12, 1.34]",(((((1.02*x_10)*x_10)-x_12)-x_12)*1.34),33.398406982421875,0.06711778789758682,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
526,45,"[*, -, -, *, *, 2.54, x_10, x_10, x_12, *, **, /, x_12, x_12, x_1, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((2.54*x_10)*x_10)-x_12)-(((x_12/x_12)**x_1)*x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),65.46800231933594,0.05225158855319023,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
527,45,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
528,45,"[*, -, *, **, /, x_12, x_12, x_1, *, x_10, x_12, x_10, *, 1.34, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_10*x_12))-x_10)*(1.34*((x_12*x_10)*((1.02-x_12)/x_12)))),57.69890594482422,0.059657592326402664,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
529,45,"[*, -, *, **, /, x_12, x_12, x_12, *, *, x_10, x_10, /, x_12, x_12, x_10, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_12)*((x_10*x_10)*(x_12/x_12)))-x_10)*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),62.14418029785156,0.0537896528840065,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
530,45,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, 1.34, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/1.34))-((x_12*x_10)*((1.02-x_12)/x_12)))*((((x_1*x_10)*x_12)-x_12)-x_12)),57.844512939453125,0.058005791157484055,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
531,45,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, /, x_12, 1.34, *, x_5, *, *, x_12, x_10, /, x_10, x_12, *, *, x_10, /, x_12, x_12, *, *, x_12, x_10, x_12]",(((((x_12/x_12)**x_1)*(x_12/(x_12/1.34)))-(x_5*((x_12*x_10)*(x_10/x_12))))*((x_10*(x_12/x_12))*((x_12*x_10)*x_12))),79.9344253540039,0.049983441829681396,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
532,45,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
533,46,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
534,46,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
535,46,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
536,46,"[-, x_12, **, x_5, cos, sin, /, x_12, x_1]",(x_12-(x_5**cos(sin((x_12/x_1))))),24.58085060119629,0.0882943719625473,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
537,46,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
538,46,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, 1.34, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, *, *, x_10, *, sin, x_5, **3, x_10, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/1.34))-((x_12*x_10)*((1.02-x_12)/x_12)))*((x_10*(sin(x_5)*(x_10)**3))*((x_12*x_10)*((1.02-x_12)/x_12)))),78.02393341064453,0.051443204283714294,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
539,46,"[*, -, -, *, *, 2.54, x_10, x_10, x_12, *, **, /, x_12, x_12, x_1, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((2.54*x_10)*x_10)-x_12)-(((x_12/x_12)**x_1)*x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),65.46800231933594,0.05225158855319023,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
540,46,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
541,46,"[*, -, *, **, /, x_12, x_12, x_1, *, x_10, x_12, x_10, *, 1.34, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_10*x_12))-x_10)*(1.34*((x_12*x_10)*((1.02-x_12)/x_12)))),57.69890594482422,0.059657592326402664,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
542,46,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, 1.34, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/1.34))-((x_12*x_10)*((1.02-x_12)/x_12)))*((((x_1*x_10)*x_12)-x_12)-x_12)),57.844512939453125,0.058005791157484055,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
543,46,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
544,46,"[*, -, *, **, /, x_12, x_12, x_1, x_10, -, *, *, x_0, x_8, x_10, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*x_10)-(((x_0*x_8)*x_10)-x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),59.87854766845703,0.05615757033228874,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
545,46,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
546,46,"[*, /, *, -, x_12, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),84.94005584716797,0.04775547236204147,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
547,46,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_10, x_12, *, *, x_10, /, x_12, x_12, *, *, x_12, x_10, *, x_12, x_10]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(x_5*((x_12*x_10)*(x_10/x_12))))*((x_10*(x_12/x_12))*((x_12*x_10)*(x_12*x_10)))),78.78543090820312,0.04992252588272095,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
548,46,"[-, x_12, **, x_5, cos, sin, **, x_10, -0.23]",(x_12-(x_5**cos(sin((x_10**-0.23))))),25.472166061401367,0.08793418109416962,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
549,46,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, -, -, *, *, x_5, x_10, x_12, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*((((x_5*x_10)*x_12)-x_12)-x_12)),32.62888717651367,0.06520693004131317,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
550,46,"[*, -, *, **, /, x_12, x_12, x_12, *, *, x_10, x_10, /, x_12, x_12, /, x_12, 1.34, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_12)*((x_10*x_10)*(x_12/x_12)))-(x_12/1.34))*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),61.017147064208984,0.05312948301434517,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
551,47,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
552,47,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
553,47,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
554,47,"[-, x_12, **, x_5, cos, sin, /, x_12, x_1]",(x_12-(x_5**cos(sin((x_12/x_1))))),24.58085060119629,0.0882943719625473,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
555,47,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
556,47,"[*, -, -, *, *, 2.54, x_10, x_10, x_12, *, **, /, x_12, x_12, x_1, x_12, *, *, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((2.54*x_10)*x_10)-x_12)-(((x_12/x_12)**x_1)*x_12))*((x_10*x_12)*((x_12*x_10)*((1.02-x_12)/x_12)))),65.46800231933594,0.05225158855319023,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
557,47,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
558,47,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
559,47,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
560,47,"[-, x_12, **, x_5, cos, sin, **, x_10, -0.23]",(x_12-(x_5**cos(sin((x_10**-0.23))))),25.472166061401367,0.08793418109416962,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
561,47,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, -, -, *, *, x_5, x_10, x_12, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*((((x_5*x_10)*x_12)-x_12)-x_12)),32.62888717651367,0.06520693004131317,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
562,47,"[*, -, *, **, /, x_12, x_12, x_12, *, *, x_10, x_10, /, x_12, x_12, /, x_12, 1.34, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_12)*((x_10*x_10)*(x_12/x_12)))-(x_12/1.34))*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),61.017147064208984,0.05312948301434517,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
563,47,"[*, -, *, **, /, x_12, x_12, x_1, *, *, -0.87, x_10, x_5, *, x_5, *, *, x_12, x_10, /, x_10, x_12, *, *, x_10, /, x_12, x_12, *, *, x_12, x_10, *, x_12, x_10]",(((((x_12/x_12)**x_1)*((-0.87*x_10)*x_5))-(x_5*((x_12*x_10)*(x_10/x_12))))*((x_10*(x_12/x_12))*((x_12*x_10)*(x_12*x_10)))),74.34182739257812,0.05042121186852455,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
564,47,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
565,47,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),76.89554595947266,0.04435697942972183,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
566,48,"[*, -, -, *, *, x_5, x_10, x_12, x_12, x_12, 1.34]",(((((x_5*x_10)*x_12)-x_12)-x_12)*1.34),30.77576446533203,0.06979639083147049,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
567,48,"[*, -, -, *, *, x_12, x_10, /, x_12, x_12, x_12, x_12, -, -4.81, *, x_10, x_12]",(((((x_12*x_10)*(x_12/x_12))-x_12)-x_12)*(-4.81-(x_10*x_12))),32.03841781616211,0.06713446229696274,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
568,48,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
569,48,"[-, x_12, **, x_5, cos, sin, /, x_12, x_1]",(x_12-(x_5**cos(sin((x_12/x_1))))),24.58085060119629,0.0882943719625473,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
570,48,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
571,48,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
572,48,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
573,48,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
574,48,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, x_10, -, -, *, *, x_5, x_10, x_12, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_12/x_12))-x_10)*((((x_5*x_10)*x_12)-x_12)-x_12)),32.62888717651367,0.06520693004131317,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
575,48,"[*, -, *, **, /, x_12, x_12, x_12, *, *, x_10, x_10, /, x_12, x_12, /, x_12, 1.34, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_12)*((x_10*x_10)*(x_12/x_12)))-(x_12/1.34))*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),61.017147064208984,0.05312948301434517,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
576,48,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
577,48,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),76.89554595947266,0.04435697942972183,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
578,48,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, x_5, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-(x_5*x_5)))),72.12052917480469,0.04828057438135147,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
579,48,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
580,48,"[*, -, *, **, /, 1.34, x_12, x_12, *, *, x_10, x_10, /, x_12, x_12, /, x_12, 1.34, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((1.34/x_12)**x_12)*((x_10*x_10)*(x_12/x_12)))-(x_12/1.34))*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),59.41273880004883,0.05317339301109314,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
581,48,"[-, x_12, **, x_5, cos, sin, **, x_0, x_10]",(x_12-(x_5**cos(sin((x_0**x_10))))),24.86199951171875,0.08625850826501846,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
582,48,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, /, x_12, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos((x_12/x_12))))),24.438251495361328,0.11035194993019104,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
583,48,"[*, -, *, **, /, x_12, x_12, x_1, *, x_10, x_12, x_10, *, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5, *, x_12, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*(x_10*x_12))-x_10)*((((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5))*(x_12*((1.02-x_12)/x_12)))),64.54814910888672,0.050141699612140656,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
584,49,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, cos, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**cos(x_12)))),23.664125442504883,0.1134990006685257,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
585,49,"[-, x_12, **, x_5, cos, sin, /, x_12, x_1]",(x_12-(x_5**cos(sin((x_12/x_1))))),24.58085060119629,0.0882943719625473,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
586,49,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
587,49,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
588,49,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
589,49,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
590,49,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
591,49,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),76.89554595947266,0.04435697942972183,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
592,49,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
593,49,"[*, -, *, **, /, 1.34, x_12, x_12, *, *, x_10, x_10, /, x_12, x_12, /, x_12, 1.34, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((1.34/x_12)**x_12)*((x_10*x_10)*(x_12/x_12)))-(x_12/1.34))*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),59.41273880004883,0.05317339301109314,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
594,49,"[-, x_12, **, x_5, cos, sin, **, x_0, x_10]",(x_12-(x_5**cos(sin((x_0**x_10))))),24.86199951171875,0.08625850826501846,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
595,49,"[-, x_12, **, x_5, cos, sin, **, x_9, x_5]",(x_12-(x_5**cos(sin((x_9**x_5))))),23.787168502807617,0.09589602053165436,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
596,49,"[*, -, sqrt, x_5, x_12, cos, **, cos, x_10, *, *, x_12, x_10, *, x_12, x_10]",((sqrt(abs(x_5))-x_12)*cos((cos(x_10)**((x_12*x_10)*(x_12*x_10))))),24.42151641845703,0.09327132999897003,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
597,49,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
598,49,"[-, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(x_12-((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),29.32662582397461,0.06415402889251709,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
599,49,"[-, *, *, x_10, /, x_12, x_12, *, x_10, x_12, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_12, x_10]",(((x_10*(x_12/x_12))*(x_10*x_12))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_12*x_10))))),60.11777877807617,0.048578571528196335,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
600,49,"[*, -, -, *, *, 2.54, x_10, x_10, x_12, *, **, /, x_12, x_12, x_1, x_12, *, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((2.54*x_10)*x_10)-x_12)-(((x_12/x_12)**x_1)*x_12))*((((x_12*x_8)*x_10)-((x_12*x_10)*x_12))*((x_12*x_10)*((1.02-x_12)/x_12)))),67.87774658203125,0.04626988619565964,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
601,50,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
602,50,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
603,50,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
604,50,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
605,50,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
606,50,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),76.89554595947266,0.04435697942972183,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
607,50,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
608,50,"[*, -, *, **, /, 1.34, x_12, x_12, *, *, x_10, x_10, /, x_12, x_12, /, x_12, 1.34, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((1.34/x_12)**x_12)*((x_10*x_10)*(x_12/x_12)))-(x_12/1.34))*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),59.41273880004883,0.05317339301109314,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
609,50,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
610,50,"[-, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(x_12-((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),29.32662582397461,0.06415402889251709,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
611,50,"[-, *, *, x_10, /, x_12, x_12, *, x_10, x_12, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_12, x_10]",(((x_10*(x_12/x_12))*(x_10*x_12))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_12*x_10))))),60.11777877807617,0.048578571528196335,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
612,50,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, x_5, *, x_5, *, sqrt, x_8, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5-(x_5*(sqrt(abs(x_8))*(x_12/x_12))))),23.285552978515625,0.08521361649036407,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
613,50,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
614,50,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),67.36617279052734,0.045504435896873474,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
615,51,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
616,51,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
617,51,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
618,51,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
619,51,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
620,51,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),76.89554595947266,0.04435697942972183,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
621,51,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
622,51,"[*, -, *, **, /, 1.34, x_12, x_12, *, *, x_10, x_10, /, x_12, x_12, /, x_12, 1.34, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((1.34/x_12)**x_12)*((x_10*x_10)*(x_12/x_12)))-(x_12/1.34))*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),59.41273880004883,0.05317339301109314,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
623,51,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
624,51,"[-, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(x_12-((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),29.32662582397461,0.06415402889251709,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
625,51,"[-, *, *, x_10, /, x_12, x_12, *, x_10, x_12, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_12, x_10]",(((x_10*(x_12/x_12))*(x_10*x_12))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_12*x_10))))),60.11777877807617,0.048578571528196335,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
626,51,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, x_5, *, x_5, *, sqrt, x_8, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5-(x_5*(sqrt(abs(x_8))*(x_12/x_12))))),23.285552978515625,0.08521361649036407,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
627,51,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
628,51,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),67.36617279052734,0.045504435896873474,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
629,51,"[-, *, -, *, sin, x_1, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",((((sin(x_1)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.2718505859375,0.06101404130458832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
630,52,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
631,52,"[*, -, sqrt, x_5, x_12, cos, **, cos, *, x_12, x_10, cos, u-, x_12]",((sqrt(abs(x_5))-x_12)*cos((cos((x_12*x_10))**cos(-(x_12))))),23.021926879882812,0.11457426846027374,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
632,52,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
633,52,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
634,52,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
635,52,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),76.89554595947266,0.04435697942972183,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
636,52,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
637,52,"[*, -, *, **, /, 1.34, x_12, x_12, *, *, x_10, x_10, /, x_12, x_12, /, x_12, 1.34, *, x_5, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((1.34/x_12)**x_12)*((x_10*x_10)*(x_12/x_12)))-(x_12/1.34))*(x_5*((x_12*x_10)*((1.02-x_12)/x_12)))),59.41273880004883,0.05317339301109314,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
638,52,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
639,52,"[-, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(x_12-((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),29.32662582397461,0.06415402889251709,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
640,52,"[-, *, *, x_10, /, x_12, x_12, *, x_10, x_12, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_12, x_10]",(((x_10*(x_12/x_12))*(x_10*x_12))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_12*x_10))))),60.11777877807617,0.048578571528196335,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
641,52,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, x_5, *, x_5, *, sqrt, x_8, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5-(x_5*(sqrt(abs(x_8))*(x_12/x_12))))),23.285552978515625,0.08521361649036407,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
642,52,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
643,52,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),67.36617279052734,0.045504435896873474,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
644,52,"[-, *, -, *, sin, x_1, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",((((sin(x_1)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.2718505859375,0.06101404130458832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
645,52,"[*, /, *, *, *, 1.02, x_10, x_10, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_12]",(((((1.02*x_10)*x_10)*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_12)))),87.85795593261719,0.04305030405521393,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
646,52,"[*, -, *, **, /, x_12, x_12, x_1, x_10, -, *, *, x_0, x_8, x_10, x_12, *, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)*x_10)-(((x_0*x_8)*x_10)-x_12))*(((x_12*x_10)*((1.02-x_12)/x_12))*((x_12*x_10)*((1.02-x_12)/x_12)))),60.05902862548828,0.05054464191198349,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
647,52,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, -, -, *, *, x_1, x_9, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))*((((x_1*x_9)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),62.81124496459961,0.04744333028793335,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
648,53,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
649,53,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
650,53,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
651,53,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
652,53,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),76.89554595947266,0.04435697942972183,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
653,53,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
654,53,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
655,53,"[-, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(x_12-((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),29.32662582397461,0.06415402889251709,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
656,53,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, x_5, *, x_5, *, sqrt, x_8, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5-(x_5*(sqrt(abs(x_8))*(x_12/x_12))))),23.285552978515625,0.08521361649036407,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
657,53,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
658,53,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),67.36617279052734,0.045504435896873474,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
659,53,"[-, *, -, *, sin, x_1, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",((((sin(x_1)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.2718505859375,0.06101404130458832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
660,53,"[*, /, *, *, *, 1.02, x_10, x_10, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_12]",(((((1.02*x_10)*x_10)*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_12)))),87.85795593261719,0.04305030405521393,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
661,53,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, -, -, *, *, x_1, x_9, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))*((((x_1*x_9)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),62.81124496459961,0.04744333028793335,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
662,53,"[-, -, -, x_5, x_12, -, x_12, **, x_5, cos, x_3, x_10]",(((x_5-x_12)-(x_12-(x_5**cos(x_3))))-x_10),21.218299865722656,0.09710783511400223,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
663,53,"[-, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, x_5, x_5, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-(x_5*x_5)))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),50.907623291015625,0.04792097210884094,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
664,54,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
665,54,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
666,54,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
667,54,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
668,54,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
669,54,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
670,54,"[-, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(x_12-((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),29.32662582397461,0.06415402889251709,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
671,54,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, x_5, *, x_5, *, sqrt, x_8, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5-(x_5*(sqrt(abs(x_8))*(x_12/x_12))))),23.285552978515625,0.08521361649036407,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
672,54,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
673,54,"[-, *, -, *, sin, x_1, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",((((sin(x_1)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.2718505859375,0.06101404130458832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
674,54,"[*, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, -, -, *, *, x_1, x_9, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))*((((x_1*x_9)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),62.81124496459961,0.04744333028793335,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
675,54,"[-, -, -, x_5, x_12, -, x_12, **, x_5, cos, x_3, x_10]",(((x_5-x_12)-(x_12-(x_5**cos(x_3))))-x_10),21.218299865722656,0.09710783511400223,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
676,54,"[-, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, x_5, x_5, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-(x_5*x_5)))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),50.907623291015625,0.04792097210884094,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
677,54,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, *, *, x_12, x_10, *, x_12, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12*x_10)*(x_12*x_10))*((1.02-x_12)/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),38.610862731933594,0.05416549742221832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
678,54,"[-, *, -, *, *, x_8, x_12, *, x_1, x_10, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*(x_1*x_10))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.46134948730469,0.05493506044149399,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
679,54,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, *, *, x_10, x_12, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(((x_10*x_12)*x_10)-((x_12*x_10)*(x_1*x_10))))),44.55710983276367,0.05403067171573639,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
680,54,"[*, /, *, *, *, 1.02, x_10, x_10, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_12]",(((((1.02*x_10)*x_10)*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_12)))),87.66075897216797,0.03957747668027878,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
681,54,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, x_12, x_10, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*x_12)-x_10)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),66.85530853271484,0.04491685330867767,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
682,54,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, *, **, /, x_12, x_3, x_12, /, x_12, x_12, -, *, *, *, x_12, -2.73, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12/x_3)**x_12)*(x_12/x_12)))*((((x_12*-2.73)*x_10)*((1.02-x_12)/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),72.4713363647461,0.04080785810947418,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
683,54,"[-, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),68.81118774414062,0.041394732892513275,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
684,55,"[*, -, -, *, *, -0.87, x_10, x_5, x_12, x_12, 1.34]",(((((-0.87*x_10)*x_5)-x_12)-x_12)*1.34),26.681154251098633,0.07055535912513733,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
685,55,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
686,55,"[-, *, -, *, *, -0.87, x_10, x_5, x_12, 1.34, x_10]",(((((-0.87*x_10)*x_5)-x_12)*1.34)-x_10),25.877811431884766,0.07075470685958862,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
687,55,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
688,55,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
689,55,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
690,55,"[-, x_12, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(x_12-((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),29.32662582397461,0.06415402889251709,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
691,55,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, x_5, *, x_5, *, sqrt, x_8, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5-(x_5*(sqrt(abs(x_8))*(x_12/x_12))))),23.285552978515625,0.08521361649036407,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
692,55,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
693,55,"[-, *, -, *, sin, x_1, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",((((sin(x_1)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.2718505859375,0.06101404130458832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
694,55,"[-, -, -, x_5, x_12, -, x_12, **, x_5, cos, x_3, x_10]",(((x_5-x_12)-(x_12-(x_5**cos(x_3))))-x_10),21.218299865722656,0.09710783511400223,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
695,55,"[-, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, x_5, x_5, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-(x_5*x_5)))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),50.907623291015625,0.04792097210884094,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
696,55,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, *, *, x_12, x_10, *, x_12, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12*x_10)*(x_12*x_10))*((1.02-x_12)/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),38.610862731933594,0.05416549742221832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
697,55,"[-, *, -, *, *, x_8, x_12, *, x_1, x_10, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*(x_1*x_10))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.46134948730469,0.05493506044149399,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
698,55,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, *, *, x_10, x_12, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(((x_10*x_12)*x_10)-((x_12*x_10)*(x_1*x_10))))),44.55710983276367,0.05403067171573639,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
699,55,"[*, /, *, *, *, 1.02, x_10, x_10, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_12]",(((((1.02*x_10)*x_10)*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_12)))),87.66075897216797,0.03957747668027878,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
700,55,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, *, **, /, x_12, x_3, x_12, /, x_12, x_12, -, *, *, *, x_12, -2.73, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12/x_3)**x_12)*(x_12/x_12)))*((((x_12*-2.73)*x_10)*((1.02-x_12)/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),72.4713363647461,0.04080785810947418,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
701,55,"[-, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),68.81118774414062,0.041394732892513275,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
702,55,"[-, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, *, *, x_12, x_7, x_10, *, *, x_12, x_10, *, x_1, x_10]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(((x_12*x_7)*x_10)-((x_12*x_10)*(x_1*x_10))))),66.16799926757812,0.043600499629974365,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
703,55,"[*, /, *, -, x_12, *, x_10, x_12, **, 1.34, x_10, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, -, *, x_12, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34**x_10))/(((x_12/x_12)**x_1)*(x_12/x_12)))*(((x_12*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),62.44834518432617,0.04579949378967285,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
704,55,"[-, -, **, /, x_12, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, -, *, *, -0.87, x_10, x_5, sin, **, x_6, x_3, -, cos, sqrt, x_5, *, -, x_5, x_12, 1.34]",((((x_12/x_12)**x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-((((-0.87*x_10)*x_5)-sin((x_6**x_3)))-(cos(sqrt(abs(x_5)))-((x_5-x_12)*1.34)))),24.097335815429688,0.08482017368078232,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
705,56,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
706,56,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
707,56,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
708,56,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
709,56,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, x_5, *, x_5, *, sqrt, x_8, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(x_5-(x_5*(sqrt(abs(x_8))*(x_12/x_12))))),23.285552978515625,0.08521361649036407,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
710,56,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
711,56,"[-, *, -, *, sin, x_1, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",((((sin(x_1)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.2718505859375,0.06101404130458832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
712,56,"[-, -, -, x_5, x_12, -, x_12, **, x_5, cos, x_3, x_10]",(((x_5-x_12)-(x_12-(x_5**cos(x_3))))-x_10),21.218299865722656,0.09710783511400223,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
713,56,"[-, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, x_5, x_5, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-(x_5*x_5)))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),50.907623291015625,0.04792097210884094,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
714,56,"[-, *, -, *, *, x_8, x_12, *, x_1, x_10, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*(x_1*x_10))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.46134948730469,0.05493506044149399,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
715,56,"[*, /, *, *, *, 1.02, x_10, x_10, *, 1.34, x_10, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_12]",(((((1.02*x_10)*x_10)*(1.34*x_10))/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_12)))),87.66075897216797,0.03957747668027878,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
716,56,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, *, **, /, x_12, x_3, x_12, /, x_12, x_12, -, *, *, *, x_12, -2.73, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12/x_3)**x_12)*(x_12/x_12)))*((((x_12*-2.73)*x_10)*((1.02-x_12)/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),72.4713363647461,0.04080785810947418,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
717,56,"[*, /, *, -, x_12, *, x_10, x_12, **, 1.34, x_10, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, -, *, x_12, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34**x_10))/(((x_12/x_12)**x_1)*(x_12/x_12)))*(((x_12*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),62.44834518432617,0.04579949378967285,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
718,56,"[-, -, **, /, x_12, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, -, *, *, -0.87, x_10, x_5, sin, **, x_6, x_3, -, cos, sqrt, x_5, *, -, x_5, x_12, 1.34]",((((x_12/x_12)**x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-((((-0.87*x_10)*x_5)-sin((x_6**x_3)))-(cos(sqrt(abs(x_5)))-((x_5-x_12)*1.34)))),24.097335815429688,0.08482017368078232,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
719,56,"[*, *, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, /, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, -, *, *, x_12, x_12, /, x_12, x_10, x_12]",((((x_12-(x_10*x_12))*(1.34*x_10))*((x_12*x_10)*((1.02-x_12)/x_12)))*((((x_12*x_8)*x_10)-((x_12*x_10)*x_12))/(((x_12*x_12)*(x_12/x_10))-x_12))),66.54430389404297,0.04133351147174835,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
720,56,"[-, *, -, *, *, x_10, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_10, x_10, x_12]",(((((x_10*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_10*x_10)*x_12)))),37.2025032043457,0.054014503955841064,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
721,56,"[-, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, sin, **, x_12, x_12, *, *, x_12, x_10, *, x_1, x_10]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(sin((x_12**x_12))-((x_12*x_10)*(x_1*x_10))))),62.86233901977539,0.04329407960176468,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
722,56,"[*, /, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, *, **, /, x_12, x_3, x_12, /, x_12, x_12, -, *, *, *, x_12, -2.73, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12*x_8)*x_10)-((x_12*x_10)*x_12))/(((x_12/x_3)**x_12)*(x_12/x_12)))*((((x_12*-2.73)*x_10)*((1.02-x_12)/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),73.59213256835938,0.03968406468629837,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
723,56,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(1.34-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),25.311195373535156,0.0626821219921112,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
724,57,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
725,57,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
726,57,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
727,57,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
728,57,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
729,57,"[-, *, -, *, sin, x_1, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",((((sin(x_1)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.2718505859375,0.06101404130458832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
730,57,"[-, -, -, x_5, x_12, -, x_12, **, x_5, cos, x_3, x_10]",(((x_5-x_12)-(x_12-(x_5**cos(x_3))))-x_10),21.218299865722656,0.09710783511400223,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
731,57,"[-, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, x_5, x_5, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-(x_5*x_5)))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),50.907623291015625,0.04792097210884094,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
732,57,"[-, *, -, *, *, x_8, x_12, *, x_1, x_10, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*(x_1*x_10))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.46134948730469,0.05493506044149399,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
733,57,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, *, **, /, x_12, x_3, x_12, /, x_12, x_12, -, *, *, *, x_12, -2.73, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12/x_3)**x_12)*(x_12/x_12)))*((((x_12*-2.73)*x_10)*((1.02-x_12)/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),72.4713363647461,0.04080785810947418,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
734,57,"[*, *, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, /, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, -, *, *, x_12, x_12, /, x_12, x_10, x_12]",((((x_12-(x_10*x_12))*(1.34*x_10))*((x_12*x_10)*((1.02-x_12)/x_12)))*((((x_12*x_8)*x_10)-((x_12*x_10)*x_12))/(((x_12*x_12)*(x_12/x_10))-x_12))),66.54430389404297,0.04133351147174835,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
735,57,"[-, *, -, *, *, x_10, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_10, x_10, x_12]",(((((x_10*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_10*x_10)*x_12)))),37.2025032043457,0.054014503955841064,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
736,57,"[-, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, sin, **, x_12, x_12, *, *, x_12, x_10, *, x_1, x_10]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(sin((x_12**x_12))-((x_12*x_10)*(x_1*x_10))))),62.86233901977539,0.04329407960176468,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
737,57,"[*, /, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, *, **, /, x_12, x_3, x_12, /, x_12, x_12, -, *, *, *, x_12, -2.73, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12*x_8)*x_10)-((x_12*x_10)*x_12))/(((x_12/x_3)**x_12)*(x_12/x_12)))*((((x_12*-2.73)*x_10)*((1.02-x_12)/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),73.59213256835938,0.03968406468629837,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
738,57,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(1.34-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),25.311195373535156,0.0626821219921112,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
739,57,"[-, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(x_5*((x_12*x_10)*(x_12/x_12))))-(1.34-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),44.76533126831055,0.04890681058168411,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
740,57,"[-, -, -, x_5, x_12, -, x_12, **, x_5, 1.02, sin, **, cos, x_10, *, *, x_12, x_10, *, x_12, x_10]",(((x_5-x_12)-(x_12-(x_5**1.02)))-sin((cos(x_10)**((x_12*x_10)*(x_12*x_10))))),22.047056198120117,0.0794217586517334,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
741,57,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, -0.87, *, *, x_12, x_10, /, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_12]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*-0.87)-((x_12*x_10)*(x_12/x_12)))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_12)))),84.71499633789062,0.03915392607450485,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
742,57,"[-, *, -, *, *, x_9, x_12, sin, x_12, -, x_12, x_5, 1.34, -, *, *, *, x_12, x_10, x_10, /, x_12, x_12, -, *, *, x_10, x_12, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_9*x_12)*sin(x_12))-(x_12-x_5))*1.34)-((((x_12*x_10)*x_10)*(x_12/x_12))-(((x_10*x_12)*x_10)-((x_12*x_10)*(x_1*x_10))))),43.94780731201172,0.05395251512527466,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
743,57,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, **, /, x_12, x_12, x_1, *, x_10, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_12/x_12)**x_1)*(x_10*x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),57.881168365478516,0.04332158714532852,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
744,57,"[-, -, -, *, *, x_1, x_10, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, x_5, x_5, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_10, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_1*x_10)*x_12)-x_12)-(((x_12*x_10)*(x_12/x_12))-(x_5*x_5)))-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_10)*x_10)-((x_12*x_10)*(x_1*x_10))))),55.98141098022461,0.04627581685781479,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
745,58,"[-, *, -, *, *, x_9, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_9*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.63691711425781,0.059938617050647736,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
746,58,"[-, *, -, *, *, x_12, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_10, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_10))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.78276443481445,0.054329562932252884,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
747,58,"[-, *, -, 1.34, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((1.34-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.54166793823242,0.0602065846323967,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
748,58,"[-, *, -, *, *, x_8, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.66320037841797,0.05815961956977844,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
749,58,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
750,58,"[-, *, -, *, sin, x_1, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",((((sin(x_1)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),34.2718505859375,0.06101404130458832,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
751,58,"[-, -, -, x_5, x_12, -, x_12, **, x_5, cos, x_3, x_10]",(((x_5-x_12)-(x_12-(x_5**cos(x_3))))-x_10),21.218299865722656,0.09710783511400223,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
752,58,"[-, *, -, *, *, x_8, x_12, *, x_1, x_10, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_8*x_12)*(x_1*x_10))-(x_12-x_5))*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),35.46134948730469,0.05493506044149399,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
753,58,"[*, /, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, *, **, /, x_12, x_3, x_12, /, x_12, x_12, -, *, *, *, x_12, -2.73, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_12-(x_10*x_12))*(1.34*x_10))/(((x_12/x_3)**x_12)*(x_12/x_12)))*((((x_12*-2.73)*x_10)*((1.02-x_12)/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),72.4713363647461,0.04080785810947418,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
754,58,"[*, *, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, /, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, -, *, *, x_12, x_12, /, x_12, x_10, x_12]",((((x_12-(x_10*x_12))*(1.34*x_10))*((x_12*x_10)*((1.02-x_12)/x_12)))*((((x_12*x_8)*x_10)-((x_12*x_10)*x_12))/(((x_12*x_12)*(x_12/x_10))-x_12))),66.54430389404297,0.04133351147174835,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
755,58,"[-, *, -, *, *, x_10, x_12, sin, x_1, -, x_12, x_5, 1.34, -, *, **, /, x_12, x_12, sin, x_12, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_10, x_10, x_12]",(((((x_10*x_12)*sin(x_1))-(x_12-x_5))*1.34)-((((x_12/x_12)**sin(x_12))*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_10*x_10)*x_12)))),37.2025032043457,0.054014503955841064,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
756,58,"[-, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, sin, **, x_12, x_12, *, *, x_12, x_10, *, x_1, x_10]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(sin((x_12**x_12))-((x_12*x_10)*(x_1*x_10))))),62.86233901977539,0.04329407960176468,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
757,58,"[*, /, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, *, **, /, x_12, x_3, x_12, /, x_12, x_12, -, *, *, *, x_12, -2.73, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12*x_8)*x_10)-((x_12*x_10)*x_12))/(((x_12/x_3)**x_12)*(x_12/x_12)))*((((x_12*-2.73)*x_10)*((1.02-x_12)/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),73.59213256835938,0.03968406468629837,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
758,58,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(1.34-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),25.311195373535156,0.0626821219921112,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
759,58,"[-, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(x_5*((x_12*x_10)*(x_12/x_12))))-(1.34-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),44.76533126831055,0.04890681058168411,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
760,58,"[-, -, -, x_5, x_12, -, x_12, **, x_5, 1.02, sin, **, cos, x_10, *, *, x_12, x_10, *, x_12, x_10]",(((x_5-x_12)-(x_12-(x_5**1.02)))-sin((cos(x_10)**((x_12*x_10)*(x_12*x_10))))),22.047056198120117,0.0794217586517334,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
761,58,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, -, *, *, x_1, x_10, -0.87, *, *, x_12, x_10, /, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_12]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_1*x_10)*-0.87)-((x_12*x_10)*(x_12/x_12)))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_12)))),84.71499633789062,0.03915392607450485,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
762,58,"[-, *, -, *, *, x_9, x_12, sin, x_12, -, x_12, x_5, 1.34, -, *, *, *, x_12, x_10, x_10, /, x_12, x_12, -, *, *, x_10, x_12, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((x_9*x_12)*sin(x_12))-(x_12-x_5))*1.34)-((((x_12*x_10)*x_10)*(x_12/x_12))-(((x_10*x_12)*x_10)-((x_12*x_10)*(x_1*x_10))))),43.94780731201172,0.05395251512527466,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
763,58,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, **, /, x_12, x_12, x_1, *, x_10, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_12/x_12)**x_1)*(x_10*x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),57.881168365478516,0.04332158714532852,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
764,58,"[-, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, *, *, x_10, x_12, x_10, *, *, x_12, x_10, *, x_1, x_10, -, *, **, sin, x_10, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(((x_10*x_12)*x_10)-((x_12*x_10)*(x_1*x_10))))-(((sin(x_10)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),87.36743927001953,0.038919948041439056,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
765,58,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, u-, sin, **3, x_11, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(-(sin((x_11)**3))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),25.14133071899414,0.07293455302715302,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
766,58,"[-, -, -, *, *, 2.54, x_10, x_10, x_12, *, **, /, x_12, x_12, x_1, x_12, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, *, *, x_12, x_7, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((2.54*x_10)*x_10)-x_12)-(((x_12/x_12)**x_1)*x_12))-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(((x_12*x_7)*x_10)-((x_12*x_10)*(x_1*x_10))))),48.826656341552734,0.0461198091506958,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
767,59,"[-, -, +, x_12, x_12, *, x_5, *, *, x_10, x_10, /, x_12, x_12, *, 1.34, *, *, x_12, x_10, /, -, x_8, x_12, /, x_12, x_12]",(((x_12+x_12)-(x_5*((x_10*x_10)*(x_12/x_12))))-(1.34*((x_12*x_10)*((x_8-x_12)/(x_12/x_12))))),30.133785247802734,0.06259222328662872,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
768,59,"[-, -, -, x_5, x_12, -, x_12, **, x_5, cos, x_3, x_10]",(((x_5-x_12)-(x_12-(x_5**cos(x_3))))-x_10),21.218299865722656,0.09710783511400223,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
769,59,"[*, *, *, -, x_12, *, x_10, x_12, *, 1.34, x_10, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, /, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, -, *, *, x_12, x_12, /, x_12, x_10, x_12]",((((x_12-(x_10*x_12))*(1.34*x_10))*((x_12*x_10)*((1.02-x_12)/x_12)))*((((x_12*x_8)*x_10)-((x_12*x_10)*x_12))/(((x_12*x_12)*(x_12/x_10))-x_12))),66.54430389404297,0.04133351147174835,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
770,59,"[-, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, sin, **, x_12, x_12, *, *, x_12, x_10, *, x_1, x_10]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(sin((x_12**x_12))-((x_12*x_10)*(x_1*x_10))))),62.86233901977539,0.04329407960176468,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
771,59,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(1.34-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),25.311195373535156,0.0626821219921112,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
772,59,"[-, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, 1.34, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(x_5*((x_12*x_10)*(x_12/x_12))))-(1.34-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),44.76533126831055,0.04890681058168411,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
773,59,"[-, -, -, x_5, x_12, -, x_12, **, x_5, 1.02, sin, **, cos, x_10, *, *, x_12, x_10, *, x_12, x_10]",(((x_5-x_12)-(x_12-(x_5**1.02)))-sin((cos(x_10)**((x_12*x_10)*(x_12*x_10))))),22.047056198120117,0.0794217586517334,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
774,59,"[*, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, **, /, x_12, x_12, x_1, *, x_10, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))*((((x_12/x_12)**x_1)*(x_10*x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),57.881168365478516,0.04332158714532852,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
775,59,"[-, -, +, x_12, x_12, *, x_5, *, *, x_12, x_10, /, x_12, x_12, -, u-, sin, **3, x_11, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((x_12+x_12)-(x_5*((x_12*x_10)*(x_12/x_12))))-(-(sin((x_11)**3))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),25.14133071899414,0.07293455302715302,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
776,59,"[-, -, -, *, *, 2.54, x_10, x_10, x_12, *, **, /, x_12, x_12, x_1, x_12, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, *, *, x_12, x_7, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((2.54*x_10)*x_10)-x_12)-(((x_12/x_12)**x_1)*x_12))-((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(((x_12*x_7)*x_10)-((x_12*x_10)*(x_1*x_10))))),48.826656341552734,0.0461198091506958,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
777,59,"[-, /, *, -, x_10, *, x_10, x_12, x_12, -, *, *, x_12, x_12, /, x_12, x_12, x_12, -, *, *, 1.34, *, x_12, x_10, *, *, x_12, x_12, /, x_12, x_10, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, *, x_1, x_10]",((((x_10-(x_10*x_12))*x_12)/(((x_12*x_12)*(x_12/x_12))-x_12))-(((1.34*(x_12*x_10))*((x_12*x_12)*(x_12/x_10)))-(((x_12*x_8)*x_10)-((x_12*x_10)*(x_1*x_10))))),75.58785247802734,0.03859739750623703,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
778,59,"[-, -, *, *, *, x_12, x_10, *, x_12, x_10, /, x_12, x_12, -, *, *, x_10, x_12, x_10, *, *, x_12, x_10, x_12, -, *, **, sin, x_10, x_1, /, x_12, x_12, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12]",(((((x_12*x_10)*(x_12*x_10))*(x_12/x_12))-(((x_10*x_12)*x_10)-((x_12*x_10)*x_12)))-(((sin(x_10)**x_1)*(x_12/x_12))-(((x_12*x_8)*x_10)-((x_12*x_10)*x_12)))),71.00091552734375,0.039179325103759766,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
779,59,"[*, /, -, *, *, x_12, x_8, x_10, *, *, x_12, x_10, x_12, *, **, /, x_12, x_3, x_12, /, x_12, *, x_10, x_12, -, *, *, *, x_12, -2.73, x_10, /, -, 1.02, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5]",(((((x_12*x_8)*x_10)-((x_12*x_10)*x_12))/(((x_12/x_3)**x_12)*(x_12/(x_10*x_12))))*((((x_12*-2.73)*x_10)*((1.02-x_12)/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5)))),75.94393920898438,0.03845639526844025,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
780,59,"[-, -, -, *, *, 2.54, x_10, x_10, x_12, *, **, /, x_12, x_12, x_1, x_12, -, *, *, *, x_12, x_10, /, x_12, x_12, /, x_12, x_12, -, *, *, x_12, x_7, x_10, *, *, x_12, x_10, *, x_1, x_10]",(((((2.54*x_10)*x_10)-x_12)-(((x_12/x_12)**x_1)*x_12))-((((x_12*x_10)*(x_12/x_12))*(x_12/x_12))-(((x_12*x_7)*x_10)-((x_12*x_10)*(x_1*x_10))))),51.773956298828125,0.04500661790370941,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
781,59,"[-, *, -, *, *, x_12, x_10, x_5, x_12, 1.34, -, *, **, /, x_12, x_12, x_1, /, x_12, x_12, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_12]",(((((x_12*x_10)*x_5)-x_12)*1.34)-((((x_12/x_12)**x_1)*(x_12/x_12))-(((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_12)))),33.724830627441406,0.05195292830467224,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
782,59,"[*, *, -, **, /, x_12, x_12, x_1, *, *, x_12, x_10, x_12, *, *, x_12, x_10, /, -, 1.02, x_12, x_12, *, -, *, *, x_12, x_10, /, x_12, x_12, *, *, -0.87, x_10, x_5, *, x_12, /, -, 1.02, x_12, x_12]",(((((x_12/x_12)**x_1)-((x_12*x_10)*x_12))*((x_12*x_10)*((1.02-x_12)/x_12)))*((((x_12*x_10)*(x_12/x_12))-((-0.87*x_10)*x_5))*(x_12*((1.02-x_12)/x_12)))),65.25031280517578,0.04308582842350006,201,210,60,210,not_specified,neuralnet-counts-feynman,not_specified,not_specified,boston
